# Makefile.in generated by automake 1.13.3 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@



VPATH = @srcdir@
am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
bin_PROGRAMS = ustacks$(EXEEXT) pstacks$(EXEEXT) estacks$(EXEEXT) \
	cstacks$(EXEEXT) sstacks$(EXEEXT) hstacks$(EXEEXT) \
	process_radtags$(EXEEXT) process_shortreads$(EXEEXT) \
	kmer_filter$(EXEEXT) clone_filter$(EXEEXT) genotypes$(EXEEXT) \
	populations$(EXEEXT) phasedstacks$(EXEEXT)
subdir = .
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(top_srcdir)/configure $(am__configure_deps) \
	$(srcdir)/config.h.in $(dist_bin_SCRIPTS) \
	$(dist_noinst_SCRIPTS) $(top_srcdir)/config/depcomp \
	$(top_srcdir)/config/test-driver ChangeLog INSTALL README \
	config/compile config/depcomp config/install-sh config/missing \
	$(top_srcdir)/config/compile $(top_srcdir)/config/install-sh \
	$(top_srcdir)/config/missing
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(pkgdatadir)"
PROGRAMS = $(bin_PROGRAMS)
am__dirstamp = $(am__leading_dot)dirstamp
am_clone_filter_OBJECTS = src/clone_filter.$(OBJEXT) \
	src/kmers.$(OBJEXT) src/input.$(OBJEXT)
clone_filter_OBJECTS = $(am_clone_filter_OBJECTS)
clone_filter_LDADD = $(LDADD)
am_cstacks_OBJECTS = src/cstacks-cstacks.$(OBJEXT) \
	src/cstacks-stacks.$(OBJEXT) src/cstacks-locus.$(OBJEXT) \
	src/cstacks-kmers.$(OBJEXT) src/cstacks-utils.$(OBJEXT) \
	src/cstacks-DNASeq.$(OBJEXT) src/cstacks-DNANSeq.$(OBJEXT) \
	src/cstacks-input.$(OBJEXT)
cstacks_OBJECTS = $(am_cstacks_OBJECTS)
cstacks_LDADD = $(LDADD)
cstacks_LINK = $(CXXLD) $(cstacks_CXXFLAGS) $(CXXFLAGS) \
	$(cstacks_LDFLAGS) $(LDFLAGS) -o $@
am_estacks_OBJECTS = src/estacks-estacks.$(OBJEXT) \
	src/estacks-stacks.$(OBJEXT) src/estacks-mstack.$(OBJEXT) \
	src/estacks-models.$(OBJEXT) src/estacks-utils.$(OBJEXT) \
	src/estacks-DNASeq.$(OBJEXT) src/estacks-DNANSeq.$(OBJEXT) \
	src/estacks-input.$(OBJEXT)
estacks_OBJECTS = $(am_estacks_OBJECTS)
estacks_LDADD = $(LDADD)
estacks_LINK = $(CXXLD) $(estacks_CXXFLAGS) $(CXXFLAGS) \
	$(estacks_LDFLAGS) $(LDFLAGS) -o $@
am_genotypes_OBJECTS = src/genotypes-genotypes.$(OBJEXT) \
	src/genotypes-utils.$(OBJEXT) \
	src/genotypes-catalog_utils.$(OBJEXT) \
	src/genotypes-log_utils.$(OBJEXT) \
	src/genotypes-stacks.$(OBJEXT) src/genotypes-locus.$(OBJEXT) \
	src/genotypes-DNASeq.$(OBJEXT) src/genotypes-DNANSeq.$(OBJEXT) \
	src/genotypes-input.$(OBJEXT)
genotypes_OBJECTS = $(am_genotypes_OBJECTS)
genotypes_LDADD = $(LDADD)
genotypes_LINK = $(CXXLD) $(genotypes_CXXFLAGS) $(CXXFLAGS) \
	$(genotypes_LDFLAGS) $(LDFLAGS) -o $@
am_hstacks_OBJECTS = src/hstacks-hstacks.$(OBJEXT) \
	src/hstacks-stacks.$(OBJEXT) src/hstacks-locus.$(OBJEXT) \
	src/hstacks-kmers.$(OBJEXT) src/hstacks-DNASeq.$(OBJEXT) \
	src/hstacks-DNANSeq.$(OBJEXT) src/hstacks-input.$(OBJEXT)
hstacks_OBJECTS = $(am_hstacks_OBJECTS)
hstacks_LDADD = $(LDADD)
hstacks_LINK = $(CXXLD) $(hstacks_CXXFLAGS) $(CXXFLAGS) \
	$(hstacks_LDFLAGS) $(LDFLAGS) -o $@
am_kmer_filter_OBJECTS = src/kmer_filter-kmer_filter.$(OBJEXT) \
	src/kmer_filter-utils.$(OBJEXT) \
	src/kmer_filter-write.$(OBJEXT) \
	src/kmer_filter-kmers.$(OBJEXT) \
	src/kmer_filter-input.$(OBJEXT)
kmer_filter_OBJECTS = $(am_kmer_filter_OBJECTS)
kmer_filter_LDADD = $(LDADD)
kmer_filter_LINK = $(CXXLD) $(kmer_filter_CXXFLAGS) $(CXXFLAGS) \
	$(kmer_filter_LDFLAGS) $(LDFLAGS) -o $@
am_phasedstacks_OBJECTS = src/phasedstacks-phasedstacks.$(OBJEXT) \
	src/phasedstacks-locus.$(OBJEXT) \
	src/phasedstacks-input.$(OBJEXT) \
	src/phasedstacks-log_utils.$(OBJEXT) \
	src/phasedstacks-utils.$(OBJEXT) \
	src/phasedstacks-catalog_utils.$(OBJEXT)
phasedstacks_OBJECTS = $(am_phasedstacks_OBJECTS)
phasedstacks_LDADD = $(LDADD)
phasedstacks_LINK = $(CXXLD) $(phasedstacks_CXXFLAGS) $(CXXFLAGS) \
	$(phasedstacks_LDFLAGS) $(LDFLAGS) -o $@
am_populations_OBJECTS = src/populations-populations.$(OBJEXT) \
	src/populations-utils.$(OBJEXT) \
	src/populations-catalog_utils.$(OBJEXT) \
	src/populations-log_utils.$(OBJEXT) \
	src/populations-stacks.$(OBJEXT) \
	src/populations-locus.$(OBJEXT) \
	src/populations-DNASeq.$(OBJEXT) \
	src/populations-DNANSeq.$(OBJEXT) \
	src/populations-input.$(OBJEXT)
populations_OBJECTS = $(am_populations_OBJECTS)
populations_LDADD = $(LDADD)
populations_LINK = $(CXXLD) $(populations_CXXFLAGS) $(CXXFLAGS) \
	$(populations_LDFLAGS) $(LDFLAGS) -o $@
am_process_radtags_OBJECTS =  \
	src/process_radtags-process_radtags.$(OBJEXT) \
	src/process_radtags-utils.$(OBJEXT) \
	src/process_radtags-log_utils.$(OBJEXT) \
	src/process_radtags-write.$(OBJEXT) \
	src/process_radtags-clean.$(OBJEXT) \
	src/process_radtags-file_io.$(OBJEXT) \
	src/process_radtags-input.$(OBJEXT)
process_radtags_OBJECTS = $(am_process_radtags_OBJECTS)
process_radtags_LDADD = $(LDADD)
process_radtags_LINK = $(CXXLD) $(process_radtags_CXXFLAGS) \
	$(CXXFLAGS) $(process_radtags_LDFLAGS) $(LDFLAGS) -o $@
am_process_shortreads_OBJECTS =  \
	src/process_shortreads-process_shortreads.$(OBJEXT) \
	src/process_shortreads-clean.$(OBJEXT) \
	src/process_shortreads-file_io.$(OBJEXT) \
	src/process_shortreads-utils.$(OBJEXT) \
	src/process_shortreads-log_utils.$(OBJEXT) \
	src/process_shortreads-write.$(OBJEXT) \
	src/process_shortreads-kmers.$(OBJEXT) \
	src/process_shortreads-input.$(OBJEXT)
process_shortreads_OBJECTS = $(am_process_shortreads_OBJECTS)
process_shortreads_LDADD = $(LDADD)
process_shortreads_LINK = $(CXXLD) $(process_shortreads_CXXFLAGS) \
	$(CXXFLAGS) $(process_shortreads_LDFLAGS) $(LDFLAGS) -o $@
am_pstacks_OBJECTS = src/pstacks-pstacks.$(OBJEXT) \
	src/pstacks-stacks.$(OBJEXT) src/pstacks-mstack.$(OBJEXT) \
	src/pstacks-DNANSeq.$(OBJEXT) src/pstacks-DNASeq.$(OBJEXT) \
	src/pstacks-models.$(OBJEXT) src/pstacks-utils.$(OBJEXT) \
	src/pstacks-input.$(OBJEXT)
pstacks_OBJECTS = $(am_pstacks_OBJECTS)
am__DEPENDENCIES_1 =
pstacks_DEPENDENCIES = $(am__DEPENDENCIES_1)
pstacks_LINK = $(CXXLD) $(pstacks_CXXFLAGS) $(CXXFLAGS) \
	$(pstacks_LDFLAGS) $(LDFLAGS) -o $@
am_sstacks_OBJECTS = src/sstacks-sstacks.$(OBJEXT) \
	src/sstacks-stacks.$(OBJEXT) src/sstacks-locus.$(OBJEXT) \
	src/sstacks-DNASeq.$(OBJEXT) src/sstacks-DNANSeq.$(OBJEXT) \
	src/sstacks-utils.$(OBJEXT) src/sstacks-input.$(OBJEXT)
sstacks_OBJECTS = $(am_sstacks_OBJECTS)
sstacks_LDADD = $(LDADD)
sstacks_LINK = $(CXXLD) $(sstacks_CXXFLAGS) $(CXXFLAGS) \
	$(sstacks_LDFLAGS) $(LDFLAGS) -o $@
am_ustacks_OBJECTS = src/ustacks-ustacks.$(OBJEXT) \
	src/ustacks-stacks.$(OBJEXT) src/ustacks-mstack.$(OBJEXT) \
	src/ustacks-mst.$(OBJEXT) src/ustacks-cmb.$(OBJEXT) \
	src/ustacks-DNASeq.$(OBJEXT) src/ustacks-DNANSeq.$(OBJEXT) \
	src/ustacks-models.$(OBJEXT) src/ustacks-utils.$(OBJEXT) \
	src/ustacks-kmers.$(OBJEXT) src/ustacks-input.$(OBJEXT)
ustacks_OBJECTS = $(am_ustacks_OBJECTS)
ustacks_LDADD = $(LDADD)
ustacks_LINK = $(CXXLD) $(ustacks_CXXFLAGS) $(CXXFLAGS) \
	$(ustacks_LDFLAGS) $(LDFLAGS) -o $@
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
SCRIPTS = $(dist_bin_SCRIPTS) $(dist_noinst_SCRIPTS)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(clone_filter_SOURCES) $(cstacks_SOURCES) \
	$(estacks_SOURCES) $(genotypes_SOURCES) $(hstacks_SOURCES) \
	$(kmer_filter_SOURCES) $(phasedstacks_SOURCES) \
	$(populations_SOURCES) $(process_radtags_SOURCES) \
	$(process_shortreads_SOURCES) $(pstacks_SOURCES) \
	$(sstacks_SOURCES) $(ustacks_SOURCES)
DIST_SOURCES = $(clone_filter_SOURCES) $(cstacks_SOURCES) \
	$(estacks_SOURCES) $(genotypes_SOURCES) $(hstacks_SOURCES) \
	$(kmer_filter_SOURCES) $(phasedstacks_SOURCES) \
	$(populations_SOURCES) $(process_radtags_SOURCES) \
	$(process_shortreads_SOURCES) $(pstacks_SOURCES) \
	$(sstacks_SOURCES) $(ustacks_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
DATA = $(nobase_pkgdata_DATA)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) \
	$(LISP)config.h.in
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
CSCOPE = cscope
AM_RECURSIVE_TARGETS = cscope check recheck
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS = @EXEEXT@ .test
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:@EXEEXT@.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/config/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  if test -d "$(distdir)"; then \
    find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
      && rm -rf "$(distdir)" \
      || { sleep 5 && rm -rf "$(distdir)"; }; \
  else :; fi
am__post_remove_distdir = $(am__remove_distdir)
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
DIST_TARGETS = dist-gzip
distuninstallcheck_listfiles = find . -type f -print
am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \
  | sed 's|^\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'
distcleancheck_listfiles = find . -type f -print
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BAM_CFLAGS = @BAM_CFLAGS@
BAM_LIBS = @BAM_LIBS@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
GREP = @GREP@
HAVE_CXX11 = @HAVE_CXX11@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
OBJEXT = @OBJEXT@
OPENMP_CFLAGS = @OPENMP_CFLAGS@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SPARSEHASH_CFLAGS = @SPARSEHASH_CFLAGS@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build_alias = @build_alias@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host_alias = @host_alias@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
ustacks_SOURCES = src/ustacks.h src/ustacks.cc src/stacks.h src/stacks.cc src/constants.h \
	src/mstack.h src/mstack.cc src/mst.h src/mst.cc src/cmb.h src/cmb.cc \
	src/DNASeq.h src/DNASeq.cc src/DNANSeq.h src/DNANSeq.cc \
	src/models.h src/models.cc src/utils.h src/utils.cc \
	src/kmers.h src/kmers.cc \
	src/input.h src/input.cc src/Tsv.h src/BowtieI.h src/FastaI.h src/FastqI.h src/SamI.h \
	src/gzFasta.h src/gzFastq.h

pstacks_SOURCES = src/pstacks.h src/pstacks.cc src/stacks.h src/stacks.cc src/constants.h \
	src/mstack.h src/mstack.cc \
	src/DNANSeq.h src/DNANSeq.cc src/DNASeq.h src/DNASeq.cc \
	src/models.h src/models.cc src/utils.h src/utils.cc \
	src/input.h src/input.cc src/Tsv.h src/BowtieI.h src/FastaI.h src/FastqI.h src/SamI.h \
	src/BamI.h

estacks_SOURCES = src/estacks.h src/estacks.cc src/stacks.h src/stacks.cc src/constants.h \
	src/mstack.h src/mstack.cc \
        src/models.h src/models.cc src/utils.h src/utils.cc \
	src/DNASeq.h src/DNASeq.cc src/DNANSeq.h src/DNANSeq.cc \
        src/input.h src/input.cc src/Tsv.h src/BowtieI.h src/FastaI.h src/FastqI.h src/SamI.h

cstacks_SOURCES = src/cstacks.h src/cstacks.cc src/constants.h \
	src/stacks.h src/stacks.cc src/locus.h src/locus.cc \
	src/kmers.h src/kmers.cc src/utils.h src/utils.cc \
	src/DNASeq.h src/DNASeq.cc src/DNANSeq.h src/DNANSeq.cc \
	src/input.h src/input.cc src/sql_utilities.h

hstacks_SOURCES = src/hstacks.h src/hstacks.cc src/constants.h \
	src/stacks.h src/stacks.cc src/locus.h src/locus.cc \
	src/kmers.h src/kmers.cc \
	src/DNASeq.h src/DNASeq.cc src/DNANSeq.h src/DNANSeq.cc \
	src/input.h src/input.cc src/sql_utilities.h

sstacks_SOURCES = src/sstacks.h src/sstacks.cc src/constants.h \
	src/stacks.h src/stacks.cc src/locus.h src/locus.cc \
	src/DNASeq.h src/DNASeq.cc src/DNANSeq.h src/DNANSeq.cc src/utils.h src/utils.cc \
	src/input.h src/input.cc src/sql_utilities.h

process_radtags_SOURCES = src/process_radtags.h src/process_radtags.cc src/constants.h \
	src/utils.h src/utils.cc src/log_utils.h src/log_utils.cc \
	src/write.h src/write.cc \
	src/clean.h src/clean.cc \
	src/file_io.h src/file_io.cc \
	src/input.h src/input.cc src/BustardI.h src/FastqI.h src/gzFastq.h src/renz.h

process_shortreads_SOURCES = src/process_shortreads.h src/process_shortreads.cc src/constants.h \
	src/clean.h src/clean.cc \
	src/file_io.h src/file_io.cc \
	src/utils.h src/utils.cc src/log_utils.h src/log_utils.cc \
	src/write.h src/write.cc \
	src/kmers.h src/kmers.cc \
	src/input.h src/input.cc src/BustardI.h src/FastqI.h src/gzFastq.h 

kmer_filter_SOURCES = src/kmer_filter.h src/kmer_filter.cc src/constants.h \
	src/utils.h src/utils.cc \
	src/write.h src/write.cc \
	src/kmers.h src/kmers.cc \
	src/input.h src/input.cc src/BustardI.h src/FastqI.h src/FastaI.h \
	src/gzFastq.h src/gzFasta.h

clone_filter_SOURCES = src/clone_filter.h src/clone_filter.cc src/constants.h \
	src/kmers.h src/kmers.cc \
	src/input.h src/input.cc src/BustardI.h src/FastqI.h src/FastaI.h \
	src/gzFastq.h src/gzFasta.h

genotypes_SOURCES = src/genotypes.h src/genotypes.cc src/constants.h \
	src/utils.h src/utils.cc src/catalog_utils.h src/catalog_utils.cc \
	src/log_utils.h src/log_utils.cc \
	src/stacks.h src/stacks.cc src/locus.h src/locus.cc \
	src/DNASeq.h src/DNASeq.cc src/DNANSeq.h src/DNANSeq.cc \
	src/PopMap.h src/genotype_dictionaries.h \
	src/input.h src/input.cc src/sql_utilities.h src/renz.h

populations_SOURCES = src/populations.h src/populations.cc src/constants.h \
	src/utils.h src/utils.cc src/catalog_utils.h src/catalog_utils.cc \
	src/log_utils.h src/log_utils.cc \
	src/stacks.h src/stacks.cc src/locus.h src/locus.cc \
	src/DNASeq.h src/DNASeq.cc src/DNANSeq.h src/DNANSeq.cc \
	src/PopMap.h src/PopSum.h src/genotype_dictionaries.h \
	src/input.h src/input.cc src/sql_utilities.h src/renz.h \
	src/bootstrap.h src/ordered.h src/smoothed.h

phasedstacks_SOURCES = src/phasedstacks.h src/phasedstacks.cc src/constants.h \
	src/locus.h src/locus.cc \
	src/input.h src/input.cc src/sql_utilities.h \
	src/log_utils.h src/log_utils.cc \
	src/utils.h src/utils.cc src/catalog_utils.h src/catalog_utils.cc 

ustacks_CXXFLAGS = $(OPENMP_CFLAGS) $(SPARSEHASH_CFLAGS)
ustacks_LDFLAGS = $(OPENMP_CFLAGS)
pstacks_CXXFLAGS = $(OPENMP_CFLAGS) $(BAM_CFLAGS) $(SPARSEHASH_CFLAGS)
pstacks_LDFLAGS = $(OPENMP_CFLAGS)
pstacks_LDADD = $(BAM_LIBS)
estacks_CXXFLAGS = $(OPENMP_CFLAGS) $(SPARSEHASH_CFLAGS)
estacks_LDFLAGS = $(OPENMP_CFLAGS)
cstacks_CXXFLAGS = $(OPENMP_CFLAGS) $(SPARSEHASH_CFLAGS)
cstacks_LDFLAGS = $(OPENMP_CFLAGS)
hstacks_CXXFLAGS = $(OPENMP_CFLAGS) $(SPARSEHASH_CFLAGS)
hstacks_LDFLAGS = $(OPENMP_CFLAGS)
sstacks_CXXFLAGS = $(OPENMP_CFLAGS) $(SPARSEHASH_CFLAGS)
sstacks_LDFLAGS = $(OPENMP_CFLAGS)
process_radtags_CXXFLAGS = $(OPENMP_CFLAGS) $(SPARSEHASH_CFLAGS)
process_radtags_LDFLAGS = $(OPENMP_CFLAGS)
process_shortreads_CXXFLAGS = $(OPENMP_CFLAGS) $(SPARSEHASH_CFLAGS)
process_shortreads_LDFLAGS = $(OPENMP_CFLAGS)
kmer_filter_CXXFLAGS = $(OPENMP_CFLAGS) $(SPARSEHASH_CFLAGS)
kmer_filter_LDFLAGS = $(OPENMP_CFLAGS)
genotypes_CXXFLAGS = $(OPENMP_CFLAGS) $(SPARSEHASH_CFLAGS)
genotypes_LDFLAGS = $(OPENMP_CFLAGS)
populations_CXXFLAGS = $(OPENMP_CFLAGS) $(SPARSEHASH_CFLAGS)
populations_LDFLAGS = $(OPENMP_CFLAGS)
phasedstacks_CXXFLAGS = $(OPENMP_CFLAGS) $(SPARSEHASH_CFLAGS)
phasedstacks_LDFLAGS = $(OPENMP_CFLAGS)
dist_bin_SCRIPTS = scripts/denovo_map.pl scripts/ref_map.pl scripts/export_sql.pl \
	scripts/sort_read_pairs.pl scripts/exec_velvet.pl scripts/load_sequences.pl \
	scripts/index_radtags.pl scripts/load_radtags.pl scripts/stacks_export_notify.pl

dist_noinst_SCRIPTS = autogen.sh scripts/extract_interpop_chars.pl
nobase_pkgdata_DATA = sql/mysql.cnf.dist sql/catalog_index.sql sql/stacks.sql sql/tag_index.sql sql/chr_index.sql \
	php/CatalogClass.php php/annotate_marker.php php/constants.php.dist php/index.php php/tags.php \
	php/Locus.php php/catalog.php php/correct_genotypes.php php/correct_genotype.php php/export_batch.php php/last_modified.php  \
	php/version.php php/catalog_genotypes.php php/db_functions.php php/header.php php/samples.php \
	php/stacks_functions.php php/view_sequence.php php/catalog_tag.php php/sequence_blast.php php/tag.php \
	php/ajax.js php/annotate.js php/stacks.js php/export.js php/stacks.css \
	php/images/caret-d.png php/images/caret-u.png php/images/excel_icon.png php/images/l-arrow-disabled.png \
	php/images/l-arrow.png php/images/r-arrow-disabled.png php/images/r-arrow.png php/images/stacks_bg.png \
	php/images/stacks_logo_rev_small.png

LOG_DRIVER = env AM_TAP_AWK='$(AWK)' $(SHELL) $(abs_top_srcdir)/tests/tap-driver.sh

#TESTS = tests/process_radtags.t tests/kmer_filter.t tests/ustacks.t tests/pstacks.t tests/ref_map.t
TESTS = tests/process_radtags.t tests/kmer_filter.t tests/ustacks.t tests/pstacks.t
EXTRA_DIST = $(nobase_pkgdata_DATA) LICENSE INSTALL README ChangeLog $(TESTS)
pkglocalstatedir = $(localstatedir)/$(PACKAGE)
all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .cc .log .o .obj .test .test$(EXEEXT) .trs
am--refresh: Makefile
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):

config.h: stamp-h1
	@if test ! -f $@; then rm -f stamp-h1; else :; fi
	@if test ! -f $@; then $(MAKE) $(AM_MAKEFLAGS) stamp-h1; else :; fi

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status config.h
$(srcdir)/config.h.in:  $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
src/$(am__dirstamp):
	@$(MKDIR_P) src
	@: > src/$(am__dirstamp)
src/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/$(DEPDIR)
	@: > src/$(DEPDIR)/$(am__dirstamp)
src/clone_filter.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/kmers.$(OBJEXT): src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/input.$(OBJEXT): src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)

clone_filter$(EXEEXT): $(clone_filter_OBJECTS) $(clone_filter_DEPENDENCIES) $(EXTRA_clone_filter_DEPENDENCIES) 
	@rm -f clone_filter$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(clone_filter_OBJECTS) $(clone_filter_LDADD) $(LIBS)
src/cstacks-cstacks.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/cstacks-stacks.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/cstacks-locus.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/cstacks-kmers.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/cstacks-utils.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/cstacks-DNASeq.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/cstacks-DNANSeq.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/cstacks-input.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)

cstacks$(EXEEXT): $(cstacks_OBJECTS) $(cstacks_DEPENDENCIES) $(EXTRA_cstacks_DEPENDENCIES) 
	@rm -f cstacks$(EXEEXT)
	$(AM_V_CXXLD)$(cstacks_LINK) $(cstacks_OBJECTS) $(cstacks_LDADD) $(LIBS)
src/estacks-estacks.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/estacks-stacks.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/estacks-mstack.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/estacks-models.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/estacks-utils.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/estacks-DNASeq.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/estacks-DNANSeq.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/estacks-input.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)

estacks$(EXEEXT): $(estacks_OBJECTS) $(estacks_DEPENDENCIES) $(EXTRA_estacks_DEPENDENCIES) 
	@rm -f estacks$(EXEEXT)
	$(AM_V_CXXLD)$(estacks_LINK) $(estacks_OBJECTS) $(estacks_LDADD) $(LIBS)
src/genotypes-genotypes.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/genotypes-utils.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/genotypes-catalog_utils.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/genotypes-log_utils.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/genotypes-stacks.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/genotypes-locus.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/genotypes-DNASeq.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/genotypes-DNANSeq.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/genotypes-input.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)

genotypes$(EXEEXT): $(genotypes_OBJECTS) $(genotypes_DEPENDENCIES) $(EXTRA_genotypes_DEPENDENCIES) 
	@rm -f genotypes$(EXEEXT)
	$(AM_V_CXXLD)$(genotypes_LINK) $(genotypes_OBJECTS) $(genotypes_LDADD) $(LIBS)
src/hstacks-hstacks.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/hstacks-stacks.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/hstacks-locus.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/hstacks-kmers.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/hstacks-DNASeq.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/hstacks-DNANSeq.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/hstacks-input.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)

hstacks$(EXEEXT): $(hstacks_OBJECTS) $(hstacks_DEPENDENCIES) $(EXTRA_hstacks_DEPENDENCIES) 
	@rm -f hstacks$(EXEEXT)
	$(AM_V_CXXLD)$(hstacks_LINK) $(hstacks_OBJECTS) $(hstacks_LDADD) $(LIBS)
src/kmer_filter-kmer_filter.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/kmer_filter-utils.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/kmer_filter-write.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/kmer_filter-kmers.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/kmer_filter-input.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)

kmer_filter$(EXEEXT): $(kmer_filter_OBJECTS) $(kmer_filter_DEPENDENCIES) $(EXTRA_kmer_filter_DEPENDENCIES) 
	@rm -f kmer_filter$(EXEEXT)
	$(AM_V_CXXLD)$(kmer_filter_LINK) $(kmer_filter_OBJECTS) $(kmer_filter_LDADD) $(LIBS)
src/phasedstacks-phasedstacks.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/phasedstacks-locus.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/phasedstacks-input.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/phasedstacks-log_utils.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/phasedstacks-utils.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/phasedstacks-catalog_utils.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)

phasedstacks$(EXEEXT): $(phasedstacks_OBJECTS) $(phasedstacks_DEPENDENCIES) $(EXTRA_phasedstacks_DEPENDENCIES) 
	@rm -f phasedstacks$(EXEEXT)
	$(AM_V_CXXLD)$(phasedstacks_LINK) $(phasedstacks_OBJECTS) $(phasedstacks_LDADD) $(LIBS)
src/populations-populations.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/populations-utils.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/populations-catalog_utils.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/populations-log_utils.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/populations-stacks.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/populations-locus.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/populations-DNASeq.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/populations-DNANSeq.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/populations-input.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)

populations$(EXEEXT): $(populations_OBJECTS) $(populations_DEPENDENCIES) $(EXTRA_populations_DEPENDENCIES) 
	@rm -f populations$(EXEEXT)
	$(AM_V_CXXLD)$(populations_LINK) $(populations_OBJECTS) $(populations_LDADD) $(LIBS)
src/process_radtags-process_radtags.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/process_radtags-utils.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/process_radtags-log_utils.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/process_radtags-write.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/process_radtags-clean.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/process_radtags-file_io.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/process_radtags-input.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)

process_radtags$(EXEEXT): $(process_radtags_OBJECTS) $(process_radtags_DEPENDENCIES) $(EXTRA_process_radtags_DEPENDENCIES) 
	@rm -f process_radtags$(EXEEXT)
	$(AM_V_CXXLD)$(process_radtags_LINK) $(process_radtags_OBJECTS) $(process_radtags_LDADD) $(LIBS)
src/process_shortreads-process_shortreads.$(OBJEXT):  \
	src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/process_shortreads-clean.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/process_shortreads-file_io.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/process_shortreads-utils.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/process_shortreads-log_utils.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/process_shortreads-write.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/process_shortreads-kmers.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/process_shortreads-input.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)

process_shortreads$(EXEEXT): $(process_shortreads_OBJECTS) $(process_shortreads_DEPENDENCIES) $(EXTRA_process_shortreads_DEPENDENCIES) 
	@rm -f process_shortreads$(EXEEXT)
	$(AM_V_CXXLD)$(process_shortreads_LINK) $(process_shortreads_OBJECTS) $(process_shortreads_LDADD) $(LIBS)
src/pstacks-pstacks.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/pstacks-stacks.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/pstacks-mstack.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/pstacks-DNANSeq.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/pstacks-DNASeq.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/pstacks-models.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/pstacks-utils.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/pstacks-input.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)

pstacks$(EXEEXT): $(pstacks_OBJECTS) $(pstacks_DEPENDENCIES) $(EXTRA_pstacks_DEPENDENCIES) 
	@rm -f pstacks$(EXEEXT)
	$(AM_V_CXXLD)$(pstacks_LINK) $(pstacks_OBJECTS) $(pstacks_LDADD) $(LIBS)
src/sstacks-sstacks.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/sstacks-stacks.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/sstacks-locus.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/sstacks-DNASeq.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/sstacks-DNANSeq.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/sstacks-utils.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/sstacks-input.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)

sstacks$(EXEEXT): $(sstacks_OBJECTS) $(sstacks_DEPENDENCIES) $(EXTRA_sstacks_DEPENDENCIES) 
	@rm -f sstacks$(EXEEXT)
	$(AM_V_CXXLD)$(sstacks_LINK) $(sstacks_OBJECTS) $(sstacks_LDADD) $(LIBS)
src/ustacks-ustacks.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/ustacks-stacks.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/ustacks-mstack.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/ustacks-mst.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/ustacks-cmb.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/ustacks-DNASeq.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/ustacks-DNANSeq.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/ustacks-models.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/ustacks-utils.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/ustacks-kmers.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/ustacks-input.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)

ustacks$(EXEEXT): $(ustacks_OBJECTS) $(ustacks_DEPENDENCIES) $(EXTRA_ustacks_DEPENDENCIES) 
	@rm -f ustacks$(EXEEXT)
	$(AM_V_CXXLD)$(ustacks_LINK) $(ustacks_OBJECTS) $(ustacks_LDADD) $(LIBS)
install-dist_binSCRIPTS: $(dist_bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	@list='$(dist_bin_SCRIPTS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-dist_binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_bin_SCRIPTS)'; test -n "$(bindir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	dir='$(DESTDIR)$(bindir)'; $(am__uninstall_files_from_dir)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f src/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/clone_filter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/cstacks-DNANSeq.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/cstacks-DNASeq.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/cstacks-cstacks.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/cstacks-input.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/cstacks-kmers.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/cstacks-locus.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/cstacks-stacks.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/cstacks-utils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/estacks-DNANSeq.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/estacks-DNASeq.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/estacks-estacks.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/estacks-input.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/estacks-models.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/estacks-mstack.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/estacks-stacks.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/estacks-utils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/genotypes-DNANSeq.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/genotypes-DNASeq.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/genotypes-catalog_utils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/genotypes-genotypes.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/genotypes-input.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/genotypes-locus.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/genotypes-log_utils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/genotypes-stacks.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/genotypes-utils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/hstacks-DNANSeq.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/hstacks-DNASeq.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/hstacks-hstacks.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/hstacks-input.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/hstacks-kmers.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/hstacks-locus.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/hstacks-stacks.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/input.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/kmer_filter-input.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/kmer_filter-kmer_filter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/kmer_filter-kmers.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/kmer_filter-utils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/kmer_filter-write.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/kmers.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/phasedstacks-catalog_utils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/phasedstacks-input.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/phasedstacks-locus.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/phasedstacks-log_utils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/phasedstacks-phasedstacks.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/phasedstacks-utils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/populations-DNANSeq.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/populations-DNASeq.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/populations-catalog_utils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/populations-input.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/populations-locus.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/populations-log_utils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/populations-populations.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/populations-stacks.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/populations-utils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/process_radtags-clean.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/process_radtags-file_io.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/process_radtags-input.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/process_radtags-log_utils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/process_radtags-process_radtags.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/process_radtags-utils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/process_radtags-write.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/process_shortreads-clean.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/process_shortreads-file_io.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/process_shortreads-input.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/process_shortreads-kmers.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/process_shortreads-log_utils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/process_shortreads-process_shortreads.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/process_shortreads-utils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/process_shortreads-write.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/pstacks-DNANSeq.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/pstacks-DNASeq.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/pstacks-input.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/pstacks-models.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/pstacks-mstack.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/pstacks-pstacks.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/pstacks-stacks.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/pstacks-utils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/sstacks-DNANSeq.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/sstacks-DNASeq.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/sstacks-input.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/sstacks-locus.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/sstacks-sstacks.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/sstacks-stacks.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/sstacks-utils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/ustacks-DNANSeq.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/ustacks-DNASeq.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/ustacks-cmb.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/ustacks-input.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/ustacks-kmers.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/ustacks-models.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/ustacks-mst.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/ustacks-mstack.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/ustacks-stacks.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/ustacks-ustacks.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/ustacks-utils.Po@am__quote@

.cc.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

src/cstacks-cstacks.o: src/cstacks.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cstacks_CXXFLAGS) $(CXXFLAGS) -MT src/cstacks-cstacks.o -MD -MP -MF src/$(DEPDIR)/cstacks-cstacks.Tpo -c -o src/cstacks-cstacks.o `test -f 'src/cstacks.cc' || echo '$(srcdir)/'`src/cstacks.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/cstacks-cstacks.Tpo src/$(DEPDIR)/cstacks-cstacks.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/cstacks.cc' object='src/cstacks-cstacks.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/cstacks-cstacks.o `test -f 'src/cstacks.cc' || echo '$(srcdir)/'`src/cstacks.cc

src/cstacks-cstacks.obj: src/cstacks.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cstacks_CXXFLAGS) $(CXXFLAGS) -MT src/cstacks-cstacks.obj -MD -MP -MF src/$(DEPDIR)/cstacks-cstacks.Tpo -c -o src/cstacks-cstacks.obj `if test -f 'src/cstacks.cc'; then $(CYGPATH_W) 'src/cstacks.cc'; else $(CYGPATH_W) '$(srcdir)/src/cstacks.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/cstacks-cstacks.Tpo src/$(DEPDIR)/cstacks-cstacks.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/cstacks.cc' object='src/cstacks-cstacks.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/cstacks-cstacks.obj `if test -f 'src/cstacks.cc'; then $(CYGPATH_W) 'src/cstacks.cc'; else $(CYGPATH_W) '$(srcdir)/src/cstacks.cc'; fi`

src/cstacks-stacks.o: src/stacks.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cstacks_CXXFLAGS) $(CXXFLAGS) -MT src/cstacks-stacks.o -MD -MP -MF src/$(DEPDIR)/cstacks-stacks.Tpo -c -o src/cstacks-stacks.o `test -f 'src/stacks.cc' || echo '$(srcdir)/'`src/stacks.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/cstacks-stacks.Tpo src/$(DEPDIR)/cstacks-stacks.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/stacks.cc' object='src/cstacks-stacks.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/cstacks-stacks.o `test -f 'src/stacks.cc' || echo '$(srcdir)/'`src/stacks.cc

src/cstacks-stacks.obj: src/stacks.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cstacks_CXXFLAGS) $(CXXFLAGS) -MT src/cstacks-stacks.obj -MD -MP -MF src/$(DEPDIR)/cstacks-stacks.Tpo -c -o src/cstacks-stacks.obj `if test -f 'src/stacks.cc'; then $(CYGPATH_W) 'src/stacks.cc'; else $(CYGPATH_W) '$(srcdir)/src/stacks.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/cstacks-stacks.Tpo src/$(DEPDIR)/cstacks-stacks.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/stacks.cc' object='src/cstacks-stacks.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/cstacks-stacks.obj `if test -f 'src/stacks.cc'; then $(CYGPATH_W) 'src/stacks.cc'; else $(CYGPATH_W) '$(srcdir)/src/stacks.cc'; fi`

src/cstacks-locus.o: src/locus.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cstacks_CXXFLAGS) $(CXXFLAGS) -MT src/cstacks-locus.o -MD -MP -MF src/$(DEPDIR)/cstacks-locus.Tpo -c -o src/cstacks-locus.o `test -f 'src/locus.cc' || echo '$(srcdir)/'`src/locus.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/cstacks-locus.Tpo src/$(DEPDIR)/cstacks-locus.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/locus.cc' object='src/cstacks-locus.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/cstacks-locus.o `test -f 'src/locus.cc' || echo '$(srcdir)/'`src/locus.cc

src/cstacks-locus.obj: src/locus.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cstacks_CXXFLAGS) $(CXXFLAGS) -MT src/cstacks-locus.obj -MD -MP -MF src/$(DEPDIR)/cstacks-locus.Tpo -c -o src/cstacks-locus.obj `if test -f 'src/locus.cc'; then $(CYGPATH_W) 'src/locus.cc'; else $(CYGPATH_W) '$(srcdir)/src/locus.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/cstacks-locus.Tpo src/$(DEPDIR)/cstacks-locus.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/locus.cc' object='src/cstacks-locus.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/cstacks-locus.obj `if test -f 'src/locus.cc'; then $(CYGPATH_W) 'src/locus.cc'; else $(CYGPATH_W) '$(srcdir)/src/locus.cc'; fi`

src/cstacks-kmers.o: src/kmers.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cstacks_CXXFLAGS) $(CXXFLAGS) -MT src/cstacks-kmers.o -MD -MP -MF src/$(DEPDIR)/cstacks-kmers.Tpo -c -o src/cstacks-kmers.o `test -f 'src/kmers.cc' || echo '$(srcdir)/'`src/kmers.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/cstacks-kmers.Tpo src/$(DEPDIR)/cstacks-kmers.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/kmers.cc' object='src/cstacks-kmers.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/cstacks-kmers.o `test -f 'src/kmers.cc' || echo '$(srcdir)/'`src/kmers.cc

src/cstacks-kmers.obj: src/kmers.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cstacks_CXXFLAGS) $(CXXFLAGS) -MT src/cstacks-kmers.obj -MD -MP -MF src/$(DEPDIR)/cstacks-kmers.Tpo -c -o src/cstacks-kmers.obj `if test -f 'src/kmers.cc'; then $(CYGPATH_W) 'src/kmers.cc'; else $(CYGPATH_W) '$(srcdir)/src/kmers.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/cstacks-kmers.Tpo src/$(DEPDIR)/cstacks-kmers.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/kmers.cc' object='src/cstacks-kmers.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/cstacks-kmers.obj `if test -f 'src/kmers.cc'; then $(CYGPATH_W) 'src/kmers.cc'; else $(CYGPATH_W) '$(srcdir)/src/kmers.cc'; fi`

src/cstacks-utils.o: src/utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cstacks_CXXFLAGS) $(CXXFLAGS) -MT src/cstacks-utils.o -MD -MP -MF src/$(DEPDIR)/cstacks-utils.Tpo -c -o src/cstacks-utils.o `test -f 'src/utils.cc' || echo '$(srcdir)/'`src/utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/cstacks-utils.Tpo src/$(DEPDIR)/cstacks-utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/utils.cc' object='src/cstacks-utils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/cstacks-utils.o `test -f 'src/utils.cc' || echo '$(srcdir)/'`src/utils.cc

src/cstacks-utils.obj: src/utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cstacks_CXXFLAGS) $(CXXFLAGS) -MT src/cstacks-utils.obj -MD -MP -MF src/$(DEPDIR)/cstacks-utils.Tpo -c -o src/cstacks-utils.obj `if test -f 'src/utils.cc'; then $(CYGPATH_W) 'src/utils.cc'; else $(CYGPATH_W) '$(srcdir)/src/utils.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/cstacks-utils.Tpo src/$(DEPDIR)/cstacks-utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/utils.cc' object='src/cstacks-utils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/cstacks-utils.obj `if test -f 'src/utils.cc'; then $(CYGPATH_W) 'src/utils.cc'; else $(CYGPATH_W) '$(srcdir)/src/utils.cc'; fi`

src/cstacks-DNASeq.o: src/DNASeq.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cstacks_CXXFLAGS) $(CXXFLAGS) -MT src/cstacks-DNASeq.o -MD -MP -MF src/$(DEPDIR)/cstacks-DNASeq.Tpo -c -o src/cstacks-DNASeq.o `test -f 'src/DNASeq.cc' || echo '$(srcdir)/'`src/DNASeq.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/cstacks-DNASeq.Tpo src/$(DEPDIR)/cstacks-DNASeq.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/DNASeq.cc' object='src/cstacks-DNASeq.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/cstacks-DNASeq.o `test -f 'src/DNASeq.cc' || echo '$(srcdir)/'`src/DNASeq.cc

src/cstacks-DNASeq.obj: src/DNASeq.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cstacks_CXXFLAGS) $(CXXFLAGS) -MT src/cstacks-DNASeq.obj -MD -MP -MF src/$(DEPDIR)/cstacks-DNASeq.Tpo -c -o src/cstacks-DNASeq.obj `if test -f 'src/DNASeq.cc'; then $(CYGPATH_W) 'src/DNASeq.cc'; else $(CYGPATH_W) '$(srcdir)/src/DNASeq.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/cstacks-DNASeq.Tpo src/$(DEPDIR)/cstacks-DNASeq.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/DNASeq.cc' object='src/cstacks-DNASeq.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/cstacks-DNASeq.obj `if test -f 'src/DNASeq.cc'; then $(CYGPATH_W) 'src/DNASeq.cc'; else $(CYGPATH_W) '$(srcdir)/src/DNASeq.cc'; fi`

src/cstacks-DNANSeq.o: src/DNANSeq.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cstacks_CXXFLAGS) $(CXXFLAGS) -MT src/cstacks-DNANSeq.o -MD -MP -MF src/$(DEPDIR)/cstacks-DNANSeq.Tpo -c -o src/cstacks-DNANSeq.o `test -f 'src/DNANSeq.cc' || echo '$(srcdir)/'`src/DNANSeq.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/cstacks-DNANSeq.Tpo src/$(DEPDIR)/cstacks-DNANSeq.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/DNANSeq.cc' object='src/cstacks-DNANSeq.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/cstacks-DNANSeq.o `test -f 'src/DNANSeq.cc' || echo '$(srcdir)/'`src/DNANSeq.cc

src/cstacks-DNANSeq.obj: src/DNANSeq.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cstacks_CXXFLAGS) $(CXXFLAGS) -MT src/cstacks-DNANSeq.obj -MD -MP -MF src/$(DEPDIR)/cstacks-DNANSeq.Tpo -c -o src/cstacks-DNANSeq.obj `if test -f 'src/DNANSeq.cc'; then $(CYGPATH_W) 'src/DNANSeq.cc'; else $(CYGPATH_W) '$(srcdir)/src/DNANSeq.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/cstacks-DNANSeq.Tpo src/$(DEPDIR)/cstacks-DNANSeq.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/DNANSeq.cc' object='src/cstacks-DNANSeq.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/cstacks-DNANSeq.obj `if test -f 'src/DNANSeq.cc'; then $(CYGPATH_W) 'src/DNANSeq.cc'; else $(CYGPATH_W) '$(srcdir)/src/DNANSeq.cc'; fi`

src/cstacks-input.o: src/input.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cstacks_CXXFLAGS) $(CXXFLAGS) -MT src/cstacks-input.o -MD -MP -MF src/$(DEPDIR)/cstacks-input.Tpo -c -o src/cstacks-input.o `test -f 'src/input.cc' || echo '$(srcdir)/'`src/input.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/cstacks-input.Tpo src/$(DEPDIR)/cstacks-input.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/input.cc' object='src/cstacks-input.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/cstacks-input.o `test -f 'src/input.cc' || echo '$(srcdir)/'`src/input.cc

src/cstacks-input.obj: src/input.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cstacks_CXXFLAGS) $(CXXFLAGS) -MT src/cstacks-input.obj -MD -MP -MF src/$(DEPDIR)/cstacks-input.Tpo -c -o src/cstacks-input.obj `if test -f 'src/input.cc'; then $(CYGPATH_W) 'src/input.cc'; else $(CYGPATH_W) '$(srcdir)/src/input.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/cstacks-input.Tpo src/$(DEPDIR)/cstacks-input.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/input.cc' object='src/cstacks-input.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/cstacks-input.obj `if test -f 'src/input.cc'; then $(CYGPATH_W) 'src/input.cc'; else $(CYGPATH_W) '$(srcdir)/src/input.cc'; fi`

src/estacks-estacks.o: src/estacks.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(estacks_CXXFLAGS) $(CXXFLAGS) -MT src/estacks-estacks.o -MD -MP -MF src/$(DEPDIR)/estacks-estacks.Tpo -c -o src/estacks-estacks.o `test -f 'src/estacks.cc' || echo '$(srcdir)/'`src/estacks.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/estacks-estacks.Tpo src/$(DEPDIR)/estacks-estacks.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/estacks.cc' object='src/estacks-estacks.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(estacks_CXXFLAGS) $(CXXFLAGS) -c -o src/estacks-estacks.o `test -f 'src/estacks.cc' || echo '$(srcdir)/'`src/estacks.cc

src/estacks-estacks.obj: src/estacks.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(estacks_CXXFLAGS) $(CXXFLAGS) -MT src/estacks-estacks.obj -MD -MP -MF src/$(DEPDIR)/estacks-estacks.Tpo -c -o src/estacks-estacks.obj `if test -f 'src/estacks.cc'; then $(CYGPATH_W) 'src/estacks.cc'; else $(CYGPATH_W) '$(srcdir)/src/estacks.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/estacks-estacks.Tpo src/$(DEPDIR)/estacks-estacks.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/estacks.cc' object='src/estacks-estacks.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(estacks_CXXFLAGS) $(CXXFLAGS) -c -o src/estacks-estacks.obj `if test -f 'src/estacks.cc'; then $(CYGPATH_W) 'src/estacks.cc'; else $(CYGPATH_W) '$(srcdir)/src/estacks.cc'; fi`

src/estacks-stacks.o: src/stacks.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(estacks_CXXFLAGS) $(CXXFLAGS) -MT src/estacks-stacks.o -MD -MP -MF src/$(DEPDIR)/estacks-stacks.Tpo -c -o src/estacks-stacks.o `test -f 'src/stacks.cc' || echo '$(srcdir)/'`src/stacks.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/estacks-stacks.Tpo src/$(DEPDIR)/estacks-stacks.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/stacks.cc' object='src/estacks-stacks.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(estacks_CXXFLAGS) $(CXXFLAGS) -c -o src/estacks-stacks.o `test -f 'src/stacks.cc' || echo '$(srcdir)/'`src/stacks.cc

src/estacks-stacks.obj: src/stacks.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(estacks_CXXFLAGS) $(CXXFLAGS) -MT src/estacks-stacks.obj -MD -MP -MF src/$(DEPDIR)/estacks-stacks.Tpo -c -o src/estacks-stacks.obj `if test -f 'src/stacks.cc'; then $(CYGPATH_W) 'src/stacks.cc'; else $(CYGPATH_W) '$(srcdir)/src/stacks.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/estacks-stacks.Tpo src/$(DEPDIR)/estacks-stacks.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/stacks.cc' object='src/estacks-stacks.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(estacks_CXXFLAGS) $(CXXFLAGS) -c -o src/estacks-stacks.obj `if test -f 'src/stacks.cc'; then $(CYGPATH_W) 'src/stacks.cc'; else $(CYGPATH_W) '$(srcdir)/src/stacks.cc'; fi`

src/estacks-mstack.o: src/mstack.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(estacks_CXXFLAGS) $(CXXFLAGS) -MT src/estacks-mstack.o -MD -MP -MF src/$(DEPDIR)/estacks-mstack.Tpo -c -o src/estacks-mstack.o `test -f 'src/mstack.cc' || echo '$(srcdir)/'`src/mstack.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/estacks-mstack.Tpo src/$(DEPDIR)/estacks-mstack.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/mstack.cc' object='src/estacks-mstack.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(estacks_CXXFLAGS) $(CXXFLAGS) -c -o src/estacks-mstack.o `test -f 'src/mstack.cc' || echo '$(srcdir)/'`src/mstack.cc

src/estacks-mstack.obj: src/mstack.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(estacks_CXXFLAGS) $(CXXFLAGS) -MT src/estacks-mstack.obj -MD -MP -MF src/$(DEPDIR)/estacks-mstack.Tpo -c -o src/estacks-mstack.obj `if test -f 'src/mstack.cc'; then $(CYGPATH_W) 'src/mstack.cc'; else $(CYGPATH_W) '$(srcdir)/src/mstack.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/estacks-mstack.Tpo src/$(DEPDIR)/estacks-mstack.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/mstack.cc' object='src/estacks-mstack.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(estacks_CXXFLAGS) $(CXXFLAGS) -c -o src/estacks-mstack.obj `if test -f 'src/mstack.cc'; then $(CYGPATH_W) 'src/mstack.cc'; else $(CYGPATH_W) '$(srcdir)/src/mstack.cc'; fi`

src/estacks-models.o: src/models.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(estacks_CXXFLAGS) $(CXXFLAGS) -MT src/estacks-models.o -MD -MP -MF src/$(DEPDIR)/estacks-models.Tpo -c -o src/estacks-models.o `test -f 'src/models.cc' || echo '$(srcdir)/'`src/models.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/estacks-models.Tpo src/$(DEPDIR)/estacks-models.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/models.cc' object='src/estacks-models.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(estacks_CXXFLAGS) $(CXXFLAGS) -c -o src/estacks-models.o `test -f 'src/models.cc' || echo '$(srcdir)/'`src/models.cc

src/estacks-models.obj: src/models.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(estacks_CXXFLAGS) $(CXXFLAGS) -MT src/estacks-models.obj -MD -MP -MF src/$(DEPDIR)/estacks-models.Tpo -c -o src/estacks-models.obj `if test -f 'src/models.cc'; then $(CYGPATH_W) 'src/models.cc'; else $(CYGPATH_W) '$(srcdir)/src/models.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/estacks-models.Tpo src/$(DEPDIR)/estacks-models.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/models.cc' object='src/estacks-models.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(estacks_CXXFLAGS) $(CXXFLAGS) -c -o src/estacks-models.obj `if test -f 'src/models.cc'; then $(CYGPATH_W) 'src/models.cc'; else $(CYGPATH_W) '$(srcdir)/src/models.cc'; fi`

src/estacks-utils.o: src/utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(estacks_CXXFLAGS) $(CXXFLAGS) -MT src/estacks-utils.o -MD -MP -MF src/$(DEPDIR)/estacks-utils.Tpo -c -o src/estacks-utils.o `test -f 'src/utils.cc' || echo '$(srcdir)/'`src/utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/estacks-utils.Tpo src/$(DEPDIR)/estacks-utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/utils.cc' object='src/estacks-utils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(estacks_CXXFLAGS) $(CXXFLAGS) -c -o src/estacks-utils.o `test -f 'src/utils.cc' || echo '$(srcdir)/'`src/utils.cc

src/estacks-utils.obj: src/utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(estacks_CXXFLAGS) $(CXXFLAGS) -MT src/estacks-utils.obj -MD -MP -MF src/$(DEPDIR)/estacks-utils.Tpo -c -o src/estacks-utils.obj `if test -f 'src/utils.cc'; then $(CYGPATH_W) 'src/utils.cc'; else $(CYGPATH_W) '$(srcdir)/src/utils.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/estacks-utils.Tpo src/$(DEPDIR)/estacks-utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/utils.cc' object='src/estacks-utils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(estacks_CXXFLAGS) $(CXXFLAGS) -c -o src/estacks-utils.obj `if test -f 'src/utils.cc'; then $(CYGPATH_W) 'src/utils.cc'; else $(CYGPATH_W) '$(srcdir)/src/utils.cc'; fi`

src/estacks-DNASeq.o: src/DNASeq.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(estacks_CXXFLAGS) $(CXXFLAGS) -MT src/estacks-DNASeq.o -MD -MP -MF src/$(DEPDIR)/estacks-DNASeq.Tpo -c -o src/estacks-DNASeq.o `test -f 'src/DNASeq.cc' || echo '$(srcdir)/'`src/DNASeq.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/estacks-DNASeq.Tpo src/$(DEPDIR)/estacks-DNASeq.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/DNASeq.cc' object='src/estacks-DNASeq.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(estacks_CXXFLAGS) $(CXXFLAGS) -c -o src/estacks-DNASeq.o `test -f 'src/DNASeq.cc' || echo '$(srcdir)/'`src/DNASeq.cc

src/estacks-DNASeq.obj: src/DNASeq.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(estacks_CXXFLAGS) $(CXXFLAGS) -MT src/estacks-DNASeq.obj -MD -MP -MF src/$(DEPDIR)/estacks-DNASeq.Tpo -c -o src/estacks-DNASeq.obj `if test -f 'src/DNASeq.cc'; then $(CYGPATH_W) 'src/DNASeq.cc'; else $(CYGPATH_W) '$(srcdir)/src/DNASeq.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/estacks-DNASeq.Tpo src/$(DEPDIR)/estacks-DNASeq.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/DNASeq.cc' object='src/estacks-DNASeq.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(estacks_CXXFLAGS) $(CXXFLAGS) -c -o src/estacks-DNASeq.obj `if test -f 'src/DNASeq.cc'; then $(CYGPATH_W) 'src/DNASeq.cc'; else $(CYGPATH_W) '$(srcdir)/src/DNASeq.cc'; fi`

src/estacks-DNANSeq.o: src/DNANSeq.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(estacks_CXXFLAGS) $(CXXFLAGS) -MT src/estacks-DNANSeq.o -MD -MP -MF src/$(DEPDIR)/estacks-DNANSeq.Tpo -c -o src/estacks-DNANSeq.o `test -f 'src/DNANSeq.cc' || echo '$(srcdir)/'`src/DNANSeq.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/estacks-DNANSeq.Tpo src/$(DEPDIR)/estacks-DNANSeq.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/DNANSeq.cc' object='src/estacks-DNANSeq.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(estacks_CXXFLAGS) $(CXXFLAGS) -c -o src/estacks-DNANSeq.o `test -f 'src/DNANSeq.cc' || echo '$(srcdir)/'`src/DNANSeq.cc

src/estacks-DNANSeq.obj: src/DNANSeq.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(estacks_CXXFLAGS) $(CXXFLAGS) -MT src/estacks-DNANSeq.obj -MD -MP -MF src/$(DEPDIR)/estacks-DNANSeq.Tpo -c -o src/estacks-DNANSeq.obj `if test -f 'src/DNANSeq.cc'; then $(CYGPATH_W) 'src/DNANSeq.cc'; else $(CYGPATH_W) '$(srcdir)/src/DNANSeq.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/estacks-DNANSeq.Tpo src/$(DEPDIR)/estacks-DNANSeq.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/DNANSeq.cc' object='src/estacks-DNANSeq.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(estacks_CXXFLAGS) $(CXXFLAGS) -c -o src/estacks-DNANSeq.obj `if test -f 'src/DNANSeq.cc'; then $(CYGPATH_W) 'src/DNANSeq.cc'; else $(CYGPATH_W) '$(srcdir)/src/DNANSeq.cc'; fi`

src/estacks-input.o: src/input.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(estacks_CXXFLAGS) $(CXXFLAGS) -MT src/estacks-input.o -MD -MP -MF src/$(DEPDIR)/estacks-input.Tpo -c -o src/estacks-input.o `test -f 'src/input.cc' || echo '$(srcdir)/'`src/input.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/estacks-input.Tpo src/$(DEPDIR)/estacks-input.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/input.cc' object='src/estacks-input.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(estacks_CXXFLAGS) $(CXXFLAGS) -c -o src/estacks-input.o `test -f 'src/input.cc' || echo '$(srcdir)/'`src/input.cc

src/estacks-input.obj: src/input.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(estacks_CXXFLAGS) $(CXXFLAGS) -MT src/estacks-input.obj -MD -MP -MF src/$(DEPDIR)/estacks-input.Tpo -c -o src/estacks-input.obj `if test -f 'src/input.cc'; then $(CYGPATH_W) 'src/input.cc'; else $(CYGPATH_W) '$(srcdir)/src/input.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/estacks-input.Tpo src/$(DEPDIR)/estacks-input.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/input.cc' object='src/estacks-input.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(estacks_CXXFLAGS) $(CXXFLAGS) -c -o src/estacks-input.obj `if test -f 'src/input.cc'; then $(CYGPATH_W) 'src/input.cc'; else $(CYGPATH_W) '$(srcdir)/src/input.cc'; fi`

src/genotypes-genotypes.o: src/genotypes.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(genotypes_CXXFLAGS) $(CXXFLAGS) -MT src/genotypes-genotypes.o -MD -MP -MF src/$(DEPDIR)/genotypes-genotypes.Tpo -c -o src/genotypes-genotypes.o `test -f 'src/genotypes.cc' || echo '$(srcdir)/'`src/genotypes.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/genotypes-genotypes.Tpo src/$(DEPDIR)/genotypes-genotypes.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/genotypes.cc' object='src/genotypes-genotypes.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(genotypes_CXXFLAGS) $(CXXFLAGS) -c -o src/genotypes-genotypes.o `test -f 'src/genotypes.cc' || echo '$(srcdir)/'`src/genotypes.cc

src/genotypes-genotypes.obj: src/genotypes.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(genotypes_CXXFLAGS) $(CXXFLAGS) -MT src/genotypes-genotypes.obj -MD -MP -MF src/$(DEPDIR)/genotypes-genotypes.Tpo -c -o src/genotypes-genotypes.obj `if test -f 'src/genotypes.cc'; then $(CYGPATH_W) 'src/genotypes.cc'; else $(CYGPATH_W) '$(srcdir)/src/genotypes.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/genotypes-genotypes.Tpo src/$(DEPDIR)/genotypes-genotypes.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/genotypes.cc' object='src/genotypes-genotypes.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(genotypes_CXXFLAGS) $(CXXFLAGS) -c -o src/genotypes-genotypes.obj `if test -f 'src/genotypes.cc'; then $(CYGPATH_W) 'src/genotypes.cc'; else $(CYGPATH_W) '$(srcdir)/src/genotypes.cc'; fi`

src/genotypes-utils.o: src/utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(genotypes_CXXFLAGS) $(CXXFLAGS) -MT src/genotypes-utils.o -MD -MP -MF src/$(DEPDIR)/genotypes-utils.Tpo -c -o src/genotypes-utils.o `test -f 'src/utils.cc' || echo '$(srcdir)/'`src/utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/genotypes-utils.Tpo src/$(DEPDIR)/genotypes-utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/utils.cc' object='src/genotypes-utils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(genotypes_CXXFLAGS) $(CXXFLAGS) -c -o src/genotypes-utils.o `test -f 'src/utils.cc' || echo '$(srcdir)/'`src/utils.cc

src/genotypes-utils.obj: src/utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(genotypes_CXXFLAGS) $(CXXFLAGS) -MT src/genotypes-utils.obj -MD -MP -MF src/$(DEPDIR)/genotypes-utils.Tpo -c -o src/genotypes-utils.obj `if test -f 'src/utils.cc'; then $(CYGPATH_W) 'src/utils.cc'; else $(CYGPATH_W) '$(srcdir)/src/utils.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/genotypes-utils.Tpo src/$(DEPDIR)/genotypes-utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/utils.cc' object='src/genotypes-utils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(genotypes_CXXFLAGS) $(CXXFLAGS) -c -o src/genotypes-utils.obj `if test -f 'src/utils.cc'; then $(CYGPATH_W) 'src/utils.cc'; else $(CYGPATH_W) '$(srcdir)/src/utils.cc'; fi`

src/genotypes-catalog_utils.o: src/catalog_utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(genotypes_CXXFLAGS) $(CXXFLAGS) -MT src/genotypes-catalog_utils.o -MD -MP -MF src/$(DEPDIR)/genotypes-catalog_utils.Tpo -c -o src/genotypes-catalog_utils.o `test -f 'src/catalog_utils.cc' || echo '$(srcdir)/'`src/catalog_utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/genotypes-catalog_utils.Tpo src/$(DEPDIR)/genotypes-catalog_utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/catalog_utils.cc' object='src/genotypes-catalog_utils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(genotypes_CXXFLAGS) $(CXXFLAGS) -c -o src/genotypes-catalog_utils.o `test -f 'src/catalog_utils.cc' || echo '$(srcdir)/'`src/catalog_utils.cc

src/genotypes-catalog_utils.obj: src/catalog_utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(genotypes_CXXFLAGS) $(CXXFLAGS) -MT src/genotypes-catalog_utils.obj -MD -MP -MF src/$(DEPDIR)/genotypes-catalog_utils.Tpo -c -o src/genotypes-catalog_utils.obj `if test -f 'src/catalog_utils.cc'; then $(CYGPATH_W) 'src/catalog_utils.cc'; else $(CYGPATH_W) '$(srcdir)/src/catalog_utils.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/genotypes-catalog_utils.Tpo src/$(DEPDIR)/genotypes-catalog_utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/catalog_utils.cc' object='src/genotypes-catalog_utils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(genotypes_CXXFLAGS) $(CXXFLAGS) -c -o src/genotypes-catalog_utils.obj `if test -f 'src/catalog_utils.cc'; then $(CYGPATH_W) 'src/catalog_utils.cc'; else $(CYGPATH_W) '$(srcdir)/src/catalog_utils.cc'; fi`

src/genotypes-log_utils.o: src/log_utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(genotypes_CXXFLAGS) $(CXXFLAGS) -MT src/genotypes-log_utils.o -MD -MP -MF src/$(DEPDIR)/genotypes-log_utils.Tpo -c -o src/genotypes-log_utils.o `test -f 'src/log_utils.cc' || echo '$(srcdir)/'`src/log_utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/genotypes-log_utils.Tpo src/$(DEPDIR)/genotypes-log_utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/log_utils.cc' object='src/genotypes-log_utils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(genotypes_CXXFLAGS) $(CXXFLAGS) -c -o src/genotypes-log_utils.o `test -f 'src/log_utils.cc' || echo '$(srcdir)/'`src/log_utils.cc

src/genotypes-log_utils.obj: src/log_utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(genotypes_CXXFLAGS) $(CXXFLAGS) -MT src/genotypes-log_utils.obj -MD -MP -MF src/$(DEPDIR)/genotypes-log_utils.Tpo -c -o src/genotypes-log_utils.obj `if test -f 'src/log_utils.cc'; then $(CYGPATH_W) 'src/log_utils.cc'; else $(CYGPATH_W) '$(srcdir)/src/log_utils.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/genotypes-log_utils.Tpo src/$(DEPDIR)/genotypes-log_utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/log_utils.cc' object='src/genotypes-log_utils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(genotypes_CXXFLAGS) $(CXXFLAGS) -c -o src/genotypes-log_utils.obj `if test -f 'src/log_utils.cc'; then $(CYGPATH_W) 'src/log_utils.cc'; else $(CYGPATH_W) '$(srcdir)/src/log_utils.cc'; fi`

src/genotypes-stacks.o: src/stacks.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(genotypes_CXXFLAGS) $(CXXFLAGS) -MT src/genotypes-stacks.o -MD -MP -MF src/$(DEPDIR)/genotypes-stacks.Tpo -c -o src/genotypes-stacks.o `test -f 'src/stacks.cc' || echo '$(srcdir)/'`src/stacks.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/genotypes-stacks.Tpo src/$(DEPDIR)/genotypes-stacks.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/stacks.cc' object='src/genotypes-stacks.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(genotypes_CXXFLAGS) $(CXXFLAGS) -c -o src/genotypes-stacks.o `test -f 'src/stacks.cc' || echo '$(srcdir)/'`src/stacks.cc

src/genotypes-stacks.obj: src/stacks.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(genotypes_CXXFLAGS) $(CXXFLAGS) -MT src/genotypes-stacks.obj -MD -MP -MF src/$(DEPDIR)/genotypes-stacks.Tpo -c -o src/genotypes-stacks.obj `if test -f 'src/stacks.cc'; then $(CYGPATH_W) 'src/stacks.cc'; else $(CYGPATH_W) '$(srcdir)/src/stacks.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/genotypes-stacks.Tpo src/$(DEPDIR)/genotypes-stacks.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/stacks.cc' object='src/genotypes-stacks.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(genotypes_CXXFLAGS) $(CXXFLAGS) -c -o src/genotypes-stacks.obj `if test -f 'src/stacks.cc'; then $(CYGPATH_W) 'src/stacks.cc'; else $(CYGPATH_W) '$(srcdir)/src/stacks.cc'; fi`

src/genotypes-locus.o: src/locus.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(genotypes_CXXFLAGS) $(CXXFLAGS) -MT src/genotypes-locus.o -MD -MP -MF src/$(DEPDIR)/genotypes-locus.Tpo -c -o src/genotypes-locus.o `test -f 'src/locus.cc' || echo '$(srcdir)/'`src/locus.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/genotypes-locus.Tpo src/$(DEPDIR)/genotypes-locus.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/locus.cc' object='src/genotypes-locus.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(genotypes_CXXFLAGS) $(CXXFLAGS) -c -o src/genotypes-locus.o `test -f 'src/locus.cc' || echo '$(srcdir)/'`src/locus.cc

src/genotypes-locus.obj: src/locus.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(genotypes_CXXFLAGS) $(CXXFLAGS) -MT src/genotypes-locus.obj -MD -MP -MF src/$(DEPDIR)/genotypes-locus.Tpo -c -o src/genotypes-locus.obj `if test -f 'src/locus.cc'; then $(CYGPATH_W) 'src/locus.cc'; else $(CYGPATH_W) '$(srcdir)/src/locus.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/genotypes-locus.Tpo src/$(DEPDIR)/genotypes-locus.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/locus.cc' object='src/genotypes-locus.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(genotypes_CXXFLAGS) $(CXXFLAGS) -c -o src/genotypes-locus.obj `if test -f 'src/locus.cc'; then $(CYGPATH_W) 'src/locus.cc'; else $(CYGPATH_W) '$(srcdir)/src/locus.cc'; fi`

src/genotypes-DNASeq.o: src/DNASeq.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(genotypes_CXXFLAGS) $(CXXFLAGS) -MT src/genotypes-DNASeq.o -MD -MP -MF src/$(DEPDIR)/genotypes-DNASeq.Tpo -c -o src/genotypes-DNASeq.o `test -f 'src/DNASeq.cc' || echo '$(srcdir)/'`src/DNASeq.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/genotypes-DNASeq.Tpo src/$(DEPDIR)/genotypes-DNASeq.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/DNASeq.cc' object='src/genotypes-DNASeq.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(genotypes_CXXFLAGS) $(CXXFLAGS) -c -o src/genotypes-DNASeq.o `test -f 'src/DNASeq.cc' || echo '$(srcdir)/'`src/DNASeq.cc

src/genotypes-DNASeq.obj: src/DNASeq.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(genotypes_CXXFLAGS) $(CXXFLAGS) -MT src/genotypes-DNASeq.obj -MD -MP -MF src/$(DEPDIR)/genotypes-DNASeq.Tpo -c -o src/genotypes-DNASeq.obj `if test -f 'src/DNASeq.cc'; then $(CYGPATH_W) 'src/DNASeq.cc'; else $(CYGPATH_W) '$(srcdir)/src/DNASeq.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/genotypes-DNASeq.Tpo src/$(DEPDIR)/genotypes-DNASeq.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/DNASeq.cc' object='src/genotypes-DNASeq.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(genotypes_CXXFLAGS) $(CXXFLAGS) -c -o src/genotypes-DNASeq.obj `if test -f 'src/DNASeq.cc'; then $(CYGPATH_W) 'src/DNASeq.cc'; else $(CYGPATH_W) '$(srcdir)/src/DNASeq.cc'; fi`

src/genotypes-DNANSeq.o: src/DNANSeq.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(genotypes_CXXFLAGS) $(CXXFLAGS) -MT src/genotypes-DNANSeq.o -MD -MP -MF src/$(DEPDIR)/genotypes-DNANSeq.Tpo -c -o src/genotypes-DNANSeq.o `test -f 'src/DNANSeq.cc' || echo '$(srcdir)/'`src/DNANSeq.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/genotypes-DNANSeq.Tpo src/$(DEPDIR)/genotypes-DNANSeq.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/DNANSeq.cc' object='src/genotypes-DNANSeq.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(genotypes_CXXFLAGS) $(CXXFLAGS) -c -o src/genotypes-DNANSeq.o `test -f 'src/DNANSeq.cc' || echo '$(srcdir)/'`src/DNANSeq.cc

src/genotypes-DNANSeq.obj: src/DNANSeq.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(genotypes_CXXFLAGS) $(CXXFLAGS) -MT src/genotypes-DNANSeq.obj -MD -MP -MF src/$(DEPDIR)/genotypes-DNANSeq.Tpo -c -o src/genotypes-DNANSeq.obj `if test -f 'src/DNANSeq.cc'; then $(CYGPATH_W) 'src/DNANSeq.cc'; else $(CYGPATH_W) '$(srcdir)/src/DNANSeq.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/genotypes-DNANSeq.Tpo src/$(DEPDIR)/genotypes-DNANSeq.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/DNANSeq.cc' object='src/genotypes-DNANSeq.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(genotypes_CXXFLAGS) $(CXXFLAGS) -c -o src/genotypes-DNANSeq.obj `if test -f 'src/DNANSeq.cc'; then $(CYGPATH_W) 'src/DNANSeq.cc'; else $(CYGPATH_W) '$(srcdir)/src/DNANSeq.cc'; fi`

src/genotypes-input.o: src/input.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(genotypes_CXXFLAGS) $(CXXFLAGS) -MT src/genotypes-input.o -MD -MP -MF src/$(DEPDIR)/genotypes-input.Tpo -c -o src/genotypes-input.o `test -f 'src/input.cc' || echo '$(srcdir)/'`src/input.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/genotypes-input.Tpo src/$(DEPDIR)/genotypes-input.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/input.cc' object='src/genotypes-input.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(genotypes_CXXFLAGS) $(CXXFLAGS) -c -o src/genotypes-input.o `test -f 'src/input.cc' || echo '$(srcdir)/'`src/input.cc

src/genotypes-input.obj: src/input.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(genotypes_CXXFLAGS) $(CXXFLAGS) -MT src/genotypes-input.obj -MD -MP -MF src/$(DEPDIR)/genotypes-input.Tpo -c -o src/genotypes-input.obj `if test -f 'src/input.cc'; then $(CYGPATH_W) 'src/input.cc'; else $(CYGPATH_W) '$(srcdir)/src/input.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/genotypes-input.Tpo src/$(DEPDIR)/genotypes-input.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/input.cc' object='src/genotypes-input.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(genotypes_CXXFLAGS) $(CXXFLAGS) -c -o src/genotypes-input.obj `if test -f 'src/input.cc'; then $(CYGPATH_W) 'src/input.cc'; else $(CYGPATH_W) '$(srcdir)/src/input.cc'; fi`

src/hstacks-hstacks.o: src/hstacks.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hstacks_CXXFLAGS) $(CXXFLAGS) -MT src/hstacks-hstacks.o -MD -MP -MF src/$(DEPDIR)/hstacks-hstacks.Tpo -c -o src/hstacks-hstacks.o `test -f 'src/hstacks.cc' || echo '$(srcdir)/'`src/hstacks.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/hstacks-hstacks.Tpo src/$(DEPDIR)/hstacks-hstacks.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/hstacks.cc' object='src/hstacks-hstacks.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/hstacks-hstacks.o `test -f 'src/hstacks.cc' || echo '$(srcdir)/'`src/hstacks.cc

src/hstacks-hstacks.obj: src/hstacks.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hstacks_CXXFLAGS) $(CXXFLAGS) -MT src/hstacks-hstacks.obj -MD -MP -MF src/$(DEPDIR)/hstacks-hstacks.Tpo -c -o src/hstacks-hstacks.obj `if test -f 'src/hstacks.cc'; then $(CYGPATH_W) 'src/hstacks.cc'; else $(CYGPATH_W) '$(srcdir)/src/hstacks.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/hstacks-hstacks.Tpo src/$(DEPDIR)/hstacks-hstacks.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/hstacks.cc' object='src/hstacks-hstacks.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/hstacks-hstacks.obj `if test -f 'src/hstacks.cc'; then $(CYGPATH_W) 'src/hstacks.cc'; else $(CYGPATH_W) '$(srcdir)/src/hstacks.cc'; fi`

src/hstacks-stacks.o: src/stacks.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hstacks_CXXFLAGS) $(CXXFLAGS) -MT src/hstacks-stacks.o -MD -MP -MF src/$(DEPDIR)/hstacks-stacks.Tpo -c -o src/hstacks-stacks.o `test -f 'src/stacks.cc' || echo '$(srcdir)/'`src/stacks.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/hstacks-stacks.Tpo src/$(DEPDIR)/hstacks-stacks.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/stacks.cc' object='src/hstacks-stacks.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/hstacks-stacks.o `test -f 'src/stacks.cc' || echo '$(srcdir)/'`src/stacks.cc

src/hstacks-stacks.obj: src/stacks.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hstacks_CXXFLAGS) $(CXXFLAGS) -MT src/hstacks-stacks.obj -MD -MP -MF src/$(DEPDIR)/hstacks-stacks.Tpo -c -o src/hstacks-stacks.obj `if test -f 'src/stacks.cc'; then $(CYGPATH_W) 'src/stacks.cc'; else $(CYGPATH_W) '$(srcdir)/src/stacks.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/hstacks-stacks.Tpo src/$(DEPDIR)/hstacks-stacks.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/stacks.cc' object='src/hstacks-stacks.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/hstacks-stacks.obj `if test -f 'src/stacks.cc'; then $(CYGPATH_W) 'src/stacks.cc'; else $(CYGPATH_W) '$(srcdir)/src/stacks.cc'; fi`

src/hstacks-locus.o: src/locus.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hstacks_CXXFLAGS) $(CXXFLAGS) -MT src/hstacks-locus.o -MD -MP -MF src/$(DEPDIR)/hstacks-locus.Tpo -c -o src/hstacks-locus.o `test -f 'src/locus.cc' || echo '$(srcdir)/'`src/locus.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/hstacks-locus.Tpo src/$(DEPDIR)/hstacks-locus.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/locus.cc' object='src/hstacks-locus.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/hstacks-locus.o `test -f 'src/locus.cc' || echo '$(srcdir)/'`src/locus.cc

src/hstacks-locus.obj: src/locus.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hstacks_CXXFLAGS) $(CXXFLAGS) -MT src/hstacks-locus.obj -MD -MP -MF src/$(DEPDIR)/hstacks-locus.Tpo -c -o src/hstacks-locus.obj `if test -f 'src/locus.cc'; then $(CYGPATH_W) 'src/locus.cc'; else $(CYGPATH_W) '$(srcdir)/src/locus.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/hstacks-locus.Tpo src/$(DEPDIR)/hstacks-locus.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/locus.cc' object='src/hstacks-locus.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/hstacks-locus.obj `if test -f 'src/locus.cc'; then $(CYGPATH_W) 'src/locus.cc'; else $(CYGPATH_W) '$(srcdir)/src/locus.cc'; fi`

src/hstacks-kmers.o: src/kmers.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hstacks_CXXFLAGS) $(CXXFLAGS) -MT src/hstacks-kmers.o -MD -MP -MF src/$(DEPDIR)/hstacks-kmers.Tpo -c -o src/hstacks-kmers.o `test -f 'src/kmers.cc' || echo '$(srcdir)/'`src/kmers.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/hstacks-kmers.Tpo src/$(DEPDIR)/hstacks-kmers.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/kmers.cc' object='src/hstacks-kmers.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/hstacks-kmers.o `test -f 'src/kmers.cc' || echo '$(srcdir)/'`src/kmers.cc

src/hstacks-kmers.obj: src/kmers.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hstacks_CXXFLAGS) $(CXXFLAGS) -MT src/hstacks-kmers.obj -MD -MP -MF src/$(DEPDIR)/hstacks-kmers.Tpo -c -o src/hstacks-kmers.obj `if test -f 'src/kmers.cc'; then $(CYGPATH_W) 'src/kmers.cc'; else $(CYGPATH_W) '$(srcdir)/src/kmers.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/hstacks-kmers.Tpo src/$(DEPDIR)/hstacks-kmers.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/kmers.cc' object='src/hstacks-kmers.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/hstacks-kmers.obj `if test -f 'src/kmers.cc'; then $(CYGPATH_W) 'src/kmers.cc'; else $(CYGPATH_W) '$(srcdir)/src/kmers.cc'; fi`

src/hstacks-DNASeq.o: src/DNASeq.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hstacks_CXXFLAGS) $(CXXFLAGS) -MT src/hstacks-DNASeq.o -MD -MP -MF src/$(DEPDIR)/hstacks-DNASeq.Tpo -c -o src/hstacks-DNASeq.o `test -f 'src/DNASeq.cc' || echo '$(srcdir)/'`src/DNASeq.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/hstacks-DNASeq.Tpo src/$(DEPDIR)/hstacks-DNASeq.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/DNASeq.cc' object='src/hstacks-DNASeq.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/hstacks-DNASeq.o `test -f 'src/DNASeq.cc' || echo '$(srcdir)/'`src/DNASeq.cc

src/hstacks-DNASeq.obj: src/DNASeq.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hstacks_CXXFLAGS) $(CXXFLAGS) -MT src/hstacks-DNASeq.obj -MD -MP -MF src/$(DEPDIR)/hstacks-DNASeq.Tpo -c -o src/hstacks-DNASeq.obj `if test -f 'src/DNASeq.cc'; then $(CYGPATH_W) 'src/DNASeq.cc'; else $(CYGPATH_W) '$(srcdir)/src/DNASeq.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/hstacks-DNASeq.Tpo src/$(DEPDIR)/hstacks-DNASeq.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/DNASeq.cc' object='src/hstacks-DNASeq.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/hstacks-DNASeq.obj `if test -f 'src/DNASeq.cc'; then $(CYGPATH_W) 'src/DNASeq.cc'; else $(CYGPATH_W) '$(srcdir)/src/DNASeq.cc'; fi`

src/hstacks-DNANSeq.o: src/DNANSeq.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hstacks_CXXFLAGS) $(CXXFLAGS) -MT src/hstacks-DNANSeq.o -MD -MP -MF src/$(DEPDIR)/hstacks-DNANSeq.Tpo -c -o src/hstacks-DNANSeq.o `test -f 'src/DNANSeq.cc' || echo '$(srcdir)/'`src/DNANSeq.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/hstacks-DNANSeq.Tpo src/$(DEPDIR)/hstacks-DNANSeq.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/DNANSeq.cc' object='src/hstacks-DNANSeq.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/hstacks-DNANSeq.o `test -f 'src/DNANSeq.cc' || echo '$(srcdir)/'`src/DNANSeq.cc

src/hstacks-DNANSeq.obj: src/DNANSeq.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hstacks_CXXFLAGS) $(CXXFLAGS) -MT src/hstacks-DNANSeq.obj -MD -MP -MF src/$(DEPDIR)/hstacks-DNANSeq.Tpo -c -o src/hstacks-DNANSeq.obj `if test -f 'src/DNANSeq.cc'; then $(CYGPATH_W) 'src/DNANSeq.cc'; else $(CYGPATH_W) '$(srcdir)/src/DNANSeq.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/hstacks-DNANSeq.Tpo src/$(DEPDIR)/hstacks-DNANSeq.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/DNANSeq.cc' object='src/hstacks-DNANSeq.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/hstacks-DNANSeq.obj `if test -f 'src/DNANSeq.cc'; then $(CYGPATH_W) 'src/DNANSeq.cc'; else $(CYGPATH_W) '$(srcdir)/src/DNANSeq.cc'; fi`

src/hstacks-input.o: src/input.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hstacks_CXXFLAGS) $(CXXFLAGS) -MT src/hstacks-input.o -MD -MP -MF src/$(DEPDIR)/hstacks-input.Tpo -c -o src/hstacks-input.o `test -f 'src/input.cc' || echo '$(srcdir)/'`src/input.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/hstacks-input.Tpo src/$(DEPDIR)/hstacks-input.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/input.cc' object='src/hstacks-input.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/hstacks-input.o `test -f 'src/input.cc' || echo '$(srcdir)/'`src/input.cc

src/hstacks-input.obj: src/input.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hstacks_CXXFLAGS) $(CXXFLAGS) -MT src/hstacks-input.obj -MD -MP -MF src/$(DEPDIR)/hstacks-input.Tpo -c -o src/hstacks-input.obj `if test -f 'src/input.cc'; then $(CYGPATH_W) 'src/input.cc'; else $(CYGPATH_W) '$(srcdir)/src/input.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/hstacks-input.Tpo src/$(DEPDIR)/hstacks-input.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/input.cc' object='src/hstacks-input.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/hstacks-input.obj `if test -f 'src/input.cc'; then $(CYGPATH_W) 'src/input.cc'; else $(CYGPATH_W) '$(srcdir)/src/input.cc'; fi`

src/kmer_filter-kmer_filter.o: src/kmer_filter.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kmer_filter_CXXFLAGS) $(CXXFLAGS) -MT src/kmer_filter-kmer_filter.o -MD -MP -MF src/$(DEPDIR)/kmer_filter-kmer_filter.Tpo -c -o src/kmer_filter-kmer_filter.o `test -f 'src/kmer_filter.cc' || echo '$(srcdir)/'`src/kmer_filter.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/kmer_filter-kmer_filter.Tpo src/$(DEPDIR)/kmer_filter-kmer_filter.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/kmer_filter.cc' object='src/kmer_filter-kmer_filter.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kmer_filter_CXXFLAGS) $(CXXFLAGS) -c -o src/kmer_filter-kmer_filter.o `test -f 'src/kmer_filter.cc' || echo '$(srcdir)/'`src/kmer_filter.cc

src/kmer_filter-kmer_filter.obj: src/kmer_filter.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kmer_filter_CXXFLAGS) $(CXXFLAGS) -MT src/kmer_filter-kmer_filter.obj -MD -MP -MF src/$(DEPDIR)/kmer_filter-kmer_filter.Tpo -c -o src/kmer_filter-kmer_filter.obj `if test -f 'src/kmer_filter.cc'; then $(CYGPATH_W) 'src/kmer_filter.cc'; else $(CYGPATH_W) '$(srcdir)/src/kmer_filter.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/kmer_filter-kmer_filter.Tpo src/$(DEPDIR)/kmer_filter-kmer_filter.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/kmer_filter.cc' object='src/kmer_filter-kmer_filter.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kmer_filter_CXXFLAGS) $(CXXFLAGS) -c -o src/kmer_filter-kmer_filter.obj `if test -f 'src/kmer_filter.cc'; then $(CYGPATH_W) 'src/kmer_filter.cc'; else $(CYGPATH_W) '$(srcdir)/src/kmer_filter.cc'; fi`

src/kmer_filter-utils.o: src/utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kmer_filter_CXXFLAGS) $(CXXFLAGS) -MT src/kmer_filter-utils.o -MD -MP -MF src/$(DEPDIR)/kmer_filter-utils.Tpo -c -o src/kmer_filter-utils.o `test -f 'src/utils.cc' || echo '$(srcdir)/'`src/utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/kmer_filter-utils.Tpo src/$(DEPDIR)/kmer_filter-utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/utils.cc' object='src/kmer_filter-utils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kmer_filter_CXXFLAGS) $(CXXFLAGS) -c -o src/kmer_filter-utils.o `test -f 'src/utils.cc' || echo '$(srcdir)/'`src/utils.cc

src/kmer_filter-utils.obj: src/utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kmer_filter_CXXFLAGS) $(CXXFLAGS) -MT src/kmer_filter-utils.obj -MD -MP -MF src/$(DEPDIR)/kmer_filter-utils.Tpo -c -o src/kmer_filter-utils.obj `if test -f 'src/utils.cc'; then $(CYGPATH_W) 'src/utils.cc'; else $(CYGPATH_W) '$(srcdir)/src/utils.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/kmer_filter-utils.Tpo src/$(DEPDIR)/kmer_filter-utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/utils.cc' object='src/kmer_filter-utils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kmer_filter_CXXFLAGS) $(CXXFLAGS) -c -o src/kmer_filter-utils.obj `if test -f 'src/utils.cc'; then $(CYGPATH_W) 'src/utils.cc'; else $(CYGPATH_W) '$(srcdir)/src/utils.cc'; fi`

src/kmer_filter-write.o: src/write.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kmer_filter_CXXFLAGS) $(CXXFLAGS) -MT src/kmer_filter-write.o -MD -MP -MF src/$(DEPDIR)/kmer_filter-write.Tpo -c -o src/kmer_filter-write.o `test -f 'src/write.cc' || echo '$(srcdir)/'`src/write.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/kmer_filter-write.Tpo src/$(DEPDIR)/kmer_filter-write.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/write.cc' object='src/kmer_filter-write.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kmer_filter_CXXFLAGS) $(CXXFLAGS) -c -o src/kmer_filter-write.o `test -f 'src/write.cc' || echo '$(srcdir)/'`src/write.cc

src/kmer_filter-write.obj: src/write.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kmer_filter_CXXFLAGS) $(CXXFLAGS) -MT src/kmer_filter-write.obj -MD -MP -MF src/$(DEPDIR)/kmer_filter-write.Tpo -c -o src/kmer_filter-write.obj `if test -f 'src/write.cc'; then $(CYGPATH_W) 'src/write.cc'; else $(CYGPATH_W) '$(srcdir)/src/write.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/kmer_filter-write.Tpo src/$(DEPDIR)/kmer_filter-write.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/write.cc' object='src/kmer_filter-write.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kmer_filter_CXXFLAGS) $(CXXFLAGS) -c -o src/kmer_filter-write.obj `if test -f 'src/write.cc'; then $(CYGPATH_W) 'src/write.cc'; else $(CYGPATH_W) '$(srcdir)/src/write.cc'; fi`

src/kmer_filter-kmers.o: src/kmers.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kmer_filter_CXXFLAGS) $(CXXFLAGS) -MT src/kmer_filter-kmers.o -MD -MP -MF src/$(DEPDIR)/kmer_filter-kmers.Tpo -c -o src/kmer_filter-kmers.o `test -f 'src/kmers.cc' || echo '$(srcdir)/'`src/kmers.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/kmer_filter-kmers.Tpo src/$(DEPDIR)/kmer_filter-kmers.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/kmers.cc' object='src/kmer_filter-kmers.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kmer_filter_CXXFLAGS) $(CXXFLAGS) -c -o src/kmer_filter-kmers.o `test -f 'src/kmers.cc' || echo '$(srcdir)/'`src/kmers.cc

src/kmer_filter-kmers.obj: src/kmers.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kmer_filter_CXXFLAGS) $(CXXFLAGS) -MT src/kmer_filter-kmers.obj -MD -MP -MF src/$(DEPDIR)/kmer_filter-kmers.Tpo -c -o src/kmer_filter-kmers.obj `if test -f 'src/kmers.cc'; then $(CYGPATH_W) 'src/kmers.cc'; else $(CYGPATH_W) '$(srcdir)/src/kmers.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/kmer_filter-kmers.Tpo src/$(DEPDIR)/kmer_filter-kmers.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/kmers.cc' object='src/kmer_filter-kmers.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kmer_filter_CXXFLAGS) $(CXXFLAGS) -c -o src/kmer_filter-kmers.obj `if test -f 'src/kmers.cc'; then $(CYGPATH_W) 'src/kmers.cc'; else $(CYGPATH_W) '$(srcdir)/src/kmers.cc'; fi`

src/kmer_filter-input.o: src/input.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kmer_filter_CXXFLAGS) $(CXXFLAGS) -MT src/kmer_filter-input.o -MD -MP -MF src/$(DEPDIR)/kmer_filter-input.Tpo -c -o src/kmer_filter-input.o `test -f 'src/input.cc' || echo '$(srcdir)/'`src/input.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/kmer_filter-input.Tpo src/$(DEPDIR)/kmer_filter-input.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/input.cc' object='src/kmer_filter-input.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kmer_filter_CXXFLAGS) $(CXXFLAGS) -c -o src/kmer_filter-input.o `test -f 'src/input.cc' || echo '$(srcdir)/'`src/input.cc

src/kmer_filter-input.obj: src/input.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kmer_filter_CXXFLAGS) $(CXXFLAGS) -MT src/kmer_filter-input.obj -MD -MP -MF src/$(DEPDIR)/kmer_filter-input.Tpo -c -o src/kmer_filter-input.obj `if test -f 'src/input.cc'; then $(CYGPATH_W) 'src/input.cc'; else $(CYGPATH_W) '$(srcdir)/src/input.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/kmer_filter-input.Tpo src/$(DEPDIR)/kmer_filter-input.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/input.cc' object='src/kmer_filter-input.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(kmer_filter_CXXFLAGS) $(CXXFLAGS) -c -o src/kmer_filter-input.obj `if test -f 'src/input.cc'; then $(CYGPATH_W) 'src/input.cc'; else $(CYGPATH_W) '$(srcdir)/src/input.cc'; fi`

src/phasedstacks-phasedstacks.o: src/phasedstacks.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(phasedstacks_CXXFLAGS) $(CXXFLAGS) -MT src/phasedstacks-phasedstacks.o -MD -MP -MF src/$(DEPDIR)/phasedstacks-phasedstacks.Tpo -c -o src/phasedstacks-phasedstacks.o `test -f 'src/phasedstacks.cc' || echo '$(srcdir)/'`src/phasedstacks.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/phasedstacks-phasedstacks.Tpo src/$(DEPDIR)/phasedstacks-phasedstacks.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/phasedstacks.cc' object='src/phasedstacks-phasedstacks.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(phasedstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/phasedstacks-phasedstacks.o `test -f 'src/phasedstacks.cc' || echo '$(srcdir)/'`src/phasedstacks.cc

src/phasedstacks-phasedstacks.obj: src/phasedstacks.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(phasedstacks_CXXFLAGS) $(CXXFLAGS) -MT src/phasedstacks-phasedstacks.obj -MD -MP -MF src/$(DEPDIR)/phasedstacks-phasedstacks.Tpo -c -o src/phasedstacks-phasedstacks.obj `if test -f 'src/phasedstacks.cc'; then $(CYGPATH_W) 'src/phasedstacks.cc'; else $(CYGPATH_W) '$(srcdir)/src/phasedstacks.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/phasedstacks-phasedstacks.Tpo src/$(DEPDIR)/phasedstacks-phasedstacks.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/phasedstacks.cc' object='src/phasedstacks-phasedstacks.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(phasedstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/phasedstacks-phasedstacks.obj `if test -f 'src/phasedstacks.cc'; then $(CYGPATH_W) 'src/phasedstacks.cc'; else $(CYGPATH_W) '$(srcdir)/src/phasedstacks.cc'; fi`

src/phasedstacks-locus.o: src/locus.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(phasedstacks_CXXFLAGS) $(CXXFLAGS) -MT src/phasedstacks-locus.o -MD -MP -MF src/$(DEPDIR)/phasedstacks-locus.Tpo -c -o src/phasedstacks-locus.o `test -f 'src/locus.cc' || echo '$(srcdir)/'`src/locus.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/phasedstacks-locus.Tpo src/$(DEPDIR)/phasedstacks-locus.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/locus.cc' object='src/phasedstacks-locus.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(phasedstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/phasedstacks-locus.o `test -f 'src/locus.cc' || echo '$(srcdir)/'`src/locus.cc

src/phasedstacks-locus.obj: src/locus.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(phasedstacks_CXXFLAGS) $(CXXFLAGS) -MT src/phasedstacks-locus.obj -MD -MP -MF src/$(DEPDIR)/phasedstacks-locus.Tpo -c -o src/phasedstacks-locus.obj `if test -f 'src/locus.cc'; then $(CYGPATH_W) 'src/locus.cc'; else $(CYGPATH_W) '$(srcdir)/src/locus.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/phasedstacks-locus.Tpo src/$(DEPDIR)/phasedstacks-locus.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/locus.cc' object='src/phasedstacks-locus.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(phasedstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/phasedstacks-locus.obj `if test -f 'src/locus.cc'; then $(CYGPATH_W) 'src/locus.cc'; else $(CYGPATH_W) '$(srcdir)/src/locus.cc'; fi`

src/phasedstacks-input.o: src/input.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(phasedstacks_CXXFLAGS) $(CXXFLAGS) -MT src/phasedstacks-input.o -MD -MP -MF src/$(DEPDIR)/phasedstacks-input.Tpo -c -o src/phasedstacks-input.o `test -f 'src/input.cc' || echo '$(srcdir)/'`src/input.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/phasedstacks-input.Tpo src/$(DEPDIR)/phasedstacks-input.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/input.cc' object='src/phasedstacks-input.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(phasedstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/phasedstacks-input.o `test -f 'src/input.cc' || echo '$(srcdir)/'`src/input.cc

src/phasedstacks-input.obj: src/input.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(phasedstacks_CXXFLAGS) $(CXXFLAGS) -MT src/phasedstacks-input.obj -MD -MP -MF src/$(DEPDIR)/phasedstacks-input.Tpo -c -o src/phasedstacks-input.obj `if test -f 'src/input.cc'; then $(CYGPATH_W) 'src/input.cc'; else $(CYGPATH_W) '$(srcdir)/src/input.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/phasedstacks-input.Tpo src/$(DEPDIR)/phasedstacks-input.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/input.cc' object='src/phasedstacks-input.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(phasedstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/phasedstacks-input.obj `if test -f 'src/input.cc'; then $(CYGPATH_W) 'src/input.cc'; else $(CYGPATH_W) '$(srcdir)/src/input.cc'; fi`

src/phasedstacks-log_utils.o: src/log_utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(phasedstacks_CXXFLAGS) $(CXXFLAGS) -MT src/phasedstacks-log_utils.o -MD -MP -MF src/$(DEPDIR)/phasedstacks-log_utils.Tpo -c -o src/phasedstacks-log_utils.o `test -f 'src/log_utils.cc' || echo '$(srcdir)/'`src/log_utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/phasedstacks-log_utils.Tpo src/$(DEPDIR)/phasedstacks-log_utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/log_utils.cc' object='src/phasedstacks-log_utils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(phasedstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/phasedstacks-log_utils.o `test -f 'src/log_utils.cc' || echo '$(srcdir)/'`src/log_utils.cc

src/phasedstacks-log_utils.obj: src/log_utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(phasedstacks_CXXFLAGS) $(CXXFLAGS) -MT src/phasedstacks-log_utils.obj -MD -MP -MF src/$(DEPDIR)/phasedstacks-log_utils.Tpo -c -o src/phasedstacks-log_utils.obj `if test -f 'src/log_utils.cc'; then $(CYGPATH_W) 'src/log_utils.cc'; else $(CYGPATH_W) '$(srcdir)/src/log_utils.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/phasedstacks-log_utils.Tpo src/$(DEPDIR)/phasedstacks-log_utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/log_utils.cc' object='src/phasedstacks-log_utils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(phasedstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/phasedstacks-log_utils.obj `if test -f 'src/log_utils.cc'; then $(CYGPATH_W) 'src/log_utils.cc'; else $(CYGPATH_W) '$(srcdir)/src/log_utils.cc'; fi`

src/phasedstacks-utils.o: src/utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(phasedstacks_CXXFLAGS) $(CXXFLAGS) -MT src/phasedstacks-utils.o -MD -MP -MF src/$(DEPDIR)/phasedstacks-utils.Tpo -c -o src/phasedstacks-utils.o `test -f 'src/utils.cc' || echo '$(srcdir)/'`src/utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/phasedstacks-utils.Tpo src/$(DEPDIR)/phasedstacks-utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/utils.cc' object='src/phasedstacks-utils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(phasedstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/phasedstacks-utils.o `test -f 'src/utils.cc' || echo '$(srcdir)/'`src/utils.cc

src/phasedstacks-utils.obj: src/utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(phasedstacks_CXXFLAGS) $(CXXFLAGS) -MT src/phasedstacks-utils.obj -MD -MP -MF src/$(DEPDIR)/phasedstacks-utils.Tpo -c -o src/phasedstacks-utils.obj `if test -f 'src/utils.cc'; then $(CYGPATH_W) 'src/utils.cc'; else $(CYGPATH_W) '$(srcdir)/src/utils.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/phasedstacks-utils.Tpo src/$(DEPDIR)/phasedstacks-utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/utils.cc' object='src/phasedstacks-utils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(phasedstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/phasedstacks-utils.obj `if test -f 'src/utils.cc'; then $(CYGPATH_W) 'src/utils.cc'; else $(CYGPATH_W) '$(srcdir)/src/utils.cc'; fi`

src/phasedstacks-catalog_utils.o: src/catalog_utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(phasedstacks_CXXFLAGS) $(CXXFLAGS) -MT src/phasedstacks-catalog_utils.o -MD -MP -MF src/$(DEPDIR)/phasedstacks-catalog_utils.Tpo -c -o src/phasedstacks-catalog_utils.o `test -f 'src/catalog_utils.cc' || echo '$(srcdir)/'`src/catalog_utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/phasedstacks-catalog_utils.Tpo src/$(DEPDIR)/phasedstacks-catalog_utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/catalog_utils.cc' object='src/phasedstacks-catalog_utils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(phasedstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/phasedstacks-catalog_utils.o `test -f 'src/catalog_utils.cc' || echo '$(srcdir)/'`src/catalog_utils.cc

src/phasedstacks-catalog_utils.obj: src/catalog_utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(phasedstacks_CXXFLAGS) $(CXXFLAGS) -MT src/phasedstacks-catalog_utils.obj -MD -MP -MF src/$(DEPDIR)/phasedstacks-catalog_utils.Tpo -c -o src/phasedstacks-catalog_utils.obj `if test -f 'src/catalog_utils.cc'; then $(CYGPATH_W) 'src/catalog_utils.cc'; else $(CYGPATH_W) '$(srcdir)/src/catalog_utils.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/phasedstacks-catalog_utils.Tpo src/$(DEPDIR)/phasedstacks-catalog_utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/catalog_utils.cc' object='src/phasedstacks-catalog_utils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(phasedstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/phasedstacks-catalog_utils.obj `if test -f 'src/catalog_utils.cc'; then $(CYGPATH_W) 'src/catalog_utils.cc'; else $(CYGPATH_W) '$(srcdir)/src/catalog_utils.cc'; fi`

src/populations-populations.o: src/populations.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(populations_CXXFLAGS) $(CXXFLAGS) -MT src/populations-populations.o -MD -MP -MF src/$(DEPDIR)/populations-populations.Tpo -c -o src/populations-populations.o `test -f 'src/populations.cc' || echo '$(srcdir)/'`src/populations.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/populations-populations.Tpo src/$(DEPDIR)/populations-populations.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/populations.cc' object='src/populations-populations.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(populations_CXXFLAGS) $(CXXFLAGS) -c -o src/populations-populations.o `test -f 'src/populations.cc' || echo '$(srcdir)/'`src/populations.cc

src/populations-populations.obj: src/populations.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(populations_CXXFLAGS) $(CXXFLAGS) -MT src/populations-populations.obj -MD -MP -MF src/$(DEPDIR)/populations-populations.Tpo -c -o src/populations-populations.obj `if test -f 'src/populations.cc'; then $(CYGPATH_W) 'src/populations.cc'; else $(CYGPATH_W) '$(srcdir)/src/populations.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/populations-populations.Tpo src/$(DEPDIR)/populations-populations.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/populations.cc' object='src/populations-populations.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(populations_CXXFLAGS) $(CXXFLAGS) -c -o src/populations-populations.obj `if test -f 'src/populations.cc'; then $(CYGPATH_W) 'src/populations.cc'; else $(CYGPATH_W) '$(srcdir)/src/populations.cc'; fi`

src/populations-utils.o: src/utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(populations_CXXFLAGS) $(CXXFLAGS) -MT src/populations-utils.o -MD -MP -MF src/$(DEPDIR)/populations-utils.Tpo -c -o src/populations-utils.o `test -f 'src/utils.cc' || echo '$(srcdir)/'`src/utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/populations-utils.Tpo src/$(DEPDIR)/populations-utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/utils.cc' object='src/populations-utils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(populations_CXXFLAGS) $(CXXFLAGS) -c -o src/populations-utils.o `test -f 'src/utils.cc' || echo '$(srcdir)/'`src/utils.cc

src/populations-utils.obj: src/utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(populations_CXXFLAGS) $(CXXFLAGS) -MT src/populations-utils.obj -MD -MP -MF src/$(DEPDIR)/populations-utils.Tpo -c -o src/populations-utils.obj `if test -f 'src/utils.cc'; then $(CYGPATH_W) 'src/utils.cc'; else $(CYGPATH_W) '$(srcdir)/src/utils.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/populations-utils.Tpo src/$(DEPDIR)/populations-utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/utils.cc' object='src/populations-utils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(populations_CXXFLAGS) $(CXXFLAGS) -c -o src/populations-utils.obj `if test -f 'src/utils.cc'; then $(CYGPATH_W) 'src/utils.cc'; else $(CYGPATH_W) '$(srcdir)/src/utils.cc'; fi`

src/populations-catalog_utils.o: src/catalog_utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(populations_CXXFLAGS) $(CXXFLAGS) -MT src/populations-catalog_utils.o -MD -MP -MF src/$(DEPDIR)/populations-catalog_utils.Tpo -c -o src/populations-catalog_utils.o `test -f 'src/catalog_utils.cc' || echo '$(srcdir)/'`src/catalog_utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/populations-catalog_utils.Tpo src/$(DEPDIR)/populations-catalog_utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/catalog_utils.cc' object='src/populations-catalog_utils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(populations_CXXFLAGS) $(CXXFLAGS) -c -o src/populations-catalog_utils.o `test -f 'src/catalog_utils.cc' || echo '$(srcdir)/'`src/catalog_utils.cc

src/populations-catalog_utils.obj: src/catalog_utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(populations_CXXFLAGS) $(CXXFLAGS) -MT src/populations-catalog_utils.obj -MD -MP -MF src/$(DEPDIR)/populations-catalog_utils.Tpo -c -o src/populations-catalog_utils.obj `if test -f 'src/catalog_utils.cc'; then $(CYGPATH_W) 'src/catalog_utils.cc'; else $(CYGPATH_W) '$(srcdir)/src/catalog_utils.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/populations-catalog_utils.Tpo src/$(DEPDIR)/populations-catalog_utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/catalog_utils.cc' object='src/populations-catalog_utils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(populations_CXXFLAGS) $(CXXFLAGS) -c -o src/populations-catalog_utils.obj `if test -f 'src/catalog_utils.cc'; then $(CYGPATH_W) 'src/catalog_utils.cc'; else $(CYGPATH_W) '$(srcdir)/src/catalog_utils.cc'; fi`

src/populations-log_utils.o: src/log_utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(populations_CXXFLAGS) $(CXXFLAGS) -MT src/populations-log_utils.o -MD -MP -MF src/$(DEPDIR)/populations-log_utils.Tpo -c -o src/populations-log_utils.o `test -f 'src/log_utils.cc' || echo '$(srcdir)/'`src/log_utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/populations-log_utils.Tpo src/$(DEPDIR)/populations-log_utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/log_utils.cc' object='src/populations-log_utils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(populations_CXXFLAGS) $(CXXFLAGS) -c -o src/populations-log_utils.o `test -f 'src/log_utils.cc' || echo '$(srcdir)/'`src/log_utils.cc

src/populations-log_utils.obj: src/log_utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(populations_CXXFLAGS) $(CXXFLAGS) -MT src/populations-log_utils.obj -MD -MP -MF src/$(DEPDIR)/populations-log_utils.Tpo -c -o src/populations-log_utils.obj `if test -f 'src/log_utils.cc'; then $(CYGPATH_W) 'src/log_utils.cc'; else $(CYGPATH_W) '$(srcdir)/src/log_utils.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/populations-log_utils.Tpo src/$(DEPDIR)/populations-log_utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/log_utils.cc' object='src/populations-log_utils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(populations_CXXFLAGS) $(CXXFLAGS) -c -o src/populations-log_utils.obj `if test -f 'src/log_utils.cc'; then $(CYGPATH_W) 'src/log_utils.cc'; else $(CYGPATH_W) '$(srcdir)/src/log_utils.cc'; fi`

src/populations-stacks.o: src/stacks.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(populations_CXXFLAGS) $(CXXFLAGS) -MT src/populations-stacks.o -MD -MP -MF src/$(DEPDIR)/populations-stacks.Tpo -c -o src/populations-stacks.o `test -f 'src/stacks.cc' || echo '$(srcdir)/'`src/stacks.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/populations-stacks.Tpo src/$(DEPDIR)/populations-stacks.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/stacks.cc' object='src/populations-stacks.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(populations_CXXFLAGS) $(CXXFLAGS) -c -o src/populations-stacks.o `test -f 'src/stacks.cc' || echo '$(srcdir)/'`src/stacks.cc

src/populations-stacks.obj: src/stacks.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(populations_CXXFLAGS) $(CXXFLAGS) -MT src/populations-stacks.obj -MD -MP -MF src/$(DEPDIR)/populations-stacks.Tpo -c -o src/populations-stacks.obj `if test -f 'src/stacks.cc'; then $(CYGPATH_W) 'src/stacks.cc'; else $(CYGPATH_W) '$(srcdir)/src/stacks.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/populations-stacks.Tpo src/$(DEPDIR)/populations-stacks.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/stacks.cc' object='src/populations-stacks.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(populations_CXXFLAGS) $(CXXFLAGS) -c -o src/populations-stacks.obj `if test -f 'src/stacks.cc'; then $(CYGPATH_W) 'src/stacks.cc'; else $(CYGPATH_W) '$(srcdir)/src/stacks.cc'; fi`

src/populations-locus.o: src/locus.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(populations_CXXFLAGS) $(CXXFLAGS) -MT src/populations-locus.o -MD -MP -MF src/$(DEPDIR)/populations-locus.Tpo -c -o src/populations-locus.o `test -f 'src/locus.cc' || echo '$(srcdir)/'`src/locus.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/populations-locus.Tpo src/$(DEPDIR)/populations-locus.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/locus.cc' object='src/populations-locus.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(populations_CXXFLAGS) $(CXXFLAGS) -c -o src/populations-locus.o `test -f 'src/locus.cc' || echo '$(srcdir)/'`src/locus.cc

src/populations-locus.obj: src/locus.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(populations_CXXFLAGS) $(CXXFLAGS) -MT src/populations-locus.obj -MD -MP -MF src/$(DEPDIR)/populations-locus.Tpo -c -o src/populations-locus.obj `if test -f 'src/locus.cc'; then $(CYGPATH_W) 'src/locus.cc'; else $(CYGPATH_W) '$(srcdir)/src/locus.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/populations-locus.Tpo src/$(DEPDIR)/populations-locus.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/locus.cc' object='src/populations-locus.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(populations_CXXFLAGS) $(CXXFLAGS) -c -o src/populations-locus.obj `if test -f 'src/locus.cc'; then $(CYGPATH_W) 'src/locus.cc'; else $(CYGPATH_W) '$(srcdir)/src/locus.cc'; fi`

src/populations-DNASeq.o: src/DNASeq.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(populations_CXXFLAGS) $(CXXFLAGS) -MT src/populations-DNASeq.o -MD -MP -MF src/$(DEPDIR)/populations-DNASeq.Tpo -c -o src/populations-DNASeq.o `test -f 'src/DNASeq.cc' || echo '$(srcdir)/'`src/DNASeq.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/populations-DNASeq.Tpo src/$(DEPDIR)/populations-DNASeq.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/DNASeq.cc' object='src/populations-DNASeq.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(populations_CXXFLAGS) $(CXXFLAGS) -c -o src/populations-DNASeq.o `test -f 'src/DNASeq.cc' || echo '$(srcdir)/'`src/DNASeq.cc

src/populations-DNASeq.obj: src/DNASeq.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(populations_CXXFLAGS) $(CXXFLAGS) -MT src/populations-DNASeq.obj -MD -MP -MF src/$(DEPDIR)/populations-DNASeq.Tpo -c -o src/populations-DNASeq.obj `if test -f 'src/DNASeq.cc'; then $(CYGPATH_W) 'src/DNASeq.cc'; else $(CYGPATH_W) '$(srcdir)/src/DNASeq.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/populations-DNASeq.Tpo src/$(DEPDIR)/populations-DNASeq.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/DNASeq.cc' object='src/populations-DNASeq.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(populations_CXXFLAGS) $(CXXFLAGS) -c -o src/populations-DNASeq.obj `if test -f 'src/DNASeq.cc'; then $(CYGPATH_W) 'src/DNASeq.cc'; else $(CYGPATH_W) '$(srcdir)/src/DNASeq.cc'; fi`

src/populations-DNANSeq.o: src/DNANSeq.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(populations_CXXFLAGS) $(CXXFLAGS) -MT src/populations-DNANSeq.o -MD -MP -MF src/$(DEPDIR)/populations-DNANSeq.Tpo -c -o src/populations-DNANSeq.o `test -f 'src/DNANSeq.cc' || echo '$(srcdir)/'`src/DNANSeq.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/populations-DNANSeq.Tpo src/$(DEPDIR)/populations-DNANSeq.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/DNANSeq.cc' object='src/populations-DNANSeq.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(populations_CXXFLAGS) $(CXXFLAGS) -c -o src/populations-DNANSeq.o `test -f 'src/DNANSeq.cc' || echo '$(srcdir)/'`src/DNANSeq.cc

src/populations-DNANSeq.obj: src/DNANSeq.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(populations_CXXFLAGS) $(CXXFLAGS) -MT src/populations-DNANSeq.obj -MD -MP -MF src/$(DEPDIR)/populations-DNANSeq.Tpo -c -o src/populations-DNANSeq.obj `if test -f 'src/DNANSeq.cc'; then $(CYGPATH_W) 'src/DNANSeq.cc'; else $(CYGPATH_W) '$(srcdir)/src/DNANSeq.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/populations-DNANSeq.Tpo src/$(DEPDIR)/populations-DNANSeq.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/DNANSeq.cc' object='src/populations-DNANSeq.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(populations_CXXFLAGS) $(CXXFLAGS) -c -o src/populations-DNANSeq.obj `if test -f 'src/DNANSeq.cc'; then $(CYGPATH_W) 'src/DNANSeq.cc'; else $(CYGPATH_W) '$(srcdir)/src/DNANSeq.cc'; fi`

src/populations-input.o: src/input.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(populations_CXXFLAGS) $(CXXFLAGS) -MT src/populations-input.o -MD -MP -MF src/$(DEPDIR)/populations-input.Tpo -c -o src/populations-input.o `test -f 'src/input.cc' || echo '$(srcdir)/'`src/input.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/populations-input.Tpo src/$(DEPDIR)/populations-input.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/input.cc' object='src/populations-input.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(populations_CXXFLAGS) $(CXXFLAGS) -c -o src/populations-input.o `test -f 'src/input.cc' || echo '$(srcdir)/'`src/input.cc

src/populations-input.obj: src/input.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(populations_CXXFLAGS) $(CXXFLAGS) -MT src/populations-input.obj -MD -MP -MF src/$(DEPDIR)/populations-input.Tpo -c -o src/populations-input.obj `if test -f 'src/input.cc'; then $(CYGPATH_W) 'src/input.cc'; else $(CYGPATH_W) '$(srcdir)/src/input.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/populations-input.Tpo src/$(DEPDIR)/populations-input.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/input.cc' object='src/populations-input.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(populations_CXXFLAGS) $(CXXFLAGS) -c -o src/populations-input.obj `if test -f 'src/input.cc'; then $(CYGPATH_W) 'src/input.cc'; else $(CYGPATH_W) '$(srcdir)/src/input.cc'; fi`

src/process_radtags-process_radtags.o: src/process_radtags.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(process_radtags_CXXFLAGS) $(CXXFLAGS) -MT src/process_radtags-process_radtags.o -MD -MP -MF src/$(DEPDIR)/process_radtags-process_radtags.Tpo -c -o src/process_radtags-process_radtags.o `test -f 'src/process_radtags.cc' || echo '$(srcdir)/'`src/process_radtags.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/process_radtags-process_radtags.Tpo src/$(DEPDIR)/process_radtags-process_radtags.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/process_radtags.cc' object='src/process_radtags-process_radtags.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(process_radtags_CXXFLAGS) $(CXXFLAGS) -c -o src/process_radtags-process_radtags.o `test -f 'src/process_radtags.cc' || echo '$(srcdir)/'`src/process_radtags.cc

src/process_radtags-process_radtags.obj: src/process_radtags.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(process_radtags_CXXFLAGS) $(CXXFLAGS) -MT src/process_radtags-process_radtags.obj -MD -MP -MF src/$(DEPDIR)/process_radtags-process_radtags.Tpo -c -o src/process_radtags-process_radtags.obj `if test -f 'src/process_radtags.cc'; then $(CYGPATH_W) 'src/process_radtags.cc'; else $(CYGPATH_W) '$(srcdir)/src/process_radtags.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/process_radtags-process_radtags.Tpo src/$(DEPDIR)/process_radtags-process_radtags.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/process_radtags.cc' object='src/process_radtags-process_radtags.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(process_radtags_CXXFLAGS) $(CXXFLAGS) -c -o src/process_radtags-process_radtags.obj `if test -f 'src/process_radtags.cc'; then $(CYGPATH_W) 'src/process_radtags.cc'; else $(CYGPATH_W) '$(srcdir)/src/process_radtags.cc'; fi`

src/process_radtags-utils.o: src/utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(process_radtags_CXXFLAGS) $(CXXFLAGS) -MT src/process_radtags-utils.o -MD -MP -MF src/$(DEPDIR)/process_radtags-utils.Tpo -c -o src/process_radtags-utils.o `test -f 'src/utils.cc' || echo '$(srcdir)/'`src/utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/process_radtags-utils.Tpo src/$(DEPDIR)/process_radtags-utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/utils.cc' object='src/process_radtags-utils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(process_radtags_CXXFLAGS) $(CXXFLAGS) -c -o src/process_radtags-utils.o `test -f 'src/utils.cc' || echo '$(srcdir)/'`src/utils.cc

src/process_radtags-utils.obj: src/utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(process_radtags_CXXFLAGS) $(CXXFLAGS) -MT src/process_radtags-utils.obj -MD -MP -MF src/$(DEPDIR)/process_radtags-utils.Tpo -c -o src/process_radtags-utils.obj `if test -f 'src/utils.cc'; then $(CYGPATH_W) 'src/utils.cc'; else $(CYGPATH_W) '$(srcdir)/src/utils.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/process_radtags-utils.Tpo src/$(DEPDIR)/process_radtags-utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/utils.cc' object='src/process_radtags-utils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(process_radtags_CXXFLAGS) $(CXXFLAGS) -c -o src/process_radtags-utils.obj `if test -f 'src/utils.cc'; then $(CYGPATH_W) 'src/utils.cc'; else $(CYGPATH_W) '$(srcdir)/src/utils.cc'; fi`

src/process_radtags-log_utils.o: src/log_utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(process_radtags_CXXFLAGS) $(CXXFLAGS) -MT src/process_radtags-log_utils.o -MD -MP -MF src/$(DEPDIR)/process_radtags-log_utils.Tpo -c -o src/process_radtags-log_utils.o `test -f 'src/log_utils.cc' || echo '$(srcdir)/'`src/log_utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/process_radtags-log_utils.Tpo src/$(DEPDIR)/process_radtags-log_utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/log_utils.cc' object='src/process_radtags-log_utils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(process_radtags_CXXFLAGS) $(CXXFLAGS) -c -o src/process_radtags-log_utils.o `test -f 'src/log_utils.cc' || echo '$(srcdir)/'`src/log_utils.cc

src/process_radtags-log_utils.obj: src/log_utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(process_radtags_CXXFLAGS) $(CXXFLAGS) -MT src/process_radtags-log_utils.obj -MD -MP -MF src/$(DEPDIR)/process_radtags-log_utils.Tpo -c -o src/process_radtags-log_utils.obj `if test -f 'src/log_utils.cc'; then $(CYGPATH_W) 'src/log_utils.cc'; else $(CYGPATH_W) '$(srcdir)/src/log_utils.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/process_radtags-log_utils.Tpo src/$(DEPDIR)/process_radtags-log_utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/log_utils.cc' object='src/process_radtags-log_utils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(process_radtags_CXXFLAGS) $(CXXFLAGS) -c -o src/process_radtags-log_utils.obj `if test -f 'src/log_utils.cc'; then $(CYGPATH_W) 'src/log_utils.cc'; else $(CYGPATH_W) '$(srcdir)/src/log_utils.cc'; fi`

src/process_radtags-write.o: src/write.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(process_radtags_CXXFLAGS) $(CXXFLAGS) -MT src/process_radtags-write.o -MD -MP -MF src/$(DEPDIR)/process_radtags-write.Tpo -c -o src/process_radtags-write.o `test -f 'src/write.cc' || echo '$(srcdir)/'`src/write.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/process_radtags-write.Tpo src/$(DEPDIR)/process_radtags-write.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/write.cc' object='src/process_radtags-write.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(process_radtags_CXXFLAGS) $(CXXFLAGS) -c -o src/process_radtags-write.o `test -f 'src/write.cc' || echo '$(srcdir)/'`src/write.cc

src/process_radtags-write.obj: src/write.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(process_radtags_CXXFLAGS) $(CXXFLAGS) -MT src/process_radtags-write.obj -MD -MP -MF src/$(DEPDIR)/process_radtags-write.Tpo -c -o src/process_radtags-write.obj `if test -f 'src/write.cc'; then $(CYGPATH_W) 'src/write.cc'; else $(CYGPATH_W) '$(srcdir)/src/write.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/process_radtags-write.Tpo src/$(DEPDIR)/process_radtags-write.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/write.cc' object='src/process_radtags-write.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(process_radtags_CXXFLAGS) $(CXXFLAGS) -c -o src/process_radtags-write.obj `if test -f 'src/write.cc'; then $(CYGPATH_W) 'src/write.cc'; else $(CYGPATH_W) '$(srcdir)/src/write.cc'; fi`

src/process_radtags-clean.o: src/clean.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(process_radtags_CXXFLAGS) $(CXXFLAGS) -MT src/process_radtags-clean.o -MD -MP -MF src/$(DEPDIR)/process_radtags-clean.Tpo -c -o src/process_radtags-clean.o `test -f 'src/clean.cc' || echo '$(srcdir)/'`src/clean.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/process_radtags-clean.Tpo src/$(DEPDIR)/process_radtags-clean.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/clean.cc' object='src/process_radtags-clean.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(process_radtags_CXXFLAGS) $(CXXFLAGS) -c -o src/process_radtags-clean.o `test -f 'src/clean.cc' || echo '$(srcdir)/'`src/clean.cc

src/process_radtags-clean.obj: src/clean.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(process_radtags_CXXFLAGS) $(CXXFLAGS) -MT src/process_radtags-clean.obj -MD -MP -MF src/$(DEPDIR)/process_radtags-clean.Tpo -c -o src/process_radtags-clean.obj `if test -f 'src/clean.cc'; then $(CYGPATH_W) 'src/clean.cc'; else $(CYGPATH_W) '$(srcdir)/src/clean.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/process_radtags-clean.Tpo src/$(DEPDIR)/process_radtags-clean.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/clean.cc' object='src/process_radtags-clean.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(process_radtags_CXXFLAGS) $(CXXFLAGS) -c -o src/process_radtags-clean.obj `if test -f 'src/clean.cc'; then $(CYGPATH_W) 'src/clean.cc'; else $(CYGPATH_W) '$(srcdir)/src/clean.cc'; fi`

src/process_radtags-file_io.o: src/file_io.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(process_radtags_CXXFLAGS) $(CXXFLAGS) -MT src/process_radtags-file_io.o -MD -MP -MF src/$(DEPDIR)/process_radtags-file_io.Tpo -c -o src/process_radtags-file_io.o `test -f 'src/file_io.cc' || echo '$(srcdir)/'`src/file_io.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/process_radtags-file_io.Tpo src/$(DEPDIR)/process_radtags-file_io.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/file_io.cc' object='src/process_radtags-file_io.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(process_radtags_CXXFLAGS) $(CXXFLAGS) -c -o src/process_radtags-file_io.o `test -f 'src/file_io.cc' || echo '$(srcdir)/'`src/file_io.cc

src/process_radtags-file_io.obj: src/file_io.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(process_radtags_CXXFLAGS) $(CXXFLAGS) -MT src/process_radtags-file_io.obj -MD -MP -MF src/$(DEPDIR)/process_radtags-file_io.Tpo -c -o src/process_radtags-file_io.obj `if test -f 'src/file_io.cc'; then $(CYGPATH_W) 'src/file_io.cc'; else $(CYGPATH_W) '$(srcdir)/src/file_io.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/process_radtags-file_io.Tpo src/$(DEPDIR)/process_radtags-file_io.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/file_io.cc' object='src/process_radtags-file_io.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(process_radtags_CXXFLAGS) $(CXXFLAGS) -c -o src/process_radtags-file_io.obj `if test -f 'src/file_io.cc'; then $(CYGPATH_W) 'src/file_io.cc'; else $(CYGPATH_W) '$(srcdir)/src/file_io.cc'; fi`

src/process_radtags-input.o: src/input.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(process_radtags_CXXFLAGS) $(CXXFLAGS) -MT src/process_radtags-input.o -MD -MP -MF src/$(DEPDIR)/process_radtags-input.Tpo -c -o src/process_radtags-input.o `test -f 'src/input.cc' || echo '$(srcdir)/'`src/input.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/process_radtags-input.Tpo src/$(DEPDIR)/process_radtags-input.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/input.cc' object='src/process_radtags-input.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(process_radtags_CXXFLAGS) $(CXXFLAGS) -c -o src/process_radtags-input.o `test -f 'src/input.cc' || echo '$(srcdir)/'`src/input.cc

src/process_radtags-input.obj: src/input.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(process_radtags_CXXFLAGS) $(CXXFLAGS) -MT src/process_radtags-input.obj -MD -MP -MF src/$(DEPDIR)/process_radtags-input.Tpo -c -o src/process_radtags-input.obj `if test -f 'src/input.cc'; then $(CYGPATH_W) 'src/input.cc'; else $(CYGPATH_W) '$(srcdir)/src/input.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/process_radtags-input.Tpo src/$(DEPDIR)/process_radtags-input.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/input.cc' object='src/process_radtags-input.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(process_radtags_CXXFLAGS) $(CXXFLAGS) -c -o src/process_radtags-input.obj `if test -f 'src/input.cc'; then $(CYGPATH_W) 'src/input.cc'; else $(CYGPATH_W) '$(srcdir)/src/input.cc'; fi`

src/process_shortreads-process_shortreads.o: src/process_shortreads.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(process_shortreads_CXXFLAGS) $(CXXFLAGS) -MT src/process_shortreads-process_shortreads.o -MD -MP -MF src/$(DEPDIR)/process_shortreads-process_shortreads.Tpo -c -o src/process_shortreads-process_shortreads.o `test -f 'src/process_shortreads.cc' || echo '$(srcdir)/'`src/process_shortreads.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/process_shortreads-process_shortreads.Tpo src/$(DEPDIR)/process_shortreads-process_shortreads.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/process_shortreads.cc' object='src/process_shortreads-process_shortreads.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(process_shortreads_CXXFLAGS) $(CXXFLAGS) -c -o src/process_shortreads-process_shortreads.o `test -f 'src/process_shortreads.cc' || echo '$(srcdir)/'`src/process_shortreads.cc

src/process_shortreads-process_shortreads.obj: src/process_shortreads.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(process_shortreads_CXXFLAGS) $(CXXFLAGS) -MT src/process_shortreads-process_shortreads.obj -MD -MP -MF src/$(DEPDIR)/process_shortreads-process_shortreads.Tpo -c -o src/process_shortreads-process_shortreads.obj `if test -f 'src/process_shortreads.cc'; then $(CYGPATH_W) 'src/process_shortreads.cc'; else $(CYGPATH_W) '$(srcdir)/src/process_shortreads.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/process_shortreads-process_shortreads.Tpo src/$(DEPDIR)/process_shortreads-process_shortreads.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/process_shortreads.cc' object='src/process_shortreads-process_shortreads.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(process_shortreads_CXXFLAGS) $(CXXFLAGS) -c -o src/process_shortreads-process_shortreads.obj `if test -f 'src/process_shortreads.cc'; then $(CYGPATH_W) 'src/process_shortreads.cc'; else $(CYGPATH_W) '$(srcdir)/src/process_shortreads.cc'; fi`

src/process_shortreads-clean.o: src/clean.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(process_shortreads_CXXFLAGS) $(CXXFLAGS) -MT src/process_shortreads-clean.o -MD -MP -MF src/$(DEPDIR)/process_shortreads-clean.Tpo -c -o src/process_shortreads-clean.o `test -f 'src/clean.cc' || echo '$(srcdir)/'`src/clean.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/process_shortreads-clean.Tpo src/$(DEPDIR)/process_shortreads-clean.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/clean.cc' object='src/process_shortreads-clean.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(process_shortreads_CXXFLAGS) $(CXXFLAGS) -c -o src/process_shortreads-clean.o `test -f 'src/clean.cc' || echo '$(srcdir)/'`src/clean.cc

src/process_shortreads-clean.obj: src/clean.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(process_shortreads_CXXFLAGS) $(CXXFLAGS) -MT src/process_shortreads-clean.obj -MD -MP -MF src/$(DEPDIR)/process_shortreads-clean.Tpo -c -o src/process_shortreads-clean.obj `if test -f 'src/clean.cc'; then $(CYGPATH_W) 'src/clean.cc'; else $(CYGPATH_W) '$(srcdir)/src/clean.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/process_shortreads-clean.Tpo src/$(DEPDIR)/process_shortreads-clean.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/clean.cc' object='src/process_shortreads-clean.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(process_shortreads_CXXFLAGS) $(CXXFLAGS) -c -o src/process_shortreads-clean.obj `if test -f 'src/clean.cc'; then $(CYGPATH_W) 'src/clean.cc'; else $(CYGPATH_W) '$(srcdir)/src/clean.cc'; fi`

src/process_shortreads-file_io.o: src/file_io.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(process_shortreads_CXXFLAGS) $(CXXFLAGS) -MT src/process_shortreads-file_io.o -MD -MP -MF src/$(DEPDIR)/process_shortreads-file_io.Tpo -c -o src/process_shortreads-file_io.o `test -f 'src/file_io.cc' || echo '$(srcdir)/'`src/file_io.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/process_shortreads-file_io.Tpo src/$(DEPDIR)/process_shortreads-file_io.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/file_io.cc' object='src/process_shortreads-file_io.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(process_shortreads_CXXFLAGS) $(CXXFLAGS) -c -o src/process_shortreads-file_io.o `test -f 'src/file_io.cc' || echo '$(srcdir)/'`src/file_io.cc

src/process_shortreads-file_io.obj: src/file_io.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(process_shortreads_CXXFLAGS) $(CXXFLAGS) -MT src/process_shortreads-file_io.obj -MD -MP -MF src/$(DEPDIR)/process_shortreads-file_io.Tpo -c -o src/process_shortreads-file_io.obj `if test -f 'src/file_io.cc'; then $(CYGPATH_W) 'src/file_io.cc'; else $(CYGPATH_W) '$(srcdir)/src/file_io.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/process_shortreads-file_io.Tpo src/$(DEPDIR)/process_shortreads-file_io.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/file_io.cc' object='src/process_shortreads-file_io.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(process_shortreads_CXXFLAGS) $(CXXFLAGS) -c -o src/process_shortreads-file_io.obj `if test -f 'src/file_io.cc'; then $(CYGPATH_W) 'src/file_io.cc'; else $(CYGPATH_W) '$(srcdir)/src/file_io.cc'; fi`

src/process_shortreads-utils.o: src/utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(process_shortreads_CXXFLAGS) $(CXXFLAGS) -MT src/process_shortreads-utils.o -MD -MP -MF src/$(DEPDIR)/process_shortreads-utils.Tpo -c -o src/process_shortreads-utils.o `test -f 'src/utils.cc' || echo '$(srcdir)/'`src/utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/process_shortreads-utils.Tpo src/$(DEPDIR)/process_shortreads-utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/utils.cc' object='src/process_shortreads-utils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(process_shortreads_CXXFLAGS) $(CXXFLAGS) -c -o src/process_shortreads-utils.o `test -f 'src/utils.cc' || echo '$(srcdir)/'`src/utils.cc

src/process_shortreads-utils.obj: src/utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(process_shortreads_CXXFLAGS) $(CXXFLAGS) -MT src/process_shortreads-utils.obj -MD -MP -MF src/$(DEPDIR)/process_shortreads-utils.Tpo -c -o src/process_shortreads-utils.obj `if test -f 'src/utils.cc'; then $(CYGPATH_W) 'src/utils.cc'; else $(CYGPATH_W) '$(srcdir)/src/utils.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/process_shortreads-utils.Tpo src/$(DEPDIR)/process_shortreads-utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/utils.cc' object='src/process_shortreads-utils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(process_shortreads_CXXFLAGS) $(CXXFLAGS) -c -o src/process_shortreads-utils.obj `if test -f 'src/utils.cc'; then $(CYGPATH_W) 'src/utils.cc'; else $(CYGPATH_W) '$(srcdir)/src/utils.cc'; fi`

src/process_shortreads-log_utils.o: src/log_utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(process_shortreads_CXXFLAGS) $(CXXFLAGS) -MT src/process_shortreads-log_utils.o -MD -MP -MF src/$(DEPDIR)/process_shortreads-log_utils.Tpo -c -o src/process_shortreads-log_utils.o `test -f 'src/log_utils.cc' || echo '$(srcdir)/'`src/log_utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/process_shortreads-log_utils.Tpo src/$(DEPDIR)/process_shortreads-log_utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/log_utils.cc' object='src/process_shortreads-log_utils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(process_shortreads_CXXFLAGS) $(CXXFLAGS) -c -o src/process_shortreads-log_utils.o `test -f 'src/log_utils.cc' || echo '$(srcdir)/'`src/log_utils.cc

src/process_shortreads-log_utils.obj: src/log_utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(process_shortreads_CXXFLAGS) $(CXXFLAGS) -MT src/process_shortreads-log_utils.obj -MD -MP -MF src/$(DEPDIR)/process_shortreads-log_utils.Tpo -c -o src/process_shortreads-log_utils.obj `if test -f 'src/log_utils.cc'; then $(CYGPATH_W) 'src/log_utils.cc'; else $(CYGPATH_W) '$(srcdir)/src/log_utils.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/process_shortreads-log_utils.Tpo src/$(DEPDIR)/process_shortreads-log_utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/log_utils.cc' object='src/process_shortreads-log_utils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(process_shortreads_CXXFLAGS) $(CXXFLAGS) -c -o src/process_shortreads-log_utils.obj `if test -f 'src/log_utils.cc'; then $(CYGPATH_W) 'src/log_utils.cc'; else $(CYGPATH_W) '$(srcdir)/src/log_utils.cc'; fi`

src/process_shortreads-write.o: src/write.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(process_shortreads_CXXFLAGS) $(CXXFLAGS) -MT src/process_shortreads-write.o -MD -MP -MF src/$(DEPDIR)/process_shortreads-write.Tpo -c -o src/process_shortreads-write.o `test -f 'src/write.cc' || echo '$(srcdir)/'`src/write.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/process_shortreads-write.Tpo src/$(DEPDIR)/process_shortreads-write.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/write.cc' object='src/process_shortreads-write.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(process_shortreads_CXXFLAGS) $(CXXFLAGS) -c -o src/process_shortreads-write.o `test -f 'src/write.cc' || echo '$(srcdir)/'`src/write.cc

src/process_shortreads-write.obj: src/write.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(process_shortreads_CXXFLAGS) $(CXXFLAGS) -MT src/process_shortreads-write.obj -MD -MP -MF src/$(DEPDIR)/process_shortreads-write.Tpo -c -o src/process_shortreads-write.obj `if test -f 'src/write.cc'; then $(CYGPATH_W) 'src/write.cc'; else $(CYGPATH_W) '$(srcdir)/src/write.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/process_shortreads-write.Tpo src/$(DEPDIR)/process_shortreads-write.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/write.cc' object='src/process_shortreads-write.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(process_shortreads_CXXFLAGS) $(CXXFLAGS) -c -o src/process_shortreads-write.obj `if test -f 'src/write.cc'; then $(CYGPATH_W) 'src/write.cc'; else $(CYGPATH_W) '$(srcdir)/src/write.cc'; fi`

src/process_shortreads-kmers.o: src/kmers.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(process_shortreads_CXXFLAGS) $(CXXFLAGS) -MT src/process_shortreads-kmers.o -MD -MP -MF src/$(DEPDIR)/process_shortreads-kmers.Tpo -c -o src/process_shortreads-kmers.o `test -f 'src/kmers.cc' || echo '$(srcdir)/'`src/kmers.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/process_shortreads-kmers.Tpo src/$(DEPDIR)/process_shortreads-kmers.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/kmers.cc' object='src/process_shortreads-kmers.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(process_shortreads_CXXFLAGS) $(CXXFLAGS) -c -o src/process_shortreads-kmers.o `test -f 'src/kmers.cc' || echo '$(srcdir)/'`src/kmers.cc

src/process_shortreads-kmers.obj: src/kmers.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(process_shortreads_CXXFLAGS) $(CXXFLAGS) -MT src/process_shortreads-kmers.obj -MD -MP -MF src/$(DEPDIR)/process_shortreads-kmers.Tpo -c -o src/process_shortreads-kmers.obj `if test -f 'src/kmers.cc'; then $(CYGPATH_W) 'src/kmers.cc'; else $(CYGPATH_W) '$(srcdir)/src/kmers.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/process_shortreads-kmers.Tpo src/$(DEPDIR)/process_shortreads-kmers.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/kmers.cc' object='src/process_shortreads-kmers.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(process_shortreads_CXXFLAGS) $(CXXFLAGS) -c -o src/process_shortreads-kmers.obj `if test -f 'src/kmers.cc'; then $(CYGPATH_W) 'src/kmers.cc'; else $(CYGPATH_W) '$(srcdir)/src/kmers.cc'; fi`

src/process_shortreads-input.o: src/input.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(process_shortreads_CXXFLAGS) $(CXXFLAGS) -MT src/process_shortreads-input.o -MD -MP -MF src/$(DEPDIR)/process_shortreads-input.Tpo -c -o src/process_shortreads-input.o `test -f 'src/input.cc' || echo '$(srcdir)/'`src/input.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/process_shortreads-input.Tpo src/$(DEPDIR)/process_shortreads-input.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/input.cc' object='src/process_shortreads-input.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(process_shortreads_CXXFLAGS) $(CXXFLAGS) -c -o src/process_shortreads-input.o `test -f 'src/input.cc' || echo '$(srcdir)/'`src/input.cc

src/process_shortreads-input.obj: src/input.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(process_shortreads_CXXFLAGS) $(CXXFLAGS) -MT src/process_shortreads-input.obj -MD -MP -MF src/$(DEPDIR)/process_shortreads-input.Tpo -c -o src/process_shortreads-input.obj `if test -f 'src/input.cc'; then $(CYGPATH_W) 'src/input.cc'; else $(CYGPATH_W) '$(srcdir)/src/input.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/process_shortreads-input.Tpo src/$(DEPDIR)/process_shortreads-input.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/input.cc' object='src/process_shortreads-input.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(process_shortreads_CXXFLAGS) $(CXXFLAGS) -c -o src/process_shortreads-input.obj `if test -f 'src/input.cc'; then $(CYGPATH_W) 'src/input.cc'; else $(CYGPATH_W) '$(srcdir)/src/input.cc'; fi`

src/pstacks-pstacks.o: src/pstacks.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pstacks_CXXFLAGS) $(CXXFLAGS) -MT src/pstacks-pstacks.o -MD -MP -MF src/$(DEPDIR)/pstacks-pstacks.Tpo -c -o src/pstacks-pstacks.o `test -f 'src/pstacks.cc' || echo '$(srcdir)/'`src/pstacks.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/pstacks-pstacks.Tpo src/$(DEPDIR)/pstacks-pstacks.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/pstacks.cc' object='src/pstacks-pstacks.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/pstacks-pstacks.o `test -f 'src/pstacks.cc' || echo '$(srcdir)/'`src/pstacks.cc

src/pstacks-pstacks.obj: src/pstacks.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pstacks_CXXFLAGS) $(CXXFLAGS) -MT src/pstacks-pstacks.obj -MD -MP -MF src/$(DEPDIR)/pstacks-pstacks.Tpo -c -o src/pstacks-pstacks.obj `if test -f 'src/pstacks.cc'; then $(CYGPATH_W) 'src/pstacks.cc'; else $(CYGPATH_W) '$(srcdir)/src/pstacks.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/pstacks-pstacks.Tpo src/$(DEPDIR)/pstacks-pstacks.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/pstacks.cc' object='src/pstacks-pstacks.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/pstacks-pstacks.obj `if test -f 'src/pstacks.cc'; then $(CYGPATH_W) 'src/pstacks.cc'; else $(CYGPATH_W) '$(srcdir)/src/pstacks.cc'; fi`

src/pstacks-stacks.o: src/stacks.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pstacks_CXXFLAGS) $(CXXFLAGS) -MT src/pstacks-stacks.o -MD -MP -MF src/$(DEPDIR)/pstacks-stacks.Tpo -c -o src/pstacks-stacks.o `test -f 'src/stacks.cc' || echo '$(srcdir)/'`src/stacks.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/pstacks-stacks.Tpo src/$(DEPDIR)/pstacks-stacks.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/stacks.cc' object='src/pstacks-stacks.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/pstacks-stacks.o `test -f 'src/stacks.cc' || echo '$(srcdir)/'`src/stacks.cc

src/pstacks-stacks.obj: src/stacks.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pstacks_CXXFLAGS) $(CXXFLAGS) -MT src/pstacks-stacks.obj -MD -MP -MF src/$(DEPDIR)/pstacks-stacks.Tpo -c -o src/pstacks-stacks.obj `if test -f 'src/stacks.cc'; then $(CYGPATH_W) 'src/stacks.cc'; else $(CYGPATH_W) '$(srcdir)/src/stacks.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/pstacks-stacks.Tpo src/$(DEPDIR)/pstacks-stacks.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/stacks.cc' object='src/pstacks-stacks.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/pstacks-stacks.obj `if test -f 'src/stacks.cc'; then $(CYGPATH_W) 'src/stacks.cc'; else $(CYGPATH_W) '$(srcdir)/src/stacks.cc'; fi`

src/pstacks-mstack.o: src/mstack.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pstacks_CXXFLAGS) $(CXXFLAGS) -MT src/pstacks-mstack.o -MD -MP -MF src/$(DEPDIR)/pstacks-mstack.Tpo -c -o src/pstacks-mstack.o `test -f 'src/mstack.cc' || echo '$(srcdir)/'`src/mstack.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/pstacks-mstack.Tpo src/$(DEPDIR)/pstacks-mstack.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/mstack.cc' object='src/pstacks-mstack.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/pstacks-mstack.o `test -f 'src/mstack.cc' || echo '$(srcdir)/'`src/mstack.cc

src/pstacks-mstack.obj: src/mstack.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pstacks_CXXFLAGS) $(CXXFLAGS) -MT src/pstacks-mstack.obj -MD -MP -MF src/$(DEPDIR)/pstacks-mstack.Tpo -c -o src/pstacks-mstack.obj `if test -f 'src/mstack.cc'; then $(CYGPATH_W) 'src/mstack.cc'; else $(CYGPATH_W) '$(srcdir)/src/mstack.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/pstacks-mstack.Tpo src/$(DEPDIR)/pstacks-mstack.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/mstack.cc' object='src/pstacks-mstack.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/pstacks-mstack.obj `if test -f 'src/mstack.cc'; then $(CYGPATH_W) 'src/mstack.cc'; else $(CYGPATH_W) '$(srcdir)/src/mstack.cc'; fi`

src/pstacks-DNANSeq.o: src/DNANSeq.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pstacks_CXXFLAGS) $(CXXFLAGS) -MT src/pstacks-DNANSeq.o -MD -MP -MF src/$(DEPDIR)/pstacks-DNANSeq.Tpo -c -o src/pstacks-DNANSeq.o `test -f 'src/DNANSeq.cc' || echo '$(srcdir)/'`src/DNANSeq.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/pstacks-DNANSeq.Tpo src/$(DEPDIR)/pstacks-DNANSeq.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/DNANSeq.cc' object='src/pstacks-DNANSeq.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/pstacks-DNANSeq.o `test -f 'src/DNANSeq.cc' || echo '$(srcdir)/'`src/DNANSeq.cc

src/pstacks-DNANSeq.obj: src/DNANSeq.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pstacks_CXXFLAGS) $(CXXFLAGS) -MT src/pstacks-DNANSeq.obj -MD -MP -MF src/$(DEPDIR)/pstacks-DNANSeq.Tpo -c -o src/pstacks-DNANSeq.obj `if test -f 'src/DNANSeq.cc'; then $(CYGPATH_W) 'src/DNANSeq.cc'; else $(CYGPATH_W) '$(srcdir)/src/DNANSeq.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/pstacks-DNANSeq.Tpo src/$(DEPDIR)/pstacks-DNANSeq.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/DNANSeq.cc' object='src/pstacks-DNANSeq.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/pstacks-DNANSeq.obj `if test -f 'src/DNANSeq.cc'; then $(CYGPATH_W) 'src/DNANSeq.cc'; else $(CYGPATH_W) '$(srcdir)/src/DNANSeq.cc'; fi`

src/pstacks-DNASeq.o: src/DNASeq.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pstacks_CXXFLAGS) $(CXXFLAGS) -MT src/pstacks-DNASeq.o -MD -MP -MF src/$(DEPDIR)/pstacks-DNASeq.Tpo -c -o src/pstacks-DNASeq.o `test -f 'src/DNASeq.cc' || echo '$(srcdir)/'`src/DNASeq.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/pstacks-DNASeq.Tpo src/$(DEPDIR)/pstacks-DNASeq.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/DNASeq.cc' object='src/pstacks-DNASeq.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/pstacks-DNASeq.o `test -f 'src/DNASeq.cc' || echo '$(srcdir)/'`src/DNASeq.cc

src/pstacks-DNASeq.obj: src/DNASeq.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pstacks_CXXFLAGS) $(CXXFLAGS) -MT src/pstacks-DNASeq.obj -MD -MP -MF src/$(DEPDIR)/pstacks-DNASeq.Tpo -c -o src/pstacks-DNASeq.obj `if test -f 'src/DNASeq.cc'; then $(CYGPATH_W) 'src/DNASeq.cc'; else $(CYGPATH_W) '$(srcdir)/src/DNASeq.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/pstacks-DNASeq.Tpo src/$(DEPDIR)/pstacks-DNASeq.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/DNASeq.cc' object='src/pstacks-DNASeq.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/pstacks-DNASeq.obj `if test -f 'src/DNASeq.cc'; then $(CYGPATH_W) 'src/DNASeq.cc'; else $(CYGPATH_W) '$(srcdir)/src/DNASeq.cc'; fi`

src/pstacks-models.o: src/models.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pstacks_CXXFLAGS) $(CXXFLAGS) -MT src/pstacks-models.o -MD -MP -MF src/$(DEPDIR)/pstacks-models.Tpo -c -o src/pstacks-models.o `test -f 'src/models.cc' || echo '$(srcdir)/'`src/models.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/pstacks-models.Tpo src/$(DEPDIR)/pstacks-models.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/models.cc' object='src/pstacks-models.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/pstacks-models.o `test -f 'src/models.cc' || echo '$(srcdir)/'`src/models.cc

src/pstacks-models.obj: src/models.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pstacks_CXXFLAGS) $(CXXFLAGS) -MT src/pstacks-models.obj -MD -MP -MF src/$(DEPDIR)/pstacks-models.Tpo -c -o src/pstacks-models.obj `if test -f 'src/models.cc'; then $(CYGPATH_W) 'src/models.cc'; else $(CYGPATH_W) '$(srcdir)/src/models.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/pstacks-models.Tpo src/$(DEPDIR)/pstacks-models.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/models.cc' object='src/pstacks-models.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/pstacks-models.obj `if test -f 'src/models.cc'; then $(CYGPATH_W) 'src/models.cc'; else $(CYGPATH_W) '$(srcdir)/src/models.cc'; fi`

src/pstacks-utils.o: src/utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pstacks_CXXFLAGS) $(CXXFLAGS) -MT src/pstacks-utils.o -MD -MP -MF src/$(DEPDIR)/pstacks-utils.Tpo -c -o src/pstacks-utils.o `test -f 'src/utils.cc' || echo '$(srcdir)/'`src/utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/pstacks-utils.Tpo src/$(DEPDIR)/pstacks-utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/utils.cc' object='src/pstacks-utils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/pstacks-utils.o `test -f 'src/utils.cc' || echo '$(srcdir)/'`src/utils.cc

src/pstacks-utils.obj: src/utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pstacks_CXXFLAGS) $(CXXFLAGS) -MT src/pstacks-utils.obj -MD -MP -MF src/$(DEPDIR)/pstacks-utils.Tpo -c -o src/pstacks-utils.obj `if test -f 'src/utils.cc'; then $(CYGPATH_W) 'src/utils.cc'; else $(CYGPATH_W) '$(srcdir)/src/utils.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/pstacks-utils.Tpo src/$(DEPDIR)/pstacks-utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/utils.cc' object='src/pstacks-utils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/pstacks-utils.obj `if test -f 'src/utils.cc'; then $(CYGPATH_W) 'src/utils.cc'; else $(CYGPATH_W) '$(srcdir)/src/utils.cc'; fi`

src/pstacks-input.o: src/input.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pstacks_CXXFLAGS) $(CXXFLAGS) -MT src/pstacks-input.o -MD -MP -MF src/$(DEPDIR)/pstacks-input.Tpo -c -o src/pstacks-input.o `test -f 'src/input.cc' || echo '$(srcdir)/'`src/input.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/pstacks-input.Tpo src/$(DEPDIR)/pstacks-input.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/input.cc' object='src/pstacks-input.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/pstacks-input.o `test -f 'src/input.cc' || echo '$(srcdir)/'`src/input.cc

src/pstacks-input.obj: src/input.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pstacks_CXXFLAGS) $(CXXFLAGS) -MT src/pstacks-input.obj -MD -MP -MF src/$(DEPDIR)/pstacks-input.Tpo -c -o src/pstacks-input.obj `if test -f 'src/input.cc'; then $(CYGPATH_W) 'src/input.cc'; else $(CYGPATH_W) '$(srcdir)/src/input.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/pstacks-input.Tpo src/$(DEPDIR)/pstacks-input.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/input.cc' object='src/pstacks-input.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/pstacks-input.obj `if test -f 'src/input.cc'; then $(CYGPATH_W) 'src/input.cc'; else $(CYGPATH_W) '$(srcdir)/src/input.cc'; fi`

src/sstacks-sstacks.o: src/sstacks.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sstacks_CXXFLAGS) $(CXXFLAGS) -MT src/sstacks-sstacks.o -MD -MP -MF src/$(DEPDIR)/sstacks-sstacks.Tpo -c -o src/sstacks-sstacks.o `test -f 'src/sstacks.cc' || echo '$(srcdir)/'`src/sstacks.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/sstacks-sstacks.Tpo src/$(DEPDIR)/sstacks-sstacks.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/sstacks.cc' object='src/sstacks-sstacks.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/sstacks-sstacks.o `test -f 'src/sstacks.cc' || echo '$(srcdir)/'`src/sstacks.cc

src/sstacks-sstacks.obj: src/sstacks.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sstacks_CXXFLAGS) $(CXXFLAGS) -MT src/sstacks-sstacks.obj -MD -MP -MF src/$(DEPDIR)/sstacks-sstacks.Tpo -c -o src/sstacks-sstacks.obj `if test -f 'src/sstacks.cc'; then $(CYGPATH_W) 'src/sstacks.cc'; else $(CYGPATH_W) '$(srcdir)/src/sstacks.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/sstacks-sstacks.Tpo src/$(DEPDIR)/sstacks-sstacks.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/sstacks.cc' object='src/sstacks-sstacks.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/sstacks-sstacks.obj `if test -f 'src/sstacks.cc'; then $(CYGPATH_W) 'src/sstacks.cc'; else $(CYGPATH_W) '$(srcdir)/src/sstacks.cc'; fi`

src/sstacks-stacks.o: src/stacks.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sstacks_CXXFLAGS) $(CXXFLAGS) -MT src/sstacks-stacks.o -MD -MP -MF src/$(DEPDIR)/sstacks-stacks.Tpo -c -o src/sstacks-stacks.o `test -f 'src/stacks.cc' || echo '$(srcdir)/'`src/stacks.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/sstacks-stacks.Tpo src/$(DEPDIR)/sstacks-stacks.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/stacks.cc' object='src/sstacks-stacks.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/sstacks-stacks.o `test -f 'src/stacks.cc' || echo '$(srcdir)/'`src/stacks.cc

src/sstacks-stacks.obj: src/stacks.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sstacks_CXXFLAGS) $(CXXFLAGS) -MT src/sstacks-stacks.obj -MD -MP -MF src/$(DEPDIR)/sstacks-stacks.Tpo -c -o src/sstacks-stacks.obj `if test -f 'src/stacks.cc'; then $(CYGPATH_W) 'src/stacks.cc'; else $(CYGPATH_W) '$(srcdir)/src/stacks.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/sstacks-stacks.Tpo src/$(DEPDIR)/sstacks-stacks.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/stacks.cc' object='src/sstacks-stacks.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/sstacks-stacks.obj `if test -f 'src/stacks.cc'; then $(CYGPATH_W) 'src/stacks.cc'; else $(CYGPATH_W) '$(srcdir)/src/stacks.cc'; fi`

src/sstacks-locus.o: src/locus.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sstacks_CXXFLAGS) $(CXXFLAGS) -MT src/sstacks-locus.o -MD -MP -MF src/$(DEPDIR)/sstacks-locus.Tpo -c -o src/sstacks-locus.o `test -f 'src/locus.cc' || echo '$(srcdir)/'`src/locus.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/sstacks-locus.Tpo src/$(DEPDIR)/sstacks-locus.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/locus.cc' object='src/sstacks-locus.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/sstacks-locus.o `test -f 'src/locus.cc' || echo '$(srcdir)/'`src/locus.cc

src/sstacks-locus.obj: src/locus.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sstacks_CXXFLAGS) $(CXXFLAGS) -MT src/sstacks-locus.obj -MD -MP -MF src/$(DEPDIR)/sstacks-locus.Tpo -c -o src/sstacks-locus.obj `if test -f 'src/locus.cc'; then $(CYGPATH_W) 'src/locus.cc'; else $(CYGPATH_W) '$(srcdir)/src/locus.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/sstacks-locus.Tpo src/$(DEPDIR)/sstacks-locus.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/locus.cc' object='src/sstacks-locus.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/sstacks-locus.obj `if test -f 'src/locus.cc'; then $(CYGPATH_W) 'src/locus.cc'; else $(CYGPATH_W) '$(srcdir)/src/locus.cc'; fi`

src/sstacks-DNASeq.o: src/DNASeq.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sstacks_CXXFLAGS) $(CXXFLAGS) -MT src/sstacks-DNASeq.o -MD -MP -MF src/$(DEPDIR)/sstacks-DNASeq.Tpo -c -o src/sstacks-DNASeq.o `test -f 'src/DNASeq.cc' || echo '$(srcdir)/'`src/DNASeq.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/sstacks-DNASeq.Tpo src/$(DEPDIR)/sstacks-DNASeq.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/DNASeq.cc' object='src/sstacks-DNASeq.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/sstacks-DNASeq.o `test -f 'src/DNASeq.cc' || echo '$(srcdir)/'`src/DNASeq.cc

src/sstacks-DNASeq.obj: src/DNASeq.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sstacks_CXXFLAGS) $(CXXFLAGS) -MT src/sstacks-DNASeq.obj -MD -MP -MF src/$(DEPDIR)/sstacks-DNASeq.Tpo -c -o src/sstacks-DNASeq.obj `if test -f 'src/DNASeq.cc'; then $(CYGPATH_W) 'src/DNASeq.cc'; else $(CYGPATH_W) '$(srcdir)/src/DNASeq.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/sstacks-DNASeq.Tpo src/$(DEPDIR)/sstacks-DNASeq.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/DNASeq.cc' object='src/sstacks-DNASeq.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/sstacks-DNASeq.obj `if test -f 'src/DNASeq.cc'; then $(CYGPATH_W) 'src/DNASeq.cc'; else $(CYGPATH_W) '$(srcdir)/src/DNASeq.cc'; fi`

src/sstacks-DNANSeq.o: src/DNANSeq.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sstacks_CXXFLAGS) $(CXXFLAGS) -MT src/sstacks-DNANSeq.o -MD -MP -MF src/$(DEPDIR)/sstacks-DNANSeq.Tpo -c -o src/sstacks-DNANSeq.o `test -f 'src/DNANSeq.cc' || echo '$(srcdir)/'`src/DNANSeq.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/sstacks-DNANSeq.Tpo src/$(DEPDIR)/sstacks-DNANSeq.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/DNANSeq.cc' object='src/sstacks-DNANSeq.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/sstacks-DNANSeq.o `test -f 'src/DNANSeq.cc' || echo '$(srcdir)/'`src/DNANSeq.cc

src/sstacks-DNANSeq.obj: src/DNANSeq.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sstacks_CXXFLAGS) $(CXXFLAGS) -MT src/sstacks-DNANSeq.obj -MD -MP -MF src/$(DEPDIR)/sstacks-DNANSeq.Tpo -c -o src/sstacks-DNANSeq.obj `if test -f 'src/DNANSeq.cc'; then $(CYGPATH_W) 'src/DNANSeq.cc'; else $(CYGPATH_W) '$(srcdir)/src/DNANSeq.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/sstacks-DNANSeq.Tpo src/$(DEPDIR)/sstacks-DNANSeq.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/DNANSeq.cc' object='src/sstacks-DNANSeq.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/sstacks-DNANSeq.obj `if test -f 'src/DNANSeq.cc'; then $(CYGPATH_W) 'src/DNANSeq.cc'; else $(CYGPATH_W) '$(srcdir)/src/DNANSeq.cc'; fi`

src/sstacks-utils.o: src/utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sstacks_CXXFLAGS) $(CXXFLAGS) -MT src/sstacks-utils.o -MD -MP -MF src/$(DEPDIR)/sstacks-utils.Tpo -c -o src/sstacks-utils.o `test -f 'src/utils.cc' || echo '$(srcdir)/'`src/utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/sstacks-utils.Tpo src/$(DEPDIR)/sstacks-utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/utils.cc' object='src/sstacks-utils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/sstacks-utils.o `test -f 'src/utils.cc' || echo '$(srcdir)/'`src/utils.cc

src/sstacks-utils.obj: src/utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sstacks_CXXFLAGS) $(CXXFLAGS) -MT src/sstacks-utils.obj -MD -MP -MF src/$(DEPDIR)/sstacks-utils.Tpo -c -o src/sstacks-utils.obj `if test -f 'src/utils.cc'; then $(CYGPATH_W) 'src/utils.cc'; else $(CYGPATH_W) '$(srcdir)/src/utils.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/sstacks-utils.Tpo src/$(DEPDIR)/sstacks-utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/utils.cc' object='src/sstacks-utils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/sstacks-utils.obj `if test -f 'src/utils.cc'; then $(CYGPATH_W) 'src/utils.cc'; else $(CYGPATH_W) '$(srcdir)/src/utils.cc'; fi`

src/sstacks-input.o: src/input.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sstacks_CXXFLAGS) $(CXXFLAGS) -MT src/sstacks-input.o -MD -MP -MF src/$(DEPDIR)/sstacks-input.Tpo -c -o src/sstacks-input.o `test -f 'src/input.cc' || echo '$(srcdir)/'`src/input.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/sstacks-input.Tpo src/$(DEPDIR)/sstacks-input.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/input.cc' object='src/sstacks-input.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/sstacks-input.o `test -f 'src/input.cc' || echo '$(srcdir)/'`src/input.cc

src/sstacks-input.obj: src/input.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sstacks_CXXFLAGS) $(CXXFLAGS) -MT src/sstacks-input.obj -MD -MP -MF src/$(DEPDIR)/sstacks-input.Tpo -c -o src/sstacks-input.obj `if test -f 'src/input.cc'; then $(CYGPATH_W) 'src/input.cc'; else $(CYGPATH_W) '$(srcdir)/src/input.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/sstacks-input.Tpo src/$(DEPDIR)/sstacks-input.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/input.cc' object='src/sstacks-input.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sstacks_CXXFLAGS) $(CXXFLAGS) -c -o src/sstacks-input.obj `if test -f 'src/input.cc'; then $(CYGPATH_W) 'src/input.cc'; else $(CYGPATH_W) '$(srcdir)/src/input.cc'; fi`

src/ustacks-ustacks.o: src/ustacks.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ustacks_CXXFLAGS) $(CXXFLAGS) -MT src/ustacks-ustacks.o -MD -MP -MF src/$(DEPDIR)/ustacks-ustacks.Tpo -c -o src/ustacks-ustacks.o `test -f 'src/ustacks.cc' || echo '$(srcdir)/'`src/ustacks.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/ustacks-ustacks.Tpo src/$(DEPDIR)/ustacks-ustacks.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/ustacks.cc' object='src/ustacks-ustacks.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ustacks_CXXFLAGS) $(CXXFLAGS) -c -o src/ustacks-ustacks.o `test -f 'src/ustacks.cc' || echo '$(srcdir)/'`src/ustacks.cc

src/ustacks-ustacks.obj: src/ustacks.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ustacks_CXXFLAGS) $(CXXFLAGS) -MT src/ustacks-ustacks.obj -MD -MP -MF src/$(DEPDIR)/ustacks-ustacks.Tpo -c -o src/ustacks-ustacks.obj `if test -f 'src/ustacks.cc'; then $(CYGPATH_W) 'src/ustacks.cc'; else $(CYGPATH_W) '$(srcdir)/src/ustacks.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/ustacks-ustacks.Tpo src/$(DEPDIR)/ustacks-ustacks.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/ustacks.cc' object='src/ustacks-ustacks.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ustacks_CXXFLAGS) $(CXXFLAGS) -c -o src/ustacks-ustacks.obj `if test -f 'src/ustacks.cc'; then $(CYGPATH_W) 'src/ustacks.cc'; else $(CYGPATH_W) '$(srcdir)/src/ustacks.cc'; fi`

src/ustacks-stacks.o: src/stacks.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ustacks_CXXFLAGS) $(CXXFLAGS) -MT src/ustacks-stacks.o -MD -MP -MF src/$(DEPDIR)/ustacks-stacks.Tpo -c -o src/ustacks-stacks.o `test -f 'src/stacks.cc' || echo '$(srcdir)/'`src/stacks.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/ustacks-stacks.Tpo src/$(DEPDIR)/ustacks-stacks.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/stacks.cc' object='src/ustacks-stacks.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ustacks_CXXFLAGS) $(CXXFLAGS) -c -o src/ustacks-stacks.o `test -f 'src/stacks.cc' || echo '$(srcdir)/'`src/stacks.cc

src/ustacks-stacks.obj: src/stacks.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ustacks_CXXFLAGS) $(CXXFLAGS) -MT src/ustacks-stacks.obj -MD -MP -MF src/$(DEPDIR)/ustacks-stacks.Tpo -c -o src/ustacks-stacks.obj `if test -f 'src/stacks.cc'; then $(CYGPATH_W) 'src/stacks.cc'; else $(CYGPATH_W) '$(srcdir)/src/stacks.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/ustacks-stacks.Tpo src/$(DEPDIR)/ustacks-stacks.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/stacks.cc' object='src/ustacks-stacks.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ustacks_CXXFLAGS) $(CXXFLAGS) -c -o src/ustacks-stacks.obj `if test -f 'src/stacks.cc'; then $(CYGPATH_W) 'src/stacks.cc'; else $(CYGPATH_W) '$(srcdir)/src/stacks.cc'; fi`

src/ustacks-mstack.o: src/mstack.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ustacks_CXXFLAGS) $(CXXFLAGS) -MT src/ustacks-mstack.o -MD -MP -MF src/$(DEPDIR)/ustacks-mstack.Tpo -c -o src/ustacks-mstack.o `test -f 'src/mstack.cc' || echo '$(srcdir)/'`src/mstack.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/ustacks-mstack.Tpo src/$(DEPDIR)/ustacks-mstack.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/mstack.cc' object='src/ustacks-mstack.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ustacks_CXXFLAGS) $(CXXFLAGS) -c -o src/ustacks-mstack.o `test -f 'src/mstack.cc' || echo '$(srcdir)/'`src/mstack.cc

src/ustacks-mstack.obj: src/mstack.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ustacks_CXXFLAGS) $(CXXFLAGS) -MT src/ustacks-mstack.obj -MD -MP -MF src/$(DEPDIR)/ustacks-mstack.Tpo -c -o src/ustacks-mstack.obj `if test -f 'src/mstack.cc'; then $(CYGPATH_W) 'src/mstack.cc'; else $(CYGPATH_W) '$(srcdir)/src/mstack.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/ustacks-mstack.Tpo src/$(DEPDIR)/ustacks-mstack.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/mstack.cc' object='src/ustacks-mstack.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ustacks_CXXFLAGS) $(CXXFLAGS) -c -o src/ustacks-mstack.obj `if test -f 'src/mstack.cc'; then $(CYGPATH_W) 'src/mstack.cc'; else $(CYGPATH_W) '$(srcdir)/src/mstack.cc'; fi`

src/ustacks-mst.o: src/mst.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ustacks_CXXFLAGS) $(CXXFLAGS) -MT src/ustacks-mst.o -MD -MP -MF src/$(DEPDIR)/ustacks-mst.Tpo -c -o src/ustacks-mst.o `test -f 'src/mst.cc' || echo '$(srcdir)/'`src/mst.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/ustacks-mst.Tpo src/$(DEPDIR)/ustacks-mst.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/mst.cc' object='src/ustacks-mst.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ustacks_CXXFLAGS) $(CXXFLAGS) -c -o src/ustacks-mst.o `test -f 'src/mst.cc' || echo '$(srcdir)/'`src/mst.cc

src/ustacks-mst.obj: src/mst.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ustacks_CXXFLAGS) $(CXXFLAGS) -MT src/ustacks-mst.obj -MD -MP -MF src/$(DEPDIR)/ustacks-mst.Tpo -c -o src/ustacks-mst.obj `if test -f 'src/mst.cc'; then $(CYGPATH_W) 'src/mst.cc'; else $(CYGPATH_W) '$(srcdir)/src/mst.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/ustacks-mst.Tpo src/$(DEPDIR)/ustacks-mst.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/mst.cc' object='src/ustacks-mst.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ustacks_CXXFLAGS) $(CXXFLAGS) -c -o src/ustacks-mst.obj `if test -f 'src/mst.cc'; then $(CYGPATH_W) 'src/mst.cc'; else $(CYGPATH_W) '$(srcdir)/src/mst.cc'; fi`

src/ustacks-cmb.o: src/cmb.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ustacks_CXXFLAGS) $(CXXFLAGS) -MT src/ustacks-cmb.o -MD -MP -MF src/$(DEPDIR)/ustacks-cmb.Tpo -c -o src/ustacks-cmb.o `test -f 'src/cmb.cc' || echo '$(srcdir)/'`src/cmb.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/ustacks-cmb.Tpo src/$(DEPDIR)/ustacks-cmb.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/cmb.cc' object='src/ustacks-cmb.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ustacks_CXXFLAGS) $(CXXFLAGS) -c -o src/ustacks-cmb.o `test -f 'src/cmb.cc' || echo '$(srcdir)/'`src/cmb.cc

src/ustacks-cmb.obj: src/cmb.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ustacks_CXXFLAGS) $(CXXFLAGS) -MT src/ustacks-cmb.obj -MD -MP -MF src/$(DEPDIR)/ustacks-cmb.Tpo -c -o src/ustacks-cmb.obj `if test -f 'src/cmb.cc'; then $(CYGPATH_W) 'src/cmb.cc'; else $(CYGPATH_W) '$(srcdir)/src/cmb.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/ustacks-cmb.Tpo src/$(DEPDIR)/ustacks-cmb.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/cmb.cc' object='src/ustacks-cmb.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ustacks_CXXFLAGS) $(CXXFLAGS) -c -o src/ustacks-cmb.obj `if test -f 'src/cmb.cc'; then $(CYGPATH_W) 'src/cmb.cc'; else $(CYGPATH_W) '$(srcdir)/src/cmb.cc'; fi`

src/ustacks-DNASeq.o: src/DNASeq.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ustacks_CXXFLAGS) $(CXXFLAGS) -MT src/ustacks-DNASeq.o -MD -MP -MF src/$(DEPDIR)/ustacks-DNASeq.Tpo -c -o src/ustacks-DNASeq.o `test -f 'src/DNASeq.cc' || echo '$(srcdir)/'`src/DNASeq.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/ustacks-DNASeq.Tpo src/$(DEPDIR)/ustacks-DNASeq.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/DNASeq.cc' object='src/ustacks-DNASeq.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ustacks_CXXFLAGS) $(CXXFLAGS) -c -o src/ustacks-DNASeq.o `test -f 'src/DNASeq.cc' || echo '$(srcdir)/'`src/DNASeq.cc

src/ustacks-DNASeq.obj: src/DNASeq.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ustacks_CXXFLAGS) $(CXXFLAGS) -MT src/ustacks-DNASeq.obj -MD -MP -MF src/$(DEPDIR)/ustacks-DNASeq.Tpo -c -o src/ustacks-DNASeq.obj `if test -f 'src/DNASeq.cc'; then $(CYGPATH_W) 'src/DNASeq.cc'; else $(CYGPATH_W) '$(srcdir)/src/DNASeq.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/ustacks-DNASeq.Tpo src/$(DEPDIR)/ustacks-DNASeq.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/DNASeq.cc' object='src/ustacks-DNASeq.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ustacks_CXXFLAGS) $(CXXFLAGS) -c -o src/ustacks-DNASeq.obj `if test -f 'src/DNASeq.cc'; then $(CYGPATH_W) 'src/DNASeq.cc'; else $(CYGPATH_W) '$(srcdir)/src/DNASeq.cc'; fi`

src/ustacks-DNANSeq.o: src/DNANSeq.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ustacks_CXXFLAGS) $(CXXFLAGS) -MT src/ustacks-DNANSeq.o -MD -MP -MF src/$(DEPDIR)/ustacks-DNANSeq.Tpo -c -o src/ustacks-DNANSeq.o `test -f 'src/DNANSeq.cc' || echo '$(srcdir)/'`src/DNANSeq.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/ustacks-DNANSeq.Tpo src/$(DEPDIR)/ustacks-DNANSeq.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/DNANSeq.cc' object='src/ustacks-DNANSeq.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ustacks_CXXFLAGS) $(CXXFLAGS) -c -o src/ustacks-DNANSeq.o `test -f 'src/DNANSeq.cc' || echo '$(srcdir)/'`src/DNANSeq.cc

src/ustacks-DNANSeq.obj: src/DNANSeq.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ustacks_CXXFLAGS) $(CXXFLAGS) -MT src/ustacks-DNANSeq.obj -MD -MP -MF src/$(DEPDIR)/ustacks-DNANSeq.Tpo -c -o src/ustacks-DNANSeq.obj `if test -f 'src/DNANSeq.cc'; then $(CYGPATH_W) 'src/DNANSeq.cc'; else $(CYGPATH_W) '$(srcdir)/src/DNANSeq.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/ustacks-DNANSeq.Tpo src/$(DEPDIR)/ustacks-DNANSeq.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/DNANSeq.cc' object='src/ustacks-DNANSeq.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ustacks_CXXFLAGS) $(CXXFLAGS) -c -o src/ustacks-DNANSeq.obj `if test -f 'src/DNANSeq.cc'; then $(CYGPATH_W) 'src/DNANSeq.cc'; else $(CYGPATH_W) '$(srcdir)/src/DNANSeq.cc'; fi`

src/ustacks-models.o: src/models.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ustacks_CXXFLAGS) $(CXXFLAGS) -MT src/ustacks-models.o -MD -MP -MF src/$(DEPDIR)/ustacks-models.Tpo -c -o src/ustacks-models.o `test -f 'src/models.cc' || echo '$(srcdir)/'`src/models.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/ustacks-models.Tpo src/$(DEPDIR)/ustacks-models.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/models.cc' object='src/ustacks-models.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ustacks_CXXFLAGS) $(CXXFLAGS) -c -o src/ustacks-models.o `test -f 'src/models.cc' || echo '$(srcdir)/'`src/models.cc

src/ustacks-models.obj: src/models.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ustacks_CXXFLAGS) $(CXXFLAGS) -MT src/ustacks-models.obj -MD -MP -MF src/$(DEPDIR)/ustacks-models.Tpo -c -o src/ustacks-models.obj `if test -f 'src/models.cc'; then $(CYGPATH_W) 'src/models.cc'; else $(CYGPATH_W) '$(srcdir)/src/models.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/ustacks-models.Tpo src/$(DEPDIR)/ustacks-models.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/models.cc' object='src/ustacks-models.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ustacks_CXXFLAGS) $(CXXFLAGS) -c -o src/ustacks-models.obj `if test -f 'src/models.cc'; then $(CYGPATH_W) 'src/models.cc'; else $(CYGPATH_W) '$(srcdir)/src/models.cc'; fi`

src/ustacks-utils.o: src/utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ustacks_CXXFLAGS) $(CXXFLAGS) -MT src/ustacks-utils.o -MD -MP -MF src/$(DEPDIR)/ustacks-utils.Tpo -c -o src/ustacks-utils.o `test -f 'src/utils.cc' || echo '$(srcdir)/'`src/utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/ustacks-utils.Tpo src/$(DEPDIR)/ustacks-utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/utils.cc' object='src/ustacks-utils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ustacks_CXXFLAGS) $(CXXFLAGS) -c -o src/ustacks-utils.o `test -f 'src/utils.cc' || echo '$(srcdir)/'`src/utils.cc

src/ustacks-utils.obj: src/utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ustacks_CXXFLAGS) $(CXXFLAGS) -MT src/ustacks-utils.obj -MD -MP -MF src/$(DEPDIR)/ustacks-utils.Tpo -c -o src/ustacks-utils.obj `if test -f 'src/utils.cc'; then $(CYGPATH_W) 'src/utils.cc'; else $(CYGPATH_W) '$(srcdir)/src/utils.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/ustacks-utils.Tpo src/$(DEPDIR)/ustacks-utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/utils.cc' object='src/ustacks-utils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ustacks_CXXFLAGS) $(CXXFLAGS) -c -o src/ustacks-utils.obj `if test -f 'src/utils.cc'; then $(CYGPATH_W) 'src/utils.cc'; else $(CYGPATH_W) '$(srcdir)/src/utils.cc'; fi`

src/ustacks-kmers.o: src/kmers.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ustacks_CXXFLAGS) $(CXXFLAGS) -MT src/ustacks-kmers.o -MD -MP -MF src/$(DEPDIR)/ustacks-kmers.Tpo -c -o src/ustacks-kmers.o `test -f 'src/kmers.cc' || echo '$(srcdir)/'`src/kmers.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/ustacks-kmers.Tpo src/$(DEPDIR)/ustacks-kmers.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/kmers.cc' object='src/ustacks-kmers.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ustacks_CXXFLAGS) $(CXXFLAGS) -c -o src/ustacks-kmers.o `test -f 'src/kmers.cc' || echo '$(srcdir)/'`src/kmers.cc

src/ustacks-kmers.obj: src/kmers.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ustacks_CXXFLAGS) $(CXXFLAGS) -MT src/ustacks-kmers.obj -MD -MP -MF src/$(DEPDIR)/ustacks-kmers.Tpo -c -o src/ustacks-kmers.obj `if test -f 'src/kmers.cc'; then $(CYGPATH_W) 'src/kmers.cc'; else $(CYGPATH_W) '$(srcdir)/src/kmers.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/ustacks-kmers.Tpo src/$(DEPDIR)/ustacks-kmers.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/kmers.cc' object='src/ustacks-kmers.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ustacks_CXXFLAGS) $(CXXFLAGS) -c -o src/ustacks-kmers.obj `if test -f 'src/kmers.cc'; then $(CYGPATH_W) 'src/kmers.cc'; else $(CYGPATH_W) '$(srcdir)/src/kmers.cc'; fi`

src/ustacks-input.o: src/input.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ustacks_CXXFLAGS) $(CXXFLAGS) -MT src/ustacks-input.o -MD -MP -MF src/$(DEPDIR)/ustacks-input.Tpo -c -o src/ustacks-input.o `test -f 'src/input.cc' || echo '$(srcdir)/'`src/input.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/ustacks-input.Tpo src/$(DEPDIR)/ustacks-input.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/input.cc' object='src/ustacks-input.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ustacks_CXXFLAGS) $(CXXFLAGS) -c -o src/ustacks-input.o `test -f 'src/input.cc' || echo '$(srcdir)/'`src/input.cc

src/ustacks-input.obj: src/input.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ustacks_CXXFLAGS) $(CXXFLAGS) -MT src/ustacks-input.obj -MD -MP -MF src/$(DEPDIR)/ustacks-input.Tpo -c -o src/ustacks-input.obj `if test -f 'src/input.cc'; then $(CYGPATH_W) 'src/input.cc'; else $(CYGPATH_W) '$(srcdir)/src/input.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/ustacks-input.Tpo src/$(DEPDIR)/ustacks-input.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/input.cc' object='src/ustacks-input.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ustacks_CXXFLAGS) $(CXXFLAGS) -c -o src/ustacks-input.obj `if test -f 'src/input.cc'; then $(CYGPATH_W) 'src/input.cc'; else $(CYGPATH_W) '$(srcdir)/src/input.cc'; fi`
install-nobase_pkgdataDATA: $(nobase_pkgdata_DATA)
	@$(NORMAL_INSTALL)
	@list='$(nobase_pkgdata_DATA)'; test -n "$(pkgdatadir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgdatadir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgdatadir)" || exit 1; \
	fi; \
	$(am__nobase_list) | while read dir files; do \
	  xfiles=; for file in $$files; do \
	    if test -f "$$file"; then xfiles="$$xfiles $$file"; \
	    else xfiles="$$xfiles $(srcdir)/$$file"; fi; done; \
	  test -z "$$xfiles" || { \
	    test "x$$dir" = x. || { \
	      echo " $(MKDIR_P) '$(DESTDIR)$(pkgdatadir)/$$dir'"; \
	      $(MKDIR_P) "$(DESTDIR)$(pkgdatadir)/$$dir"; }; \
	    echo " $(INSTALL_DATA) $$xfiles '$(DESTDIR)$(pkgdatadir)/$$dir'"; \
	    $(INSTALL_DATA) $$xfiles "$(DESTDIR)$(pkgdatadir)/$$dir" || exit $$?; }; \
	done

uninstall-nobase_pkgdataDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nobase_pkgdata_DATA)'; test -n "$(pkgdatadir)" || list=; \
	$(am__nobase_strip_setup); files=`$(am__nobase_strip)`; \
	dir='$(DESTDIR)$(pkgdatadir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscope: cscope.files
	test ! -s cscope.files \
	  || $(CSCOPE) -b -q $(AM_CSCOPEFLAGS) $(CSCOPEFLAGS) -i cscope.files $(CSCOPE_ARGS)
clean-cscope:
	-rm -f cscope.files
cscope.files: clean-cscope cscopelist
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
	-rm -f cscope.out cscope.in.out cscope.po.out cscope.files

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	else \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all 
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
tests/process_radtags.t.log: tests/process_radtags.t
	@p='tests/process_radtags.t'; \
	b='tests/process_radtags.t'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/kmer_filter.t.log: tests/kmer_filter.t
	@p='tests/kmer_filter.t'; \
	b='tests/kmer_filter.t'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/ustacks.t.log: tests/ustacks.t
	@p='tests/ustacks.t'; \
	b='tests/ustacks.t'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/pstacks.t.log: tests/pstacks.t
	@p='tests/pstacks.t'; \
	b='tests/pstacks.t'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
@am__EXEEXT_TRUE@.test$(EXEEXT).log:
@am__EXEEXT_TRUE@	@p='$<'; \
@am__EXEEXT_TRUE@	$(am__set_b); \
@am__EXEEXT_TRUE@	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
@am__EXEEXT_TRUE@	--log-file $$b.log --trs-file $$b.trs \
@am__EXEEXT_TRUE@	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
@am__EXEEXT_TRUE@	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__post_remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2
	$(am__post_remove_distdir)

dist-lzip: distdir
	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz
	$(am__post_remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz
	$(am__post_remove_distdir)

dist-tarZ: distdir
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__post_remove_distdir)

dist-shar: distdir
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__post_remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__post_remove_distdir)

dist dist-all:
	$(MAKE) $(AM_MAKEFLAGS) $(DIST_TARGETS) am__post_remove_distdir='@:'
	$(am__post_remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lz*) \
	  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir)
	chmod u+w $(distdir)
	mkdir $(distdir)/_build $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
	    $(AM_DISTCHECK_CONFIGURE_FLAGS) \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__post_remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@test -n '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: trying to run $@ with an empty' \
	       '$$(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	$(am__cd) '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	test `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(PROGRAMS) $(SCRIPTS) $(DATA) config.h
installdirs:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(pkgdatadir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f src/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf src/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-nobase_pkgdataDATA
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-data-hook
install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-dist_binSCRIPTS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf src/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-dist_binSCRIPTS \
	uninstall-nobase_pkgdataDATA
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) uninstall-hook
.MAKE: all check-am install-am install-data-am install-strip \
	uninstall-am

.PHONY: CTAGS GTAGS TAGS all all-am am--refresh check check-TESTS \
	check-am clean clean-binPROGRAMS clean-cscope clean-generic \
	cscope cscopelist-am ctags ctags-am dist dist-all dist-bzip2 \
	dist-gzip dist-lzip dist-shar dist-tarZ dist-xz dist-zip \
	distcheck distclean distclean-compile distclean-generic \
	distclean-hdr distclean-tags distcleancheck distdir \
	distuninstallcheck dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-data-hook install-dist_binSCRIPTS \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-html install-html-am install-info install-info-am \
	install-man install-nobase_pkgdataDATA install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am recheck tags tags-am \
	uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-dist_binSCRIPTS uninstall-hook \
	uninstall-nobase_pkgdataDATA


debug:
	$(MAKE) all "CXXFLAGS=-g -Wall -DDEBUG"

install-data-hook:
	sed -e 's,_VERSION_,$(VERSION),' -e 's,_BINDIR_,$(bindir)/,g' -e 's,_PKGDATADIR_,$(pkgdatadir)/,g' $(DESTDIR)$(bindir)/denovo_map.pl > $(DESTDIR)$(bindir)/denovo_map.pl.subst
	mv $(DESTDIR)$(bindir)/denovo_map.pl.subst $(DESTDIR)$(bindir)/denovo_map.pl
	chmod +x $(DESTDIR)$(bindir)/denovo_map.pl
	sed -e 's,_VERSION_,$(VERSION),' -e 's,_BINDIR_,$(bindir)/,g' -e 's,_PKGDATADIR_,$(pkgdatadir)/,g' $(DESTDIR)$(bindir)/ref_map.pl > $(DESTDIR)$(bindir)/ref_map.pl.subst
	mv $(DESTDIR)$(bindir)/ref_map.pl.subst $(DESTDIR)$(bindir)/ref_map.pl
	chmod +x $(DESTDIR)$(bindir)/ref_map.pl
	sed -e 's,_VERSION_,$(VERSION),' -e 's,_PKGDATADIR_,$(pkgdatadir)/,g' $(DESTDIR)$(bindir)/export_sql.pl > $(DESTDIR)$(bindir)/export_sql.pl.subst
	mv $(DESTDIR)$(bindir)/export_sql.pl.subst $(DESTDIR)$(bindir)/export_sql.pl
	chmod +x $(DESTDIR)$(bindir)/export_sql.pl
	sed -e 's,_VERSION_,$(VERSION),' -e 's,_PKGDATADIR_,$(pkgdatadir)/,g' $(DESTDIR)$(bindir)/index_radtags.pl > $(DESTDIR)$(bindir)/index_radtags.pl.subst
	mv $(DESTDIR)$(bindir)/index_radtags.pl.subst $(DESTDIR)$(bindir)/index_radtags.pl
	chmod +x $(DESTDIR)$(bindir)/index_radtags.pl
	sed -e 's,_VERSION_,$(VERSION),' -e 's,_PKGDATADIR_,$(pkgdatadir)/,g' $(DESTDIR)$(bindir)/load_radtags.pl > $(DESTDIR)$(bindir)/load_radtags.pl.subst
	mv $(DESTDIR)$(bindir)/load_radtags.pl.subst $(DESTDIR)$(bindir)/load_radtags.pl
	chmod +x $(DESTDIR)$(bindir)/load_radtags.pl
	sed -e 's,_VERSION_,$(VERSION),' $(DESTDIR)$(bindir)/sort_read_pairs.pl > $(DESTDIR)$(bindir)/sort_read_pairs.pl.subst
	mv $(DESTDIR)$(bindir)/sort_read_pairs.pl.subst $(DESTDIR)$(bindir)/sort_read_pairs.pl
	chmod +x $(DESTDIR)$(bindir)/sort_read_pairs.pl
	sed -e 's,_VERSION_,$(VERSION),' $(DESTDIR)$(bindir)/exec_velvet.pl > $(DESTDIR)$(bindir)/exec_velvet.pl.subst
	mv $(DESTDIR)$(bindir)/exec_velvet.pl.subst $(DESTDIR)$(bindir)/exec_velvet.pl
	chmod +x $(DESTDIR)$(bindir)/exec_velvet.pl
	sed -e 's,_VERSION_,$(VERSION),' -e 's,_PKGDATADIR_,$(pkgdatadir)/,g' $(DESTDIR)$(bindir)/load_sequences.pl > $(DESTDIR)$(bindir)/load_sequences.pl.subst
	mv $(DESTDIR)$(bindir)/load_sequences.pl.subst $(DESTDIR)$(bindir)/load_sequences.pl
	chmod +x $(DESTDIR)$(bindir)/load_sequences.pl
	sed -e 's,_VERSION_,$(VERSION),' -e 's,_PKGDATADIR_,$(pkgdatadir)/,g' -e 's,_BINDIR_,$(bindir)/,g' \
		$(DESTDIR)$(bindir)/stacks_export_notify.pl > $(DESTDIR)$(bindir)/stacks_export_notify.pl.subst
	mv $(DESTDIR)$(bindir)/stacks_export_notify.pl.subst $(DESTDIR)$(bindir)/stacks_export_notify.pl
	chmod +x $(DESTDIR)$(bindir)/stacks_export_notify.pl
	sed -e 's,_PKGDATADIR_,$(pkgdatadir)/,g' -e 's,_BINDIR_,$(bindir)/,g' \
		$(DESTDIR)$(pkgdatadir)/php/constants.php.dist > $(DESTDIR)$(pkgdatadir)/php/constants.php.dist.subst
	mv $(DESTDIR)$(pkgdatadir)/php/constants.php.dist.subst $(DESTDIR)$(pkgdatadir)/php/constants.php.dist
	echo $(VERSION) > $(DESTDIR)$(pkgdatadir)/php/version.php
	$(install_sh) -d -m 755 $(DESTDIR)$(pkgdatadir)/php/export

uninstall-hook:
	rm -rf $(DESTDIR)$(pkglocalstatedir)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
