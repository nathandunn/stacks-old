Stacks 0.99996 - March 24, 2013
-------------------------------
	Feature: major overhaul of the process_radtags / process_shortreads programs to support
	combinatorial barcodes and double-digested data. Programs now support a mixture of
	barcodes from single-end inline or index barcodes, to mixtures of inline/index barcodes.
	    1) changed naming scheme for process_radtags/process_shortreads output files for
	paired reads. Changed file suffix to properly be ".fq" or ".fa", with paired-reads named
	sample_XXX.1.fq and sample_XXX.2.fq instead of the previous ".fq_1" and ".fq_2".
	    2) Paired-reads remain synced in output files, with sinlgetons written to
	sample_XXX.rem.1.fq and sample_XXX.rem.2.fq.
	    2) changed Phred+33 to be the default encoding scheme (previously was the now
	deprecated Phred+64)
	    3) Combinatorial barcdoes are specified as --inline_index or --inline_inline among a
	number of other supported possibilities. Barcodes are listed in the barcode file as either
	a single column or two, tab-separated columns.
	    4) Two restriction enzymes can now be specified via --renz_1 and --renz_2 to have the
	program check (and correct) the restriction enzyme cut site on the first and second read
	respectively.
	    5) programs now properly ignore files starting with "." which is required for Mac
	OS X's ".DS_Store" files and for "." and ".." on Linux.
	Bugfix: processing paired-end data with process_radtags could incorrectly alter the first
	few nucleotides of the paired-read when correcting barcodes.
	Bugfix: two regressions were fixed in process_shortreads causing all reads to be
	improperly trimmed.
	Bugfix: VCF output did not include sites fixed within and variable among populations.
	Bugfix: changed the parsing code to accept a wider range of Illumina named, paired-end
	files in process_radtags/shortreads.
	Bugfix: gzipped files were not read properly in process_radtags/shortreads when a directory
	was specified with -P.
	Bugfix: setting secondary read distance to 0 in ustacks (-N) was ineffective.
	Bugfix: changed the PHP code to remove 'Strict Standards' warnings and a few other warnings.
	Thanks to Yue Yu for tracking down the proper changes to avoid the warnings.

Stacks 0.99995 - February 19, 2013
----------------------------------
	Feature: added support for using Google's Sparsehash Object: http://code.google.com/p/sparsehash/
	If enabled at compile time, this object will replace all the hash maps with Google's sparsehash
	saving significant memory.
	Feature: removed the -S command line option from cstacks and sstacks. These programs now read this ID
	directly from the Stacks input files.
	Feature: altered ustacks to no longer store FASTQ/FASTA IDs from input files in memory to lower
	memory usage. Instead, an integer representing the read is stored and the IDs are read back in from
	disk just before results are written.
	Feature: added the '--write_single_snp' option to populations. When writing Genepop or Structure files
	this option will cause populations to write just the first SNP per locus to the file, avoiding potential
	problems with linked SNPs originating from the same locus.
	Feature: compressed the Hval/Stack/Rem objects to remove convenience integer variables to save memory.
	Feature: updated Stacks programs to use the newer TR1 unordered_map hash object instead of the
	deprecated SGI hash_map object.
	Bugfix: fixed a memory leak in cstacks in which not all of the Locus Class elements was being properly
	freed (only the SNP objects were being freed).
	Bugfix: Added code to denovo_map.pl/ref_map.pl to remove from the logfile the 'counter' lines that
	printed when initially loading radtags data.

Stacks 0.99994 - February 12, 2013
----------------------------------
	Bugfix: process_radtags/process_shortreads, when adding support for reads of different length, I
	clobbered the sequence truncation option. Fixed this regression.
	Bugfix: the kernel smoothing algorithms for calculating Fst, Pi, and Fis could sometimes segfault
	as some RAD sites can overlap. Added code to find and describe overlapping RAD sites and report these
	to the user.

Stacks 0.99993 - January 30, 2013
---------------------------------
	Feature: process_radtags/process_shortreads/ustacks can now read gzipped Fasta/Fastq input files.
	Feature: ref_map.pl/pstacks now supports the use of BAM alignment files. This feature is optional and must 
	be enabled during compilation. It requires the Samtools library to be installed.
	Bugfix: When using referenced aligned data, soft-masked alignments (Ns) were getting imporperly injected into
	the SNP models, which would call them as Homozygous Ns, and this data would eventually be passed to the 
	summary statistics in populations, which would make errant Fst calculations.
	Bugfix: In rare cases, sequences aligned to the negative strand had their base pair positions slightly off,
	this could cause a segfault during populations' kernel-smoothed Fst calculations.
	Bugfix: In populations, fixed a rare, infinite loop condition in Fisher's exact test for Fst calculations. 
	Could occur due to a floating point rounding error when calculating allele frequencies for Fst calculation.

Stacks 0.99992 - January 8, 2013
--------------------------------
	Bugfix: floating point command line options were not being processed correctly and may have been
	truncated.

Stacks 0.99991 - December 17, 2012
----------------------------------
	Feature: process_shortreads and process_radtags can now filter for adapter sequence in raw data, trimming 
	(process_shortreads) or discarding (process_shortreads/process_radtags) it. Mismatches to the adapter 
	sequence are allowed to accomodate for sequencing error.
	Bugfix: added --merge flag to process_shortreads/process_radtags to handle regression where unbarcoded
	data should be merged together into single output files.
	Bugfix: code in cstacks to characterize differentially fixed SNPs was only running with -n > 0, but
	should also run by default if -g is specified.
	Feature: made automated correction thresholds for the genotypes program accessible from the command
	line, including --min_hom_seqs, --min_het_seqs, and --max_het_seqs options.
	Feature: refactored clone_filter to be more functional. Now can output sequences in FASTA or FASTQ
	(FASTA will save memory). Keeps sequence headers intact, can capture discarded reads, and prints
	a distribution of the number of cloned read pairs.
	Bugfix: Remainder reads weren't being written properly as the file handles weren't properly closed.
	Bugfix: Processing paired reads with process_radtags/process_shortreads was not functioning correctly,
	barcode was not being transferred properly from P1 to P2 read. Regression introduce Aug 21, 2012.
	Feature: added support for OneMap CP map export in genotypes.
	Bugfix: Fixed some bugs in pstacks/ustacks command line processing involving --alpha and --model_type.
	Bugfix: several bugs in the exact and approximate bootstrap algorithms were corrected. These algorithms
	are now robust.
	Bugfix: Added code to ensure command line IDs are in fact integers.
	Bugfix: fixed nucleotide positions were not being tallied across populations properly resulting in an
	incorrect value for number of sites and percent polymorphic sites in the sumstats_summary file.
	Bugfix: pstacks could identify a locus that despite having SNPs would have no haplotypes generated.
	This would late cause sstacks to segfault. Added code in pstacks to blacklist these loci and code
	in sstacks to catch this case and not segfault, now will print a warning.

Stacks 0.9999 - October 03, 2012
--------------------------------
	Feature: two bootstrapping procedures have been introduced into the populations program to
	determine the statistical significance of kernel smoothed windows. These algorithms are controlled
	by the --bootstrap and --bootstrap_reps command line options.
	Feature: summary summary statistics are now written for all populations, giving the mean, variance,
	and standard error for each of the population-specific summary stats. In addition, private alleles
	are identified and marked in the sumstats file, and summarized across populations. Number and
	percent of polymorphic loci are also reported. The actual variable nucleotides at each site are now
	reported in the sumstats file.
	Feature: the populations program can now generate kernel-smoothed values for Fis and Pi, in addition
	to the current support for Fst.
	Feature: the populations program can now output SNP data for use in the program Structure.
	Feature: various sections of the populations program have been parallelized.
	Feature: the populations program can now output SNP data in the Phylip file format. If --phylip is
	specified, the populations program will identify SNPs that are fixed within populations, but variable
	between populations and output these in a Phylip file. This file can then be fed into any phylogenetics
	program, such as PhyML. This feature is equivalent to the analysis done in Emerson, et al., 2010. In
	addition, if the --phylip_var flag is specified as well, variable sites within populations are encoded
	into the Phylip file using standard alternative nucleotide encodings.
	Feature: for ustacks/pstacks, the alpha significance level can now be specified on the command line.
	Specifying --alpha to ustacks or pstacks will set the chi square significance level to determine
	whether a heterozygous or homozygous model call is statistically significant. Legal values of alpha are
	0.1, 0.05 (the previous default), 0.01, or 0.001.
	Feature: for ustacks/pstacks, a new bounded SNP calling model has been introduced, allowing limits to
	be set on the error rate. This model allows the calling of SNPs to be affected by prior knowledge
	as to how likely polymorphism is in the data set. This behavior is controlled by the --bound_low and
	--bound_high parameters to ustacks and pstacks.
	Feature: additional sections of ustacks has been parallelized. In addition, stack merging has been
	changed to occur in a single step (instead of in rounds as done previously).
	Feature: the deleveraging algorithm in ustacks has been replaced with a simple algorithm
	based on a minimum spanning tree. A new parameter has been introduced, --max_locus_stacks,
	which controls the number of stacks allowed to be merged together into a single locus. Loci that
	contain more than --max_locus_stacks stacks are set aside and not added to the catalog later on.
	Feature: export_sql.pl now has two depth parameters, allele and locus depth, allowing for the filtering 
	of loci based on either one.
	Feature: added a 'dry run' flag (-d) to denovo_map.pl and ref_map.pl to allow the pipeline to be tested
	to see what it would execute, before actually executing any programs.
	Bugfix: problem with the FASTA parser fixed (it was introduced with fixes to handle windows-style files).
	Bugfix: sample counts where off in batch_*.haplotypes.tsv file generated by populations program.

Stacks 0.9996 - August 24, 2012
-------------------------------
	Bugfix: fixed significant memory leak in Kmer hashing for both ustacks and cstacks. Results in an
	approximately 3.4x reduction in memory use for cstacks, and an approximately 1.6x reduction in
	ustacks.
	Feature: process_radtags and process_shortreads can handle non-Illumina FASTQ headers (any generic FASTQ type).
	Feature: process_radtags can process data without barcodes.
	Feature: process_radtags and process_shortreads can handle Illumina barcodes, when the barcode is not
	inline but is instead provided in the FASTQ header.
	Bugfix: Corrected the behavior of the '-m' parameter to populations and genotypes. It is meant to apply
	to the total depth of a stack at a locus, but was instead being applied to the depth of each allele at
	each locus.
	Feature: process_radtags and process_shortreads can now automatically discard reads marked as
	'failed' by Illumina's chastity/purity filter.
	Feature: added ecoT22I, mluCI, nlaIII, and sphI restriction enzymes to process_radtags
	Bugfix: modified Stacks programs to handle Windows-style line endings ('\r\n') from FASTQ, FASTA, and
	SAM files as well as population maps.
	Bugfix: changed populations' genepop output to only include loci that are variable in the populations
	specified. Previously, in some cases, additional fixed loci were included, which are not included in the
	VCF output, causing the two files to have different loci present.
	Bugfix: expected homozygosity and observed homozygosity were not being reported correctly in the sumstats
	files. The other population statistics were not affected by the bug.
	Feature: process_radtags and process_shortreads now print command and time executed to log file.

Stacks 0.9995 - July 05, 2012
-----------------------------
	Bugfix: Fst summary matrix was being incorrectly written.

Stacks 0.9994 - July 01, 2012
-----------------------------
	Feature: the populations program can now write a file in the GenePop format. GenePop files can be read
	by the GenePop program and converted for other population genetics programs such as Arlequin. Caution: you
	may not be able to include all loci from a Stacks run in the output as these programs aren't necessarily 
	capable of handling such a volume of data. However, you can use populations' whitelist feature to only
	include certain loci in the output.
	Feature: the populations program now writes an Fst summary file providing a matrix of mean Fst measures
	for each pair of populations in the analysis.
	Feature: added two filters to populations to require a locus to be present in a certain percentage of 
	individuals in a population, and requiring a locus to be present in a certain number of populations. If
	the former criteria is not reached, the locus is zeroed out only in the specific population, if the latter
	criteria is not met, the locus is discarded from the analysis.
	Feature: three Fst corrections are now provided by the populations program: requiring a locus to have a significant
	p-value (smaller than 0.05, although its configurable), applying a Bonferroni correction according to the number 
	of data points in the sliding window, and applying a Bonferroni correction according to the number of data points 
	in the genome. Loci that fail to reach statitical significance in each case are considered not different from zero
	and are set to zero.
	Feature: a filter can be specified to the populations program requiring a minimum allele frequency (MAF) at
	a locus to consider the locus variable. If an allele at a locus is below the MAF, the locus is considered fixed.
	Feature: when using a reference genome, Stacks can now work with samples of different sequence lengths.
	This means one can combine samples generated from different Illumina runs of different length. Each
	individual sample must be of the same length internally, however.
	Feature: pstacks can now handle gapped alignments properly. It parses the CIGAR string in the SAM file 
	and inserts/removes Ns to accomodate indels and soft-masked alignment fragments. This prevents the SNP
	model from mistakenly calling polymorphisms due to indel frameshifts.
	Bugfix: Removed O(n^2) algorithm from Sliding window Fst calculation in populations program, significant 
	speedup acheived. 
	Bugfix: Updated load_radtags.pl to support population types and to import sumstats, fst, and genotypes 
	files.
	Bugfix: fixed a small memory leak in DNANSeq.

Stacks 0.9993 - June 07, 2012
--------------------------------
	Feature: Added Fisher's Exact Test statistics to Fst estimates. This provides a p-value, an odds ratio
	along with a 95% confidence interval and a Log of Odds (LOD) score for each Fst estimate. These 
	statistics allow one to decide if a particular Fst measurement is significant. 
	Feature: denovo_map.pl and ref_map.pl now import population statistics files into the database (fst 
	and sumstats files).
	Feature: Web interface now displays summary statistics and Fst values for every locus.
	Feature: population names can now be directly added through the web interface and they will be stored
	in the database and propogated.

Stacks 0.9992 - May 22, 2012
--------------------------------
	Bugfix: fixed massive memory leak in Fst calcuations in populations program.
	Bugfix: if using a population map to calculate Fst in the populations program, some individuals could
	be inadvertently attributed to the wrong populations, due to a mismatch between the indices of the 
	population map (PopMap.h) and the indexes recorded for making the population summary (PopSum.h).
	Feature: population map can now be specified to denovo_map.pl and ref_map.pl. This data is 
	populated into the database and samples are displayed according to their population in the web interface.
	Feature: improved denovo_map.pl and ref_map.pl to check for existence of input files.
	Bugfix: export_sql.pl wasn't properly using the new filters that use a lower and upper bound (snps, alle, 
	pare).
	Feature: improved how values are generated for web-based filters, allowing for larger populations/maps.
	Improved HTML rendering for extremely long haplotype strings.
	Bugfix: corrected alleles to be output as "unphased" in VCF file; corrected homozygotes to be printed as 
	diploid values, e.g. '0/0' or '1/1' instead of just '0'.
	Bugfix: changed reporting of SNPs on samples.php page to specify total number of SNPs and the number
	of polymorphic loci (containing one or more SNPs).
	Bugfix: an extra tab was being placed in the VCF output file.
	Feature: added flag to process_radtags to disable checking the integrity of the RAD site in each raw 
	read. Added a flag to allow more nucleotide mismatches in the barcode when rescuing barcodes.

Stacks 0.9991 - April 17, 2012
--------------------------------
	Bugfix: replaced bit-rotted code causing all nucleotides to be masked as 'N' when fixed model engaged 
	on ustacks.

Stacks 0.999 - April 11, 2012
--------------------------------
	Feature: Added support for the 1000 Genomes Project, Variant Call Format (VCF) in the populations
	program. (http://www.1000genomes.org/node/101). This file output includes the genotype calls for 
	every individual for each locus, allele depth, and likelihood values for heterozygous SNP calls.

	Feature: implemented a three-bit compression scheme so that uncalled bases ('N's) can be stored 
	in compressed format in pstacks. Other stacks programs currently use two-bit compression which is 
	more compact, but can only store plain nucleotides ('A', 'C', 'G', 'T'). This restores earlier behavior
	that allowed Ns in pstacks prior to the implementation of the two-bit compression scheme.

	Bugfix: the populations program was only outputing sites to the summary statistics file (*.sumstats.tsv) 
	if they were heterozygous in a population. This could give the impression that the same site may be
	absent in other populations when in reality it was simply fixed in the other populations. Now, if a 
	site is heterozygous in any of the populations, it will be output for all populations.
	Bugfix: added lots of error checking code to populations so it properly handles 
	poorly formatted population maps, missing files, and similar errors.
	Bugfix: added uncalled bases ('n', 'N', and '.') to the reverse complement function (reads 
	aligned on the negative strand and processed by pstacks will be stored reverse complement.
	Bugfix: updated the PHP code as well as export_sql.pl to properly use the new filters for 
	chromosome, basepair, as well as lower and upper ranges to various filters.
	Other: Removed the deprecated markers.pl, genotypes.pl, and process_radtags.pl programs from the distribution.

Stacks 0.998 - January 06, 2012
--------------------------------
	Feature: Pipeline is now aware if samples are submitted as a 'population' or a 'mapping cross'.
	A new command line option, -s, has been added to denovo_map.pl and ref_map.pl that will label
	the dataset as a population. The -p/-r flags continue to keep the samples as a mapping cross.
	Feature: The web interface has been updated to display more information specific to populations.
	The filtering code has been changed to include lower and upper limits for filter fields such
	as SNPs, alleles, and number of parents/samples.

	Feature: A new program, populations, has been written to be executed in place of the exisiting
	genotypes program when a population is being processed through the pipeline. A map specifiying
	which individuals belong to which population is submitted to the program and the program will then
	calculate population genetics statistics, expected/observed heterzygosity, Pi, and Fis at each
	nucleotide position.
	Feature: the populations program will compare all populations pairwise to compute Fst. If a set
	of data is reference aligned, then a kernel-smoothed Fst will also be calculated.
	     These statistics were originally designed by Paul Hohenlohe and Bill Cresko, and are
	     described in the paper: Population Genomics of Parallel Adaptation in Threespine Stickleback
	     using Sequenced RAD Tags,
	     http://www.plosgenetics.org/article/info%3Adoi%2F10.1371%2Fjournal.pgen.1000862
	     They have been implemented independently in Stacks.

	Feature: added the DpnII enzyme to the process_radtags program.
	Feature: Added new 'model' line to *.tags.tsv files. This line records the output of the SNP
	model at every position in the read as either Homozygous (O), Heterozygous (E), or unknown (U).
	Previously only polymorphic loci were recorded in the SNPs file (and this remains unchanged). The
	model output line is now also available in the web interface.

	Bugfix: fixed crasher bug in cstacks when parallel processing was enabled for genomic-aligned data.
	Bugfix: allele depths are now properly reported in reference-aligned data.

Stacks 0.997 - November 22, 2011
--------------------------------
	Feature: new program, called clone_filter, that will take a set of paired-end reads and
	reduce them according to PCR clones (a PCR clone is a pair of reads that match exactly,
	while paried-end reads from two different DNA molecules will nearly always be slightly
	different lengths).
	Feature: new program, called kmer_filter, that allows paired or single-end reads to be
	filtered according to the number or rare or abundant kmers they contain. Useful for both
	RAD datasets as well as randomly sheared genomic or transcriptomic data.
	Feature: new program, called process_shortreads, performs the same task as process_radtags
	for fast cleaning of randomly sheared genomic or transcriptomic data (a 'beta' version of
	this program has actually been distributed in the last few Stacks releases).

	Feature: the Stacks tags.tsv file format has a new column to record the DNA strand that a
	particular read is aligned to, currently only used in datasets aligned to a reference genome.
	Feature: pstacks now reverse complements all stacks aligned to the negative strand and
	stores them in this orientation in the output files and database. (All aligners always present
	these reads in the positive orientation.) This change allows one to align reads to a reference
	genome using a gapped aligner, such as Tophat or GSNAP and have the RAD site still align with
	genomic data. (One can then compare genomic RAD tags along with cDNA RAD tags.)

	Feature: added the '-d' flag to export_sql.pl to export allele depths from the database.
	Feature: altered process_radtags to store orphaned, paired-end reads in a remainder file,
	keeping paired-reads in frame.
	Bugfix: fixed the handling of the paired-end barcode in process_shortreads, added a check
	to make sure the barcodes from both pairs of a read match.
	Bugfix: genotypes was not capitalizing auto-corrected genotypes in the generic format (it
	was in joinmap/rqtl specific formats).
	Bugfix: corrected cut site sequence for ApeKI in process_radtags.
	Bugfix: process_radtags inadvertantly used newly initialized memory that had not been
	cleared, causing rare parsing errors when uncleared memory resembled portions of a FASTQ record.
	Bugfix: the default MySQL permissions were not being properly passed to index_radatags.pl.
	Bugfix: changed load_radtags.pl to extract parental IDs from directly catalog files, instead of
	relying on file names.
	Feature: added a 'dry run' option to load_radtags.pl so it will print what it intends to do
	without actually doing it.

Stacks 0.996 - October 5, 2011
---------------------------------
	Web interface updates: 
	  * If the RAD tags are aligned to a reference genome, a filter is now available to view markers
	    from a particular genomic region.
	  * The individual RAD tag viewer now scrolls while keeping the scale view and consensus sequence
	    always visible. 
	  * The RAD tag viewer now highlights columns for which the catalog locus shows a SNP, but the
	    RAD tag does not.
	  * In the genotype viewer, the map between the haplotype and genotype is now available.
	  * The depth of each RAD tag is now visible in the genotype viewer.
	  * The genotype viewer has now been integrated with the observed haplotype viewer. You can 
	    make changes/corrections to genotypes directly now, no need to submit a form and wait for 
	    the page to reload.
	Bugfix: process_radtags wasn't properly parsing the names of v1 Illumnina BUSTARD files.
	Bugfix: process_radtags wasn't counting the total number of barceded paired-end reads correctly.
	Bugfix: sstacks' impute_haplotype() was causing spurious matching in some, error-based cases.
	Bugfix: build system was not properly replacing the _PKGDATADIR_ variable in denovo/ref_map.pl 
	programs.

Stacks 0.995 - September 23, 2011
---------------------------------
	Feature: sstacks can now handle samples and catalogs that have different length reads. 
	Each individual sample must be constructed from the same length reads (by ustacks and cstacks),
	but between samples there can be different lengths, e.g. a catalog of length 50bp and samples 
	of length 100bp, or vice versa.
	Feature: Added the ApeKI restriction enzyme to process_radtags
	Feature: process_radtags can now capture discarded reads to a file.
	Bugfix: a coding limitation was removed that required polymorphic sites in the catalog to 
	contain only two alleles. Now, all four alleles can be recorded at a single site in a locus in
	the catalog.
	Bugfix: Exporting results from the web interface was not including manual genotype corrections 
	when requested.

Stacks 0.994 - August 08, 2011
------------------------------
	Feature: added catalog index structure to cstacks to speed construction of catalog
	when using reference-aligned sequences.
	Feature: added a new output type, 'genomic' to genotypes. Outputs SNPs individually,
	encoded as a set of integers, for reference-aligned reads.
	Bugfix: pstacks was not writing individual stack sequences properly.
	Bugfix: process_radtags was still checking the quality of sequence that was 
	destined to be truncated off the read.
	Bugfix: process_radtags segfault fixed, parsing stop position
	mis-specified in parse_input_record().

Stacks 0.993 - August 05, 2011
------------------------------
	Memory usage optimization: Individual sequence reads are now stored internally 
	using a 2-bit encoding of DNA nucleotides. Some simple benchmarking of 
	ustacks (previous version / new version):

	 Sample size         Elapsed Time       Used Memory
	-------------     -----------------    -------------
	 3.78m reads         3:16 /    3:23     4.64G /  1.86G
	17.62m reads      1:31:21 / 1:43:54    55.55G / 45.42G

	Feature: Added the programs sort_read_pairs.pl, exec_velvet.pl, load_sequences.pl
	to facilitate the assembly of paired-end RAD-Tags into mini-contigs and allow them
	to be uploaded into and viewed from the web interface.
	Bugfix: made process_radtags emit an error when an unrecognized
	restriction enzyme is specified.
	Bugfix: made process_radtags accept barcodes with trailing whitespace,
	such as would be seen in a DOS text file or if errant tabs are
	specified.

Stacks 0.992 - July 04, 2011
----------------------------
	Feature: process_radtags can now handle Phred+33 or Phred+64 encodings, Phred+33 is
	the new default encoding in Illumina's CASAVA software (v1.8).
	Bugfix: Changed the sql input parser to handle variable length input
	lines. Necessary if loading tens of individuals into a catalog.
	Bugfix: Added command line options to ustacks to better control the use of secondary reads 
	in the stack-building procedure.

Stacks 0.991 - June 06, 2011
----------------------------
	Bugfix: genotypes was failing to parse Stacks output files with
	unanticipated names.
	Bugfix: when using ref_map.pl, tags without SNPs were failing to match
	against the catalog.

Stacks 0.99 - May 20, 2011
--------------------------
	*A new C++ genotypes program has been added. This program works independently from the 
	database allowing the pipeline to fully function without installing the database. The
	new program performs the tasks once completed by markers.pl and genotypes.pl.
	    - The pipeline has been modified to now automatically execute the genotypes program
	      as the last stage in an analysis. It will generate a file containing the observed
	      haplotypes and an additional file containing a map-agnostic set of genotype calls.
	    - If SQL interaction is enabled, the genotypes will be imported to the database and 
	      serve as a base to export genotypes directly from the web interface for a particular
	      map and using the set of filters available online.
	    - If a population is being examinined, the observed haplotypes file can be imported into
	      Microsoft Excel or another tab-separated file viewer to immediately see the results.
	    - By replacing the Perl version of genotypes.pl we also no longer need to install or 
	      worry about the caching mechanism for auto-correcting stacks, the C++ version can do
	      this by directly reading the Stacks output files.
	*markers.pl and genotypes.pl are now deprecated and will no longer be supported.
	*Feature: When exporting observed haplotypes, you can now specify a
	minimum stack depth to include a particular individual at a locus.
	*Feature: map-specific genotypes can now be exported directly from the
	database/web server.
	*Bugfix: genotypes.pl: make script ignore parental genotypes based on
	the sample type from the MySQL table, not based on the file name.
	*Bugfix: genotypes.pl: some loci were sneaking in despite being under
	the progeny limit.
	*Bugfix: made process_radtags Bustard file parser check number of fields to prevent
	attempting to parse FASTQ (and segfaulting). Thanks to
	Maureen.Liu -at- nottingham.ac.uk for reporting it.
	*Bugfix: in sstacks, when matching to the catalog using reads aligned
	to a reference genome (-g), sstacks did not verify that haplotypes
	matched exactly, causing some spurious matching, which later
	translated into dropped genotypes.
	*Bugfix: in markers.pl, the ratio observed alleles in the progeny was
	not being tallied correctly for ab/ac markers.

Stacks 0.984 - May 04, 2011
---------------------------
	*Bugfix: renamed constants.php to constants.php.dist to avoid
	overwriting an existing file on reinstallation.
	*Feature: process_radtags has been converted to a C++ program
	increasing its speed by approximately 25x. The parameters were
	modified to be a little more intuitive and parameters were added to
	control the size and score limit of the sliding window. The program
	can process a GAII lane in about 5 minutes, a HiSeq lane in about 12
	minutes, depending on the hardware used.

Stacks 0.983 - Apr 30, 2011
---------------------------
	*Bugfix: sstacks segfault when running parallelized. Improper
	insertion into map object when it should have only been checking for
	element presence/absence. Thanks to <yannick -dot- wurm -at- unil -dot- ch>
	for first reporting it.
	*Feature: added code to impute the genotype of a missing, second
	parent for some map types. This code adds up all the observed
	haplotypes in the progeny and then compares their frequencies against
	those that would be expected for the marker under Hardy-Weinberg
	equilibrium, choosing the marker type that best fits the
	Hardy-Weinberg expectation.

Stacks 0.982 - Mar 29, 2011
---------------------------
	*Bugfix: process_radtags.pl was not properly parsing FASTQ formated,
	 paired-end file names.
	*Bugfix: counts of matching parents/progeny were sometimes incorrect
	 due to a slightly promiscuous SQL query in index_radtags.pl.

Stacks 0.98 - Feb 25, 2011
---------------------------
        Note: if you have pre-existing databases, you must rebuild the catalog
	index (index_radtags.pl -D db -c) so that they are compatible with 
	the new elements of the web interface.

	*Added option to pstacks to require a minimum depth of coverage for 
	 a stack aligned to the refernce genome before reporting it.
	*Added double haploid (DH) and F2 export types to the genotypes.pl
	 script.
	*Added option to output any map in R/QTL output in genotypes.pl
	*Added feature to filter by number of available genotypes in progeny
	*Added command line option to ustacks to capture and output unused
         reads.
	*Added display of chromosome/base pair to web interface for stacks 
	 aligned to a reference genome.
	*Bugfix: FASTA parser was missing records due to a bug introduced from
	 a FASTQ parser fix.
	*Bugfix: process_radtags.pl was not properly checking the integrity of 
	 the RAD site after adding restriction enzymes with alternate
	 nucleotides.
	*Bugfix: when constructing the catalog, some tags being added to the
	 did not have their genomic location transferred over to a new catalog 
	 tag.
	*Modified sstacks to include an option to match stacks against the
	 catalog based on the genomic location (assuming individuals were
	 processed with pstacks).
        *Bugfix: Lots of clean-ups and command line option fixes, thanks 
	 to <yannick -dot- wurm -at- unil -dot- ch>.

Stacks 0.971 - Jan 30, 2011
---------------------------
	*Illumina software version 1.3 produces Phred scores that can begin 
	 with a '@' character, throwing off the FASTQ parser. Added code to 
	 clear the read buffer in between records to solve the problem. Thanks 
	 to Aarti <aartiv -at- uchicago -dot- edu> for finding the bug.

Stacks 0.97
---------------------------
	*ustacks now detects when there are uncalled nucleotides in FASTA or 
	 FASTQ input files, replaces those bases with 'A'.
	*process_radtags.pl now detects barcode length automatically. Removed 
	 spurious error messages when no data is processed.

Stacks 0.96 - Jan 7, 2011
---------------------------
	*Fixed typo in README giving the wrong file path for the Apache 
	 configuration file.
	*Fixed several hard-coded paths in PHP files that referred to our local 
	 system.
