0. Prerequisites

Stacks should build on any standard UNIX-like environment (Apple OS X, Linux, 
etc.) To make full use of the system, however, Stacks utilizes the MySQL database
server to provide various functions to store, sort, and export the data. 

Several Perl scripts are distributed with Stacks to provide the MySQL interaction. For
these to work, you must have the Perl DBI module installed with the MySQL driver.

Likewise, to view the data, Stacks uses a web-based interface (written in PHP) that 
interacts with the database. For this to work, you must have a PHP-enabled web server 
installed as well as the MDB2 Pear module to provide MySQL interaction.

If you want to export data in Microsoft Excel Spreadsheets, you will need the 
Spreadsheet::WriteExcel Perl module.

Most server installations will provide Apache, MySQL, Perl, and PHP by default. While 
installing these components is beyond these instructions, here are some links that might
be useful:

  1. MySQL Database: http://www.mysql.com/downloads/mysql/
  2. Perl interface to MySQL: http://search.cpan.org/dist/DBD-mysql/
  3. Spreadsheet Perl Module: http://search.cpan.org/~jmcnamara/Spreadsheet-WriteExcel-2.37/
  4. MDB2 Pear Module: http://pear.php.net/package/MDB2/

(Perl modules are easily installed with the cpan tool, and similarly, PHP modules are
 easily installed with the pear tool. Many operating systems already have these tools
 installed - such as OS X and some Linux distributions.)

1. Build the software. Stacks uses the standard autotools install:

% tar xfvz stacks_x.xx.tar.gz
% cd stacks_x.xx
% ./configure
% make
(become root)
# make install

You can change the root of the install location (/usr/local/ on most
operating systems) by specifying the --prefix command line option to
the configure script.

% ./configure --prefix=/home/smith/local

A default install will install files in the following way:

/usr/local/bin - stacks executables and perl scripts

/usr/local/share/stacks - PHP files for the web interface 
                          and SQL files for creating the 
                          MySQL database

/usr/local/var/stacks/cache - a directory for caching database 
                              results when exporting genotypes.

2. Edit the MySQL configuration file, installed in
/usr/local/share/stacks/sql/mysql.cnf.dist, to enable access to the
database from the Stacks scripts.

% cd /usr/local/share/stacks/
% cp mysql.cnf.dist mysql.cnf

Edit the file to reflect the proper username, password, and host to
use to access MySQL.

The various scripts that access the database will search for a MySQL
configuration file in your home directory before using the
Stacks-distributed copy. If you already have a personal account set up
and configured (in ~/.my.cnf) you can continue to use these
credentials instead of setting up new, common ones.

3. Enable the Stacks web interface in the Apache webserver.

Add the following lines to your Apache configuration to make the Stacks PHP
files visible to the web server and to provide a easily readable URL to access
them: 

<Directory "/usr/local/share/stacks/php">
        Order deny,allow
        Deny from all
        Allow from all
</Directory>

Alias /stacks "/usr/local/share/stacks/php"

(See the Apache configuration for more information on what these do:
http://httpd.apache.org/docs/2.0/mod/core.html#directory)

Edit the PHP configuration file (constants.php) to allow it access to the 
MySQL database. Change the file to include the proper database
username ($db_user), password ($db_pass), and hostname ($db_host).

% vi /usr/local/share/stacks/php/constants.php

You may find it advantageous to create a specific MySQL user with limited
permissions - SELECT, UPDATE, and DELETE to allow users to interact
with the database through the web interface.

4. Enable web-based exporting from the MySQL database.

Edit the stacks_export_notify.pl script to specify the email and SMTP
server to use in notification messages.

Ensure that the permissions of the php/export directory allow the
webserver to write to it. Assuming your web server user is 'www':

% chown www /usr/local/share/stacks/php/export

5. Change the permissions on the cache directory (default /usr/local/var/stacks/cache)
so that the user executing the Stacks pipeline will have permissions to write
to the directory.
